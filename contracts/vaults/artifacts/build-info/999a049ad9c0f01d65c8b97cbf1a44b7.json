{
	"id": "999a049ad9c0f01d65c8b97cbf1a44b7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.9",
	"solcLongVersion": "0.8.9+commit.e5eed63a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		},
		"sources": {
			"contracts/vaults/UniV3VaultGovernance.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity 0.8.9;\r\n\r\nimport \"../interfaces/vaults/IUniV3VaultGovernance.sol\";\r\nimport \"../interfaces/vaults/IUniV3Vault.sol\";\r\nimport \"../libraries/ExceptionsLibrary.sol\";\r\nimport \"../utils/ContractMeta.sol\";\r\nimport \"./VaultGovernance.sol\";\r\n\r\n/// @notice Governance that manages all UniV3 Vaults params and can deploy a new UniV3 Vault.\r\ncontract UniV3VaultGovernance is ContractMeta, IUniV3VaultGovernance, VaultGovernance {\r\n    /// @notice Creates a new contract.\r\n    /// @param internalParams_ Initial Internal Params\r\n    /// @param delayedProtocolParams_ Initial Protocol Params\r\n    constructor(InternalParams memory internalParams_, DelayedProtocolParams memory delayedProtocolParams_)\r\n        VaultGovernance(internalParams_)\r\n    {\r\n        require(address(delayedProtocolParams_.positionManager) != address(0), ExceptionsLibrary.ADDRESS_ZERO);\r\n        require(address(delayedProtocolParams_.oracle) != address(0), ExceptionsLibrary.ADDRESS_ZERO);\r\n        _delayedProtocolParams = abi.encode(delayedProtocolParams_);\r\n    }\r\n\r\n    // -------------------  EXTERNAL, VIEW  -------------------\r\n\r\n    /// @inheritdoc IUniV3VaultGovernance\r\n    function delayedProtocolParams() public view returns (DelayedProtocolParams memory) {\r\n        // params are initialized in constructor, so cannot be 0\r\n        return abi.decode(_delayedProtocolParams, (DelayedProtocolParams));\r\n    }\r\n\r\n    /// @inheritdoc IUniV3VaultGovernance\r\n    function stagedDelayedProtocolParams() external view returns (DelayedProtocolParams memory) {\r\n        if (_stagedDelayedProtocolParams.length == 0) {\r\n            return\r\n                DelayedProtocolParams({\r\n                    positionManager: INonfungiblePositionManager(address(0)),\r\n                    oracle: IOracle(address(0))\r\n                });\r\n        }\r\n        return abi.decode(_stagedDelayedProtocolParams, (DelayedProtocolParams));\r\n    }\r\n\r\n    /// @inheritdoc IUniV3VaultGovernance\r\n    function stagedDelayedStrategyParams(uint256 nft) external view returns (DelayedStrategyParams memory) {\r\n        if (_stagedDelayedStrategyParams[nft].length == 0) {\r\n            return DelayedStrategyParams({safetyIndicesSet: 0});\r\n        }\r\n        return abi.decode(_stagedDelayedStrategyParams[nft], (DelayedStrategyParams));\r\n    }\r\n\r\n    /// @inheritdoc IUniV3VaultGovernance\r\n    function delayedStrategyParams(uint256 nft) external view returns (DelayedStrategyParams memory) {\r\n        if (_delayedStrategyParams[nft].length == 0) {\r\n            return DelayedStrategyParams({safetyIndicesSet: 0x2A});\r\n        }\r\n        return abi.decode(_delayedStrategyParams[nft], (DelayedStrategyParams));\r\n    }\r\n\r\n    /// @inheritdoc IERC165\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        return super.supportsInterface(interfaceId) || type(IUniV3VaultGovernance).interfaceId == interfaceId;\r\n    }\r\n\r\n    // -------------------  EXTERNAL, MUTATING  -------------------\r\n\r\n    /// @inheritdoc IUniV3VaultGovernance\r\n    function stageDelayedProtocolParams(DelayedProtocolParams calldata params) external {\r\n        require(address(params.positionManager) != address(0), ExceptionsLibrary.ADDRESS_ZERO);\r\n        require(address(params.oracle) != address(0), ExceptionsLibrary.ADDRESS_ZERO);\r\n        _stageDelayedProtocolParams(abi.encode(params));\r\n        emit StageDelayedProtocolParams(tx.origin, msg.sender, params, _delayedProtocolParamsTimestamp);\r\n    }\r\n\r\n    /// @inheritdoc IUniV3VaultGovernance\r\n    function commitDelayedProtocolParams() external {\r\n        _commitDelayedProtocolParams();\r\n        emit CommitDelayedProtocolParams(\r\n            tx.origin,\r\n            msg.sender,\r\n            abi.decode(_delayedProtocolParams, (DelayedProtocolParams))\r\n        );\r\n    }\r\n\r\n    /// @inheritdoc IUniV3VaultGovernance\r\n    function stageDelayedStrategyParams(uint256 nft, DelayedStrategyParams calldata params) external {\r\n        require(params.safetyIndicesSet > 1, ExceptionsLibrary.LIMIT_UNDERFLOW);\r\n        _stageDelayedStrategyParams(nft, abi.encode(params));\r\n        emit StageDelayedStrategyParams(tx.origin, msg.sender, nft, params, _delayedStrategyParamsTimestamp[nft]);\r\n    }\r\n\r\n    /// @inheritdoc IUniV3VaultGovernance\r\n    function commitDelayedStrategyParams(uint256 nft) external {\r\n        _commitDelayedStrategyParams(nft);\r\n        emit CommitDelayedStrategyParams(\r\n            tx.origin,\r\n            msg.sender,\r\n            nft,\r\n            abi.decode(_delayedStrategyParams[nft], (DelayedStrategyParams))\r\n        );\r\n    }\r\n\r\n    /// @inheritdoc IUniV3VaultGovernance\r\n    function createVault(\r\n        address[] memory vaultTokens_,\r\n        address owner_,\r\n        uint24 fee_,\r\n        address uniV3Helper_\r\n    ) external returns (IUniV3Vault vault, uint256 nft) {\r\n        address vaddr;\r\n        (vaddr, nft) = _createVault(owner_);\r\n        vault = IUniV3Vault(vaddr);\r\n        vault.initialize(nft, vaultTokens_, fee_, uniV3Helper_);\r\n        emit DeployedVault(tx.origin, msg.sender, vaultTokens_, abi.encode(fee_), owner_, vaddr, nft);\r\n    }\r\n\r\n    // -------------------  INTERNAL, VIEW  -------------------\r\n\r\n    function _contractName() internal pure override returns (bytes32) {\r\n        return bytes32(\"UniV3VaultGovernance\");\r\n    }\r\n\r\n    function _contractVersion() internal pure override returns (bytes32) {\r\n        return bytes32(\"1.1.0\");\r\n    }\r\n\r\n    // --------------------------  EVENTS  --------------------------\r\n\r\n    /// @notice Emitted when new DelayedProtocolParams are staged for commit\r\n    /// @param origin Origin of the transaction (tx.origin)\r\n    /// @param sender Sender of the call (msg.sender)\r\n    /// @param params New params that were staged for commit\r\n    /// @param when When the params could be committed\r\n    event StageDelayedProtocolParams(\r\n        address indexed origin,\r\n        address indexed sender,\r\n        DelayedProtocolParams params,\r\n        uint256 when\r\n    );\r\n    /// @notice Emitted when new DelayedProtocolParams are committed\r\n    /// @param origin Origin of the transaction (tx.origin)\r\n    /// @param sender Sender of the call (msg.sender)\r\n    /// @param params New params that are committed\r\n    event CommitDelayedProtocolParams(address indexed origin, address indexed sender, DelayedProtocolParams params);\r\n\r\n    /// @notice Emitted when new DelayedStrategyParams are staged for commit\r\n    /// @param origin Origin of the transaction (tx.origin)\r\n    /// @param sender Sender of the call (msg.sender)\r\n    /// @param nft VaultRegistry NFT of the vault\r\n    /// @param params New params that were staged for commit\r\n    /// @param when When the params could be committed\r\n    event StageDelayedStrategyParams(\r\n        address indexed origin,\r\n        address indexed sender,\r\n        uint256 indexed nft,\r\n        DelayedStrategyParams params,\r\n        uint256 when\r\n    );\r\n\r\n    /// @notice Emitted when new DelayedStrategyParams are committed\r\n    /// @param origin Origin of the transaction (tx.origin)\r\n    /// @param sender Sender of the call (msg.sender)\r\n    /// @param nft VaultRegistry NFT of the vault\r\n    /// @param params New params that are committed\r\n    event CommitDelayedStrategyParams(\r\n        address indexed origin,\r\n        address indexed sender,\r\n        uint256 indexed nft,\r\n        DelayedStrategyParams params\r\n    );\r\n}\r\n"
			},
			"contracts/vaults/VaultGovernance.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\r\npragma solidity 0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/proxy/Clones.sol\";\r\nimport \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\r\nimport \"../interfaces/IProtocolGovernance.sol\";\r\nimport \"../interfaces/vaults/IVaultGovernance.sol\";\r\nimport \"../libraries/ExceptionsLibrary.sol\";\r\nimport \"../libraries/PermissionIdsLibrary.sol\";\r\n\r\n/// @notice Internal contract for managing different params.\r\n/// @dev The contract should be overriden by the concrete VaultGovernance,\r\n/// define different params structs and use abi.decode / abi.encode to serialize\r\n/// to bytes in this contract. It also should emit events on params change.\r\nabstract contract VaultGovernance is IVaultGovernance, ERC165 {\r\n    InternalParams internal _internalParams;\r\n    InternalParams private _stagedInternalParams;\r\n    uint256 internal _internalParamsTimestamp;\r\n\r\n    mapping(uint256 => bytes) internal _delayedStrategyParams;\r\n    mapping(uint256 => bytes) internal _stagedDelayedStrategyParams;\r\n    mapping(uint256 => uint256) internal _delayedStrategyParamsTimestamp;\r\n\r\n    mapping(uint256 => bytes) internal _delayedProtocolPerVaultParams;\r\n    mapping(uint256 => bytes) internal _stagedDelayedProtocolPerVaultParams;\r\n    mapping(uint256 => uint256) internal _delayedProtocolPerVaultParamsTimestamp;\r\n\r\n    bytes internal _delayedProtocolParams;\r\n    bytes internal _stagedDelayedProtocolParams;\r\n    uint256 internal _delayedProtocolParamsTimestamp;\r\n\r\n    mapping(uint256 => bytes) internal _strategyParams;\r\n    bytes internal _protocolParams;\r\n    bytes internal _operatorParams;\r\n\r\n    /// @notice Creates a new contract.\r\n    /// @param internalParams_ Initial Internal Params\r\n    constructor(InternalParams memory internalParams_) {\r\n        require(address(internalParams_.protocolGovernance) != address(0), ExceptionsLibrary.ADDRESS_ZERO);\r\n        require(address(internalParams_.registry) != address(0), ExceptionsLibrary.ADDRESS_ZERO);\r\n        require(address(internalParams_.singleton) != address(0), ExceptionsLibrary.ADDRESS_ZERO);\r\n        _internalParams = internalParams_;\r\n    }\r\n\r\n    // -------------------  EXTERNAL, VIEW  -------------------\r\n\r\n    /// @inheritdoc IVaultGovernance\r\n    function delayedStrategyParamsTimestamp(uint256 nft) external view returns (uint256) {\r\n        return _delayedStrategyParamsTimestamp[nft];\r\n    }\r\n\r\n    /// @inheritdoc IVaultGovernance\r\n    function delayedProtocolPerVaultParamsTimestamp(uint256 nft) external view returns (uint256) {\r\n        return _delayedProtocolPerVaultParamsTimestamp[nft];\r\n    }\r\n\r\n    /// @inheritdoc IVaultGovernance\r\n    function delayedProtocolParamsTimestamp() external view returns (uint256) {\r\n        return _delayedProtocolParamsTimestamp;\r\n    }\r\n\r\n    /// @inheritdoc IVaultGovernance\r\n    function internalParamsTimestamp() external view returns (uint256) {\r\n        return _internalParamsTimestamp;\r\n    }\r\n\r\n    /// @inheritdoc IVaultGovernance\r\n    function internalParams() external view returns (InternalParams memory) {\r\n        return _internalParams;\r\n    }\r\n\r\n    /// @inheritdoc IVaultGovernance\r\n    function stagedInternalParams() external view returns (InternalParams memory) {\r\n        return _stagedInternalParams;\r\n    }\r\n\r\n    function supportsInterface(bytes4 interfaceID) public view virtual override(ERC165) returns (bool) {\r\n        return super.supportsInterface(interfaceID) || interfaceID == type(IVaultGovernance).interfaceId;\r\n    }\r\n\r\n    // -------------------  EXTERNAL, MUTATING  -------------------\r\n\r\n    /// @inheritdoc IVaultGovernance\r\n    function stageInternalParams(InternalParams memory newParams) external {\r\n        _requireProtocolAdmin();\r\n        require(address(newParams.protocolGovernance) != address(0), ExceptionsLibrary.ADDRESS_ZERO);\r\n        require(address(newParams.registry) != address(0), ExceptionsLibrary.ADDRESS_ZERO);\r\n        require(address(newParams.singleton) != address(0), ExceptionsLibrary.ADDRESS_ZERO);\r\n        _stagedInternalParams = newParams;\r\n        _internalParamsTimestamp = block.timestamp + _internalParams.protocolGovernance.governanceDelay();\r\n        emit StagedInternalParams(tx.origin, msg.sender, newParams, _internalParamsTimestamp);\r\n    }\r\n\r\n    /// @inheritdoc IVaultGovernance\r\n    function commitInternalParams() external {\r\n        _requireProtocolAdmin();\r\n        require(_internalParamsTimestamp != 0, ExceptionsLibrary.NULL);\r\n        require(block.timestamp >= _internalParamsTimestamp, ExceptionsLibrary.TIMESTAMP);\r\n        _internalParams = _stagedInternalParams;\r\n        delete _internalParamsTimestamp;\r\n        delete _stagedInternalParams;\r\n        emit CommitedInternalParams(tx.origin, msg.sender, _internalParams);\r\n    }\r\n\r\n    // -------------------  INTERNAL, VIEW  -------------------\r\n\r\n    function _requireAtLeastStrategy(uint256 nft) internal view {\r\n        require(\r\n            (_internalParams.protocolGovernance.isAdmin(msg.sender) ||\r\n                _internalParams.registry.getApproved(nft) == msg.sender ||\r\n                (_internalParams.registry.ownerOf(nft) == msg.sender)),\r\n            ExceptionsLibrary.FORBIDDEN\r\n        );\r\n    }\r\n\r\n    function _requireProtocolAdmin() internal view {\r\n        require(_internalParams.protocolGovernance.isAdmin(msg.sender), ExceptionsLibrary.FORBIDDEN);\r\n    }\r\n\r\n    function _requireAtLeastOperator() internal view {\r\n        IProtocolGovernance governance = _internalParams.protocolGovernance;\r\n        require(governance.isAdmin(msg.sender) || governance.isOperator(msg.sender), ExceptionsLibrary.FORBIDDEN);\r\n    }\r\n\r\n    // -------------------  INTERNAL, MUTATING  -------------------\r\n\r\n    function _createVault(address owner) internal returns (address vault, uint256 nft) {\r\n        IProtocolGovernance protocolGovernance = IProtocolGovernance(_internalParams.protocolGovernance);\r\n        require(\r\n            protocolGovernance.hasPermission(msg.sender, PermissionIdsLibrary.CREATE_VAULT),\r\n            ExceptionsLibrary.FORBIDDEN\r\n        );\r\n        IVaultRegistry vaultRegistry = _internalParams.registry;\r\n        nft = vaultRegistry.vaultsCount() + 1;\r\n        vault = Clones.cloneDeterministic(address(_internalParams.singleton), bytes32(nft));\r\n        vaultRegistry.registerVault(address(vault), owner);\r\n    }\r\n\r\n    /// @notice Set Delayed Strategy Params\r\n    /// @param nft Nft of the vault\r\n    /// @param params New params\r\n    function _stageDelayedStrategyParams(uint256 nft, bytes memory params) internal {\r\n        _requireAtLeastStrategy(nft);\r\n        _stagedDelayedStrategyParams[nft] = params;\r\n        uint256 delayFactor = _delayedStrategyParams[nft].length == 0 ? 0 : 1;\r\n        _delayedStrategyParamsTimestamp[nft] =\r\n            block.timestamp +\r\n            _internalParams.protocolGovernance.governanceDelay() *\r\n            delayFactor;\r\n    }\r\n\r\n    /// @notice Commit Delayed Strategy Params\r\n    function _commitDelayedStrategyParams(uint256 nft) internal {\r\n        _requireAtLeastStrategy(nft);\r\n        uint256 thisDelayedStrategyParamsTimestamp = _delayedStrategyParamsTimestamp[nft];\r\n        require(thisDelayedStrategyParamsTimestamp != 0, ExceptionsLibrary.NULL);\r\n        require(block.timestamp >= thisDelayedStrategyParamsTimestamp, ExceptionsLibrary.TIMESTAMP);\r\n        _delayedStrategyParams[nft] = _stagedDelayedStrategyParams[nft];\r\n        delete _stagedDelayedStrategyParams[nft];\r\n        delete _delayedStrategyParamsTimestamp[nft];\r\n    }\r\n\r\n    /// @notice Set Delayed Protocol Per Vault Params\r\n    /// @param nft Nft of the vault\r\n    /// @param params New params\r\n    function _stageDelayedProtocolPerVaultParams(uint256 nft, bytes memory params) internal {\r\n        _requireProtocolAdmin();\r\n        _stagedDelayedProtocolPerVaultParams[nft] = params;\r\n        uint256 delayFactor = _delayedProtocolPerVaultParams[nft].length == 0 ? 0 : 1;\r\n        _delayedProtocolPerVaultParamsTimestamp[nft] =\r\n            block.timestamp +\r\n            _internalParams.protocolGovernance.governanceDelay() *\r\n            delayFactor;\r\n    }\r\n\r\n    /// @notice Commit Delayed Protocol Per Vault Params\r\n    function _commitDelayedProtocolPerVaultParams(uint256 nft) internal {\r\n        _requireProtocolAdmin();\r\n        uint256 thisDelayedProtocolPerVaultParamsTimestamp = _delayedProtocolPerVaultParamsTimestamp[nft];\r\n        require(thisDelayedProtocolPerVaultParamsTimestamp != 0, ExceptionsLibrary.NULL);\r\n        require(block.timestamp >= thisDelayedProtocolPerVaultParamsTimestamp, ExceptionsLibrary.TIMESTAMP);\r\n        _delayedProtocolPerVaultParams[nft] = _stagedDelayedProtocolPerVaultParams[nft];\r\n        delete _stagedDelayedProtocolPerVaultParams[nft];\r\n        delete _delayedProtocolPerVaultParamsTimestamp[nft];\r\n    }\r\n\r\n    /// @notice Set Delayed Protocol Params\r\n    /// @param params New params\r\n    function _stageDelayedProtocolParams(bytes memory params) internal {\r\n        _requireProtocolAdmin();\r\n        uint256 delayFactor = _delayedProtocolParams.length == 0 ? 0 : 1;\r\n        _stagedDelayedProtocolParams = params;\r\n        _delayedProtocolParamsTimestamp =\r\n            block.timestamp +\r\n            _internalParams.protocolGovernance.governanceDelay() *\r\n            delayFactor;\r\n    }\r\n\r\n    /// @notice Commit Delayed Protocol Params\r\n    function _commitDelayedProtocolParams() internal {\r\n        _requireProtocolAdmin();\r\n        require(_delayedProtocolParamsTimestamp != 0, ExceptionsLibrary.NULL);\r\n        require(block.timestamp >= _delayedProtocolParamsTimestamp, ExceptionsLibrary.TIMESTAMP);\r\n        _delayedProtocolParams = _stagedDelayedProtocolParams;\r\n        delete _stagedDelayedProtocolParams;\r\n        delete _delayedProtocolParamsTimestamp;\r\n    }\r\n\r\n    /// @notice Set immediate strategy params\r\n    /// @dev Should require nft > 0\r\n    /// @param nft Nft of the vault\r\n    /// @param params New params\r\n    function _setStrategyParams(uint256 nft, bytes memory params) internal {\r\n        _requireAtLeastStrategy(nft);\r\n        _strategyParams[nft] = params;\r\n    }\r\n\r\n    /// @notice Set immediate operator params\r\n    /// @param params New params\r\n    function _setOperatorParams(bytes memory params) internal {\r\n        _requireAtLeastOperator();\r\n        _operatorParams = params;\r\n    }\r\n\r\n    /// @notice Set immediate protocol params\r\n    /// @param params New params\r\n    function _setProtocolParams(bytes memory params) internal {\r\n        _requireProtocolAdmin();\r\n        _protocolParams = params;\r\n    }\r\n\r\n    // --------------------------  EVENTS  --------------------------\r\n\r\n    /// @notice Emitted when InternalParams are staged for commit\r\n    /// @param origin Origin of the transaction (tx.origin)\r\n    /// @param sender Sender of the call (msg.sender)\r\n    /// @param params New params that were staged for commit\r\n    /// @param when When the params could be committed\r\n    event StagedInternalParams(address indexed origin, address indexed sender, InternalParams params, uint256 when);\r\n\r\n    /// @notice Emitted when InternalParams are staged for commit\r\n    /// @param origin Origin of the transaction (tx.origin)\r\n    /// @param sender Sender of the call (msg.sender)\r\n    /// @param params New params that were staged for commit\r\n    event CommitedInternalParams(address indexed origin, address indexed sender, InternalParams params);\r\n\r\n    /// @notice Emitted when New Vault is deployed\r\n    /// @param origin Origin of the transaction (tx.origin)\r\n    /// @param sender Sender of the call (msg.sender)\r\n    /// @param vaultTokens Vault tokens for this vault\r\n    /// @param options Options for deploy. The details of the options structure are specified in subcontracts\r\n    /// @param owner Owner of the VaultRegistry NFT for this vault\r\n    /// @param vaultAddress Address of the new Vault\r\n    /// @param vaultNft VaultRegistry NFT for the new Vault\r\n    event DeployedVault(\r\n        address indexed origin,\r\n        address indexed sender,\r\n        address[] vaultTokens,\r\n        bytes options,\r\n        address owner,\r\n        address vaultAddress,\r\n        uint256 vaultNft\r\n    );\r\n}\r\n"
			},
			"contracts/utils/ContractMeta.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\r\npragma solidity 0.8.9;\r\n\r\nimport \"../interfaces/utils/IContractMeta.sol\";\r\n\r\nabstract contract ContractMeta is IContractMeta {\r\n    // -------------------  EXTERNAL, VIEW  -------------------\r\n\r\n    function contractName() external pure returns (string memory) {\r\n        return _bytes32ToString(_contractName());\r\n    }\r\n\r\n    function contractNameBytes() external pure returns (bytes32) {\r\n        return _contractName();\r\n    }\r\n\r\n    function contractVersion() external pure returns (string memory) {\r\n        return _bytes32ToString(_contractVersion());\r\n    }\r\n\r\n    function contractVersionBytes() external pure returns (bytes32) {\r\n        return _contractVersion();\r\n    }\r\n\r\n    // -------------------  INTERNAL, VIEW  -------------------\r\n\r\n    function _contractName() internal pure virtual returns (bytes32);\r\n\r\n    function _contractVersion() internal pure virtual returns (bytes32);\r\n\r\n    function _bytes32ToString(bytes32 b) internal pure returns (string memory s) {\r\n        s = new string(32);\r\n        uint256 len = 32;\r\n        for (uint256 i = 0; i < 32; ++i) {\r\n            if (uint8(b[i]) == 0) {\r\n                len = i;\r\n                break;\r\n            }\r\n        }\r\n        assembly {\r\n            mstore(s, len)\r\n            mstore(add(s, 0x20), b)\r\n        }\r\n    }\r\n}\r\n"
			},
			"contracts/libraries/ExceptionsLibrary.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.9;\r\n\r\n/// @notice Exceptions stores project`s smart-contracts exceptions\r\nlibrary ExceptionsLibrary {\r\n    string constant ADDRESS_ZERO = \"AZ\";\r\n    string constant VALUE_ZERO = \"VZ\";\r\n    string constant EMPTY_LIST = \"EMPL\";\r\n    string constant NOT_FOUND = \"NF\";\r\n    string constant INIT = \"INIT\";\r\n    string constant DUPLICATE = \"DUP\";\r\n    string constant NULL = \"NULL\";\r\n    string constant TIMESTAMP = \"TS\";\r\n    string constant FORBIDDEN = \"FRB\";\r\n    string constant ALLOWLIST = \"ALL\";\r\n    string constant LIMIT_OVERFLOW = \"LIMO\";\r\n    string constant LIMIT_UNDERFLOW = \"LIMU\";\r\n    string constant INVALID_VALUE = \"INV\";\r\n    string constant INVARIANT = \"INVA\";\r\n    string constant INVALID_TARGET = \"INVTR\";\r\n    string constant INVALID_TOKEN = \"INVTO\";\r\n    string constant INVALID_INTERFACE = \"INVI\";\r\n    string constant INVALID_SELECTOR = \"INVS\";\r\n    string constant INVALID_STATE = \"INVST\";\r\n    string constant INVALID_LENGTH = \"INVL\";\r\n    string constant LOCK = \"LCKD\";\r\n    string constant DISABLED = \"DIS\";\r\n}\r\n"
			},
			"contracts/interfaces/vaults/IUniV3Vault.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity 0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\r\nimport \"./IIntegrationVault.sol\";\r\nimport \"../external/univ3/INonfungiblePositionManager.sol\";\r\nimport \"../external/univ3/IUniswapV3Pool.sol\";\r\n\r\ninterface IUniV3Vault is IERC721Receiver, IIntegrationVault {\r\n    struct Options {\r\n        uint256 amount0Min;\r\n        uint256 amount1Min;\r\n        uint256 deadline;\r\n    }\r\n\r\n    /// @notice Reference to INonfungiblePositionManager of UniswapV3 protocol.\r\n    function positionManager() external view returns (INonfungiblePositionManager);\r\n\r\n    /// @notice Reference to UniswapV3 pool.\r\n    function pool() external view returns (IUniswapV3Pool);\r\n\r\n    /// @notice NFT of UniV3 position manager\r\n    function uniV3Nft() external view returns (uint256);\r\n\r\n    /// @notice Returns tokenAmounts corresponding to liquidity, based on the current Uniswap position\r\n    /// @param liquidity Liquidity that will be converted to token amounts\r\n    /// @return tokenAmounts Token amounts for the specified liquidity\r\n    function liquidityToTokenAmounts(uint128 liquidity) external view returns (uint256[] memory tokenAmounts);\r\n\r\n    /// @notice Returns liquidity corresponding to token amounts, based on the current Uniswap position\r\n    /// @param tokenAmounts Token amounts that will be converted to liquidity\r\n    /// @return liquidity Liquidity for the specified token amounts\r\n    function tokenAmountsToLiquidity(uint256[] memory tokenAmounts) external view returns (uint128 liquidity);\r\n\r\n    /// @notice Initialized a new contract.\r\n    /// @dev Can only be initialized by vault governance\r\n    /// @param nft_ NFT of the vault in the VaultRegistry\r\n    /// @param vaultTokens_ ERC20 tokens that will be managed by this Vault\r\n    /// @param fee_ Fee of the UniV3 pool\r\n    /// @param uniV3Helper_ address of helper for UniV3 arithmetic with ticks\r\n    function initialize(\r\n        uint256 nft_,\r\n        address[] memory vaultTokens_,\r\n        uint24 fee_,\r\n        address uniV3Helper_\r\n    ) external;\r\n\r\n    /// @notice Collect UniV3 fees to zero vault.\r\n    function collectEarnings() external returns (uint256[] memory collectedEarnings);\r\n}\r\n"
			},
			"contracts/interfaces/vaults/IUniV3VaultGovernance.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity 0.8.9;\r\n\r\nimport \"../external/univ3/INonfungiblePositionManager.sol\";\r\nimport \"../oracles/IOracle.sol\";\r\nimport \"./IVaultGovernance.sol\";\r\nimport \"./IUniV3Vault.sol\";\r\n\r\ninterface IUniV3VaultGovernance is IVaultGovernance {\r\n    /// @notice Params that could be changed by Protocol Governance with Protocol Governance delay.\r\n    /// @param positionManager Reference to UniV3 INonfungiblePositionManager\r\n    struct DelayedProtocolParams {\r\n        INonfungiblePositionManager positionManager;\r\n        IOracle oracle;\r\n    }\r\n\r\n    /// @param safetyIndicesSet Safety indices for oracle\r\n    struct DelayedStrategyParams {\r\n        uint32 safetyIndicesSet;\r\n    }\r\n\r\n    /// @notice Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay.\r\n    function delayedProtocolParams() external view returns (DelayedProtocolParams memory);\r\n\r\n    /// @notice Delayed Protocol Params staged for commit after delay.\r\n    function stagedDelayedProtocolParams() external view returns (DelayedProtocolParams memory);\r\n\r\n    /// @notice Stage Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay.\r\n    /// @param params New params\r\n    function stageDelayedProtocolParams(DelayedProtocolParams calldata params) external;\r\n\r\n    /// @notice Commit Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay.\r\n    function commitDelayedProtocolParams() external;\r\n\r\n    /// @notice Delayed Strategy Params\r\n    /// @param nft VaultRegistry NFT of the vault\r\n    function delayedStrategyParams(uint256 nft) external view returns (DelayedStrategyParams memory);\r\n\r\n    /// @notice Delayed Strategy Params staged for commit after delay.\r\n    /// @param nft VaultRegistry NFT of the vault\r\n    function stagedDelayedStrategyParams(uint256 nft) external view returns (DelayedStrategyParams memory);\r\n\r\n    /// @notice Stage Delayed Strategy Params, i.e. Params that could be changed by Strategy or Protocol Governance with Protocol Governance delay.\r\n    /// @param nft VaultRegistry NFT of the vault\r\n    /// @param params New params\r\n    function stageDelayedStrategyParams(uint256 nft, DelayedStrategyParams calldata params) external;\r\n\r\n    /// @notice Commit Delayed Strategy Params, i.e. Params that could be changed by Strategy or Protocol Governance with Protocol Governance delay.\r\n    /// @dev Can only be called after delayedStrategyParamsTimestamp\r\n    /// @param nft VaultRegistry NFT of the vault\r\n    function commitDelayedStrategyParams(uint256 nft) external;\r\n\r\n    /// @notice Deploys a new vault.\r\n    /// @param vaultTokens_ ERC20 tokens that will be managed by this Vault\r\n    /// @param owner_ Owner of the vault NFT\r\n    /// @param fee_ Fee of the UniV3 pool\r\n    /// @param uniV3Helper_ address of helper for UniV3 arithmetic with ticks\r\n    function createVault(\r\n        address[] memory vaultTokens_,\r\n        address owner_,\r\n        uint24 fee_,\r\n        address uniV3Helper_\r\n    ) external returns (IUniV3Vault vault, uint256 nft);\r\n}\r\n"
			},
			"contracts/libraries/PermissionIdsLibrary.sol": {
				"content": "//SPDX-License-Identifier: MIT\r\npragma solidity 0.8.9;\r\n\r\n/// @notice Stores permission ids for addresses\r\nlibrary PermissionIdsLibrary {\r\n    // The msg.sender is allowed to register vault\r\n    uint8 constant REGISTER_VAULT = 0;\r\n    // The msg.sender is allowed to create vaults\r\n    uint8 constant CREATE_VAULT = 1;\r\n    // The token is allowed to be transfered by vault\r\n    uint8 constant ERC20_TRANSFER = 2;\r\n    // The token is allowed to be added to vault\r\n    uint8 constant ERC20_VAULT_TOKEN = 3;\r\n    // Trusted protocols that are allowed to be approved of vault ERC20 tokens by any strategy\r\n    uint8 constant ERC20_APPROVE = 4;\r\n    // Trusted protocols that are allowed to be approved of vault ERC20 tokens by trusted strategy\r\n    uint8 constant ERC20_APPROVE_RESTRICTED = 5;\r\n    // Strategy allowed using restricted API\r\n    uint8 constant TRUSTED_STRATEGY = 6;\r\n}\r\n"
			},
			"contracts/interfaces/vaults/IVaultGovernance.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.9;\r\n\r\nimport \"../IProtocolGovernance.sol\";\r\nimport \"../IVaultRegistry.sol\";\r\nimport \"./IVault.sol\";\r\n\r\ninterface IVaultGovernance {\r\n    /// @notice Internal references of the contract.\r\n    /// @param protocolGovernance Reference to Protocol Governance\r\n    /// @param registry Reference to Vault Registry\r\n    struct InternalParams {\r\n        IProtocolGovernance protocolGovernance;\r\n        IVaultRegistry registry;\r\n        IVault singleton;\r\n    }\r\n\r\n    // -------------------  EXTERNAL, VIEW  -------------------\r\n\r\n    /// @notice Timestamp in unix time seconds after which staged Delayed Strategy Params could be committed.\r\n    /// @param nft Nft of the vault\r\n    function delayedStrategyParamsTimestamp(uint256 nft) external view returns (uint256);\r\n\r\n    /// @notice Timestamp in unix time seconds after which staged Delayed Protocol Params could be committed.\r\n    function delayedProtocolParamsTimestamp() external view returns (uint256);\r\n\r\n    /// @notice Timestamp in unix time seconds after which staged Delayed Protocol Params Per Vault could be committed.\r\n    /// @param nft Nft of the vault\r\n    function delayedProtocolPerVaultParamsTimestamp(uint256 nft) external view returns (uint256);\r\n\r\n    /// @notice Timestamp in unix time seconds after which staged Internal Params could be committed.\r\n    function internalParamsTimestamp() external view returns (uint256);\r\n\r\n    /// @notice Internal Params of the contract.\r\n    function internalParams() external view returns (InternalParams memory);\r\n\r\n    /// @notice Staged new Internal Params.\r\n    /// @dev The Internal Params could be committed after internalParamsTimestamp\r\n    function stagedInternalParams() external view returns (InternalParams memory);\r\n\r\n    // -------------------  EXTERNAL, MUTATING  -------------------\r\n\r\n    /// @notice Stage new Internal Params.\r\n    /// @param newParams New Internal Params\r\n    function stageInternalParams(InternalParams memory newParams) external;\r\n\r\n    /// @notice Commit staged Internal Params.\r\n    function commitInternalParams() external;\r\n}\r\n"
			},
			"contracts/interfaces/IProtocolGovernance.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.9;\r\n\r\nimport \"./utils/IDefaultAccessControl.sol\";\r\nimport \"./IUnitPricesGovernance.sol\";\r\n\r\ninterface IProtocolGovernance is IDefaultAccessControl, IUnitPricesGovernance {\r\n    /// @notice CommonLibrary protocol params.\r\n    /// @param maxTokensPerVault Max different token addresses that could be managed by the vault\r\n    /// @param governanceDelay The delay (in secs) that must pass before setting new pending params to commiting them\r\n    /// @param protocolTreasury The address that collects protocolFees, if protocolFee is not zero\r\n    /// @param forceAllowMask If a permission bit is set in this mask it forces all addresses to have this permission as true\r\n    /// @param withdrawLimit Withdraw limit (in unit prices, i.e. usd)\r\n    struct Params {\r\n        uint256 maxTokensPerVault;\r\n        uint256 governanceDelay;\r\n        address protocolTreasury;\r\n        uint256 forceAllowMask;\r\n        uint256 withdrawLimit;\r\n    }\r\n\r\n    // -------------------  EXTERNAL, VIEW  -------------------\r\n\r\n    /// @notice Timestamp after which staged granted permissions for the given address can be committed.\r\n    /// @param target The given address\r\n    /// @return Zero if there are no staged permission grants, timestamp otherwise\r\n    function stagedPermissionGrantsTimestamps(address target) external view returns (uint256);\r\n\r\n    /// @notice Staged granted permission bitmask for the given address.\r\n    /// @param target The given address\r\n    /// @return Bitmask\r\n    function stagedPermissionGrantsMasks(address target) external view returns (uint256);\r\n\r\n    /// @notice Permission bitmask for the given address.\r\n    /// @param target The given address\r\n    /// @return Bitmask\r\n    function permissionMasks(address target) external view returns (uint256);\r\n\r\n    /// @notice Timestamp after which staged pending protocol parameters can be committed\r\n    /// @return Zero if there are no staged parameters, timestamp otherwise.\r\n    function stagedParamsTimestamp() external view returns (uint256);\r\n\r\n    /// @notice Staged pending protocol parameters.\r\n    function stagedParams() external view returns (Params memory);\r\n\r\n    /// @notice Current protocol parameters.\r\n    function params() external view returns (Params memory);\r\n\r\n    /// @notice Addresses for which non-zero permissions are set.\r\n    function permissionAddresses() external view returns (address[] memory);\r\n\r\n    /// @notice Permission addresses staged for commit.\r\n    function stagedPermissionGrantsAddresses() external view returns (address[] memory);\r\n\r\n    /// @notice Return all addresses where rawPermissionMask bit for permissionId is set to 1.\r\n    /// @param permissionId Id of the permission to check.\r\n    /// @return A list of dirty addresses.\r\n    function addressesByPermission(uint8 permissionId) external view returns (address[] memory);\r\n\r\n    /// @notice Checks if address has permission or given permission is force allowed for any address.\r\n    /// @param addr Address to check\r\n    /// @param permissionId Permission to check\r\n    function hasPermission(address addr, uint8 permissionId) external view returns (bool);\r\n\r\n    /// @notice Checks if address has all permissions.\r\n    /// @param target Address to check\r\n    /// @param permissionIds A list of permissions to check\r\n    function hasAllPermissions(address target, uint8[] calldata permissionIds) external view returns (bool);\r\n\r\n    /// @notice Max different ERC20 token addresses that could be managed by the protocol.\r\n    function maxTokensPerVault() external view returns (uint256);\r\n\r\n    /// @notice The delay for committing any governance params.\r\n    function governanceDelay() external view returns (uint256);\r\n\r\n    /// @notice The address of the protocol treasury.\r\n    function protocolTreasury() external view returns (address);\r\n\r\n    /// @notice Permissions mask which defines if ordinary permission should be reverted.\r\n    /// This bitmask is xored with ordinary mask.\r\n    function forceAllowMask() external view returns (uint256);\r\n\r\n    /// @notice Withdraw limit per token per block.\r\n    /// @param token Address of the token\r\n    /// @return Withdraw limit per token per block\r\n    function withdrawLimit(address token) external view returns (uint256);\r\n\r\n    /// @notice Addresses that has staged validators.\r\n    function stagedValidatorsAddresses() external view returns (address[] memory);\r\n\r\n    /// @notice Timestamp after which staged granted permissions for the given address can be committed.\r\n    /// @param target The given address\r\n    /// @return Zero if there are no staged permission grants, timestamp otherwise\r\n    function stagedValidatorsTimestamps(address target) external view returns (uint256);\r\n\r\n    /// @notice Staged validator for the given address.\r\n    /// @param target The given address\r\n    /// @return Validator\r\n    function stagedValidators(address target) external view returns (address);\r\n\r\n    /// @notice Addresses that has validators.\r\n    function validatorsAddresses() external view returns (address[] memory);\r\n\r\n    /// @notice Address that has validators.\r\n    /// @param i The number of address\r\n    /// @return Validator address\r\n    function validatorsAddress(uint256 i) external view returns (address);\r\n\r\n    /// @notice Validator for the given address.\r\n    /// @param target The given address\r\n    /// @return Validator\r\n    function validators(address target) external view returns (address);\r\n\r\n    // -------------------  EXTERNAL, MUTATING, GOVERNANCE, IMMEDIATE  -------------------\r\n\r\n    /// @notice Rollback all staged validators.\r\n    function rollbackStagedValidators() external;\r\n\r\n    /// @notice Revoke validator instantly from the given address.\r\n    /// @param target The given address\r\n    function revokeValidator(address target) external;\r\n\r\n    /// @notice Stages a new validator for the given address\r\n    /// @param target The given address\r\n    /// @param validator The validator for the given address\r\n    function stageValidator(address target, address validator) external;\r\n\r\n    /// @notice Commits validator for the given address.\r\n    /// @dev Reverts if governance delay has not passed yet.\r\n    /// @param target The given address.\r\n    function commitValidator(address target) external;\r\n\r\n    /// @notice Commites all staged validators for which governance delay passed\r\n    /// @return Addresses for which validators were committed\r\n    function commitAllValidatorsSurpassedDelay() external returns (address[] memory);\r\n\r\n    /// @notice Rollback all staged granted permission grant.\r\n    function rollbackStagedPermissionGrants() external;\r\n\r\n    /// @notice Commits permission grants for the given address.\r\n    /// @dev Reverts if governance delay has not passed yet.\r\n    /// @param target The given address.\r\n    function commitPermissionGrants(address target) external;\r\n\r\n    /// @notice Commites all staged permission grants for which governance delay passed.\r\n    /// @return An array of addresses for which permission grants were committed.\r\n    function commitAllPermissionGrantsSurpassedDelay() external returns (address[] memory);\r\n\r\n    /// @notice Revoke permission instantly from the given address.\r\n    /// @param target The given address.\r\n    /// @param permissionIds A list of permission ids to revoke.\r\n    function revokePermissions(address target, uint8[] memory permissionIds) external;\r\n\r\n    /// @notice Commits staged protocol params.\r\n    /// Reverts if governance delay has not passed yet.\r\n    function commitParams() external;\r\n\r\n    // -------------------  EXTERNAL, MUTATING, GOVERNANCE, DELAY  -------------------\r\n\r\n    /// @notice Sets new pending params that could have been committed after governance delay expires.\r\n    /// @param newParams New protocol parameters to set.\r\n    function stageParams(Params memory newParams) external;\r\n\r\n    /// @notice Stage granted permissions that could have been committed after governance delay expires.\r\n    /// Resets commit delay and permissions if there are already staged permissions for this address.\r\n    /// @param target Target address\r\n    /// @param permissionIds A list of permission ids to grant\r\n    function stagePermissionGrants(address target, uint8[] memory permissionIds) external;\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (proxy/Clones.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n * deploying minimal proxy contracts, also known as \"clones\".\n *\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n *\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n * deterministic method.\n *\n * _Available since v3.4._\n */\nlibrary Clones {\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\n            instance := create(0, ptr, 0x37)\n        }\n        require(instance != address(0), \"ERC1167: create failed\");\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\n     * the clones cannot be deployed twice at the same address.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\n            instance := create2(0, ptr, 0x37, salt)\n        }\n        require(instance != address(0), \"ERC1167: create2 failed\");\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000)\n            mstore(add(ptr, 0x38), shl(0x60, deployer))\n            mstore(add(ptr, 0x4c), salt)\n            mstore(add(ptr, 0x6c), keccak256(ptr, 0x37))\n            predicted := keccak256(add(ptr, 0x37), 0x55)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(address implementation, bytes32 salt)\n        internal\n        view\n        returns (address predicted)\n    {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n}\n"
			},
			"contracts/interfaces/utils/IContractMeta.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.9;\r\n\r\ninterface IContractMeta {\r\n    function contractName() external view returns (string memory);\r\n    function contractNameBytes() external view returns (bytes32);\r\n\r\n    function contractVersion() external view returns (string memory);\r\n    function contractVersionBytes() external view returns (bytes32);\r\n}\r\n"
			},
			"contracts/interfaces/oracles/IOracle.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.9;\r\n\r\ninterface IOracle {\r\n    /// @notice Oracle price for tokens as a Q64.96 value.\r\n    /// @notice Returns pricing information based on the indexes of non-zero bits in safetyIndicesSet.\r\n    /// @notice It is possible that not all indices will have their respective prices returned.\r\n    /// @dev The price is token1 / token0 i.e. how many weis of token1 required for 1 wei of token0.\r\n    /// The safety indexes are:\r\n    ///\r\n    /// 1 - unsafe, this is typically a spot price that can be easily manipulated,\r\n    ///\r\n    /// 2 - 4 - more or less safe, this is typically a uniV3 oracle, where the safety is defined by the timespan of the average price\r\n    ///\r\n    /// 5 - safe - this is typically a chailink oracle\r\n    /// @param token0 Reference to token0\r\n    /// @param token1 Reference to token1\r\n    /// @param safetyIndicesSet Bitmask of safety indices that are allowed for the return prices. For set of safety indexes = { 1 }, safetyIndicesSet = 0x2\r\n    /// @return pricesX96 Prices that satisfy safetyIndex and tokens\r\n    /// @return safetyIndices Safety indices for those prices\r\n    function priceX96(\r\n        address token0,\r\n        address token1,\r\n        uint256 safetyIndicesSet\r\n    ) external view returns (uint256[] memory pricesX96, uint256[] memory safetyIndices);\r\n}\r\n"
			},
			"contracts/interfaces/external/univ3/INonfungiblePositionManager.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity 0.8.9;\r\npragma abicoder v2;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\nimport \"./IPeripheryImmutableState.sol\";\r\n\r\n/// @title Non-fungible token for positions\r\n/// @notice Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred\r\n/// and authorized.\r\ninterface INonfungiblePositionManager is IPeripheryImmutableState, IERC721 {\r\n    /// @notice Emitted when liquidity is increased for a position NFT\r\n    /// @dev Also emitted when a token is minted\r\n    /// @param tokenId The ID of the token for which liquidity was increased\r\n    /// @param liquidity The amount by which liquidity for the NFT position was increased\r\n    /// @param amount0 The amount of token0 that was paid for the increase in liquidity\r\n    /// @param amount1 The amount of token1 that was paid for the increase in liquidity\r\n    event IncreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\r\n    /// @notice Emitted when liquidity is decreased for a position NFT\r\n    /// @param tokenId The ID of the token for which liquidity was decreased\r\n    /// @param liquidity The amount by which liquidity for the NFT position was decreased\r\n    /// @param amount0 The amount of token0 that was accounted for the decrease in liquidity\r\n    /// @param amount1 The amount of token1 that was accounted for the decrease in liquidity\r\n    event DecreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\r\n    /// @notice Emitted when tokens are collected for a position NFT\r\n    /// @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\r\n    /// @param tokenId The ID of the token for which underlying tokens were collected\r\n    /// @param recipient The address of the account that received the collected tokens\r\n    /// @param amount0 The amount of token0 owed to the position that was collected\r\n    /// @param amount1 The amount of token1 owed to the position that was collected\r\n    event Collect(uint256 indexed tokenId, address recipient, uint256 amount0, uint256 amount1);\r\n\r\n    /// @notice Returns the position information associated with a given token ID.\r\n    /// @dev Throws if the token ID is not valid.\r\n    /// @param tokenId The ID of the token that represents the position\r\n    /// @return nonce The nonce for permits\r\n    /// @return operator The address that is approved for spending\r\n    /// @return token0 The address of the token0 for a specific pool\r\n    /// @return token1 The address of the token1 for a specific pool\r\n    /// @return fee The fee associated with the pool\r\n    /// @return tickLower The lower end of the tick range for the position\r\n    /// @return tickUpper The higher end of the tick range for the position\r\n    /// @return liquidity The liquidity of the position\r\n    /// @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\r\n    /// @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\r\n    /// @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\r\n    /// @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation\r\n    function positions(uint256 tokenId)\r\n        external\r\n        view\r\n        returns (\r\n            uint96 nonce,\r\n            address operator,\r\n            address token0,\r\n            address token1,\r\n            uint24 fee,\r\n            int24 tickLower,\r\n            int24 tickUpper,\r\n            uint128 liquidity,\r\n            uint256 feeGrowthInside0LastX128,\r\n            uint256 feeGrowthInside1LastX128,\r\n            uint128 tokensOwed0,\r\n            uint128 tokensOwed1\r\n        );\r\n\r\n    struct MintParams {\r\n        address token0;\r\n        address token1;\r\n        uint24 fee;\r\n        int24 tickLower;\r\n        int24 tickUpper;\r\n        uint256 amount0Desired;\r\n        uint256 amount1Desired;\r\n        uint256 amount0Min;\r\n        uint256 amount1Min;\r\n        address recipient;\r\n        uint256 deadline;\r\n    }\r\n\r\n    /// @notice Creates a new position wrapped in a NFT\r\n    /// @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\r\n    /// a method does not exist, i.e. the pool is assumed to be initialized.\r\n    /// @param params The params necessary to mint a position, encoded as `MintParams` in calldata\r\n    /// @return tokenId The ID of the token that represents the minted position\r\n    /// @return liquidity The amount of liquidity for this position\r\n    /// @return amount0 The amount of token0\r\n    /// @return amount1 The amount of token1\r\n    function mint(MintParams calldata params)\r\n        external\r\n        payable\r\n        returns (\r\n            uint256 tokenId,\r\n            uint128 liquidity,\r\n            uint256 amount0,\r\n            uint256 amount1\r\n        );\r\n\r\n    struct IncreaseLiquidityParams {\r\n        uint256 tokenId;\r\n        uint256 amount0Desired;\r\n        uint256 amount1Desired;\r\n        uint256 amount0Min;\r\n        uint256 amount1Min;\r\n        uint256 deadline;\r\n    }\r\n\r\n    /// @notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\r\n    /// @param params tokenId The ID of the token for which liquidity is being increased,\r\n    /// amount0Desired The desired amount of token0 to be spent,\r\n    /// amount1Desired The desired amount of token1 to be spent,\r\n    /// amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\r\n    /// amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\r\n    /// deadline The time by which the transaction must be included to effect the change\r\n    /// @return liquidity The new liquidity amount as a result of the increase\r\n    /// @return amount0 The amount of token0 to acheive resulting liquidity\r\n    /// @return amount1 The amount of token1 to acheive resulting liquidity\r\n    function increaseLiquidity(IncreaseLiquidityParams calldata params)\r\n        external\r\n        payable\r\n        returns (\r\n            uint128 liquidity,\r\n            uint256 amount0,\r\n            uint256 amount1\r\n        );\r\n\r\n    struct DecreaseLiquidityParams {\r\n        uint256 tokenId;\r\n        uint128 liquidity;\r\n        uint256 amount0Min;\r\n        uint256 amount1Min;\r\n        uint256 deadline;\r\n    }\r\n\r\n    /// @notice Decreases the amount of liquidity in a position and accounts it to the position\r\n    /// @param params tokenId The ID of the token for which liquidity is being decreased,\r\n    /// amount The amount by which liquidity will be decreased,\r\n    /// amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\r\n    /// amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\r\n    /// deadline The time by which the transaction must be included to effect the change\r\n    /// @return amount0 The amount of token0 accounted to the position's tokens owed\r\n    /// @return amount1 The amount of token1 accounted to the position's tokens owed\r\n    function decreaseLiquidity(DecreaseLiquidityParams calldata params)\r\n        external\r\n        payable\r\n        returns (uint256 amount0, uint256 amount1);\r\n\r\n    struct CollectParams {\r\n        uint256 tokenId;\r\n        address recipient;\r\n        uint128 amount0Max;\r\n        uint128 amount1Max;\r\n    }\r\n\r\n    /// @notice Collects up to a maximum amount of fees owed to a specific position to the recipient\r\n    /// @param params tokenId The ID of the NFT for which tokens are being collected,\r\n    /// recipient The account that should receive the tokens,\r\n    /// amount0Max The maximum amount of token0 to collect,\r\n    /// amount1Max The maximum amount of token1 to collect\r\n    /// @return amount0 The amount of fees collected in token0\r\n    /// @return amount1 The amount of fees collected in token1\r\n    function collect(CollectParams calldata params) external payable returns (uint256 amount0, uint256 amount1);\r\n\r\n    /// @notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\r\n    /// must be collected first.\r\n    /// @param tokenId The ID of the token that is being burned\r\n    function burn(uint256 tokenId) external payable;\r\n}\r\n"
			},
			"contracts/interfaces/external/univ3/IUniswapV3Pool.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\nimport \"./pool/IUniswapV3PoolActions.sol\";\r\nimport \"./pool/IUniswapV3PoolImmutables.sol\";\r\nimport \"./pool/IUniswapV3PoolState.sol\";\r\nimport \"./pool/IUniswapV3PoolDerivedState.sol\";\r\n\r\n/// @title The interface for a Uniswap V3 Pool\r\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\r\n/// to the ERC20 specification\r\n/// @dev The pool interface is broken up into many smaller pieces\r\ninterface IUniswapV3Pool is\r\n    IUniswapV3PoolImmutables,\r\n    IUniswapV3PoolState,\r\n    IUniswapV3PoolDerivedState,\r\n    IUniswapV3PoolActions\r\n{\r\n\r\n}\r\n"
			},
			"contracts/interfaces/vaults/IIntegrationVault.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.9;\r\n\r\nimport \"../external/erc/IERC1271.sol\";\r\nimport \"./IVault.sol\";\r\n\r\ninterface IIntegrationVault is IVault, IERC1271 {\r\n    /// @notice Pushes tokens on the vault balance to the underlying protocol. For example, for Yearn this operation will take USDC from\r\n    /// the contract balance and convert it to yUSDC.\r\n    /// @dev Tokens **must** be a subset of Vault Tokens. However, the convention is that if tokenAmount == 0 it is the same as token is missing.\r\n    ///\r\n    /// Also notice that this operation doesn't guarantee that tokenAmounts will be invested in full.\r\n    /// @param tokens Tokens to push\r\n    /// @param tokenAmounts Amounts of tokens to push\r\n    /// @param options Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions\r\n    /// @return actualTokenAmounts The amounts actually invested. It could be less than tokenAmounts (but not higher)\r\n    function push(\r\n        address[] memory tokens,\r\n        uint256[] memory tokenAmounts,\r\n        bytes memory options\r\n    ) external returns (uint256[] memory actualTokenAmounts);\r\n\r\n    /// @notice The same as `push` method above but transfers tokens to vault balance prior to calling push.\r\n    /// After the `push` it returns all the leftover tokens back (`push` method doesn't guarantee that tokenAmounts will be invested in full).\r\n    /// @param tokens Tokens to push\r\n    /// @param tokenAmounts Amounts of tokens to push\r\n    /// @param options Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions\r\n    /// @return actualTokenAmounts The amounts actually invested. It could be less than tokenAmounts (but not higher)\r\n    function transferAndPush(\r\n        address from,\r\n        address[] memory tokens,\r\n        uint256[] memory tokenAmounts,\r\n        bytes memory options\r\n    ) external returns (uint256[] memory actualTokenAmounts);\r\n\r\n    /// @notice Pulls tokens from the underlying protocol to the `to` address.\r\n    /// @dev Can only be called but Vault Owner or Strategy. Vault owner is the owner of NFT for this vault in VaultManager.\r\n    /// Strategy is approved address for the vault NFT.\r\n    /// When called by vault owner this method just pulls the tokens from the protocol to the `to` address\r\n    /// When called by strategy on vault other than zero vault it pulls the tokens to zero vault (required `to` == zero vault)\r\n    /// When called by strategy on zero vault it pulls the tokens to zero vault, pushes tokens on the `to` vault, and reclaims everything that's left.\r\n    /// Thus any vault other than zero vault cannot have any tokens on it\r\n    ///\r\n    /// Tokens **must** be a subset of Vault Tokens. However, the convention is that if tokenAmount == 0 it is the same as token is missing.\r\n    ///\r\n    /// Pull is fulfilled on the best effort basis, i.e. if the tokenAmounts overflows available funds it withdraws all the funds.\r\n    /// @param to Address to receive the tokens\r\n    /// @param tokens Tokens to pull\r\n    /// @param tokenAmounts Amounts of tokens to pull\r\n    /// @param options Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions\r\n    /// @return actualTokenAmounts The amounts actually withdrawn. It could be less than tokenAmounts (but not higher)\r\n    function pull(\r\n        address to,\r\n        address[] memory tokens,\r\n        uint256[] memory tokenAmounts,\r\n        bytes memory options\r\n    ) external returns (uint256[] memory actualTokenAmounts);\r\n\r\n    /// @notice Claim ERC20 tokens from vault balance to zero vault.\r\n    /// @dev Cannot be called from zero vault.\r\n    /// @param tokens Tokens to claim\r\n    /// @return actualTokenAmounts Amounts reclaimed\r\n    function reclaimTokens(address[] memory tokens) external returns (uint256[] memory actualTokenAmounts);\r\n\r\n    /// @notice Execute one of whitelisted calls.\r\n    /// @dev Can only be called by Vault Owner or Strategy. Vault owner is the owner of NFT for this vault in VaultManager.\r\n    /// Strategy is approved address for the vault NFT.\r\n    ///\r\n    /// Since this method allows sending arbitrary transactions, the destinations of the calls\r\n    /// are whitelisted by Protocol Governance.\r\n    /// @param to Address of the reward pool\r\n    /// @param selector Selector of the call\r\n    /// @param data Abi encoded parameters to `to::selector`\r\n    /// @return result Result of execution of the call\r\n    function externalCall(\r\n        address to,\r\n        bytes4 selector,\r\n        bytes memory data\r\n    ) external payable returns (bytes memory result);\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"contracts/interfaces/vaults/IVault.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.9;\r\n\r\nimport \"./IVaultGovernance.sol\";\r\n\r\ninterface IVault is IERC165 {\r\n    /// @notice Checks if the vault is initialized\r\n\r\n    function initialized() external view returns (bool);\r\n\r\n    /// @notice VaultRegistry NFT for this vault\r\n    function nft() external view returns (uint256);\r\n\r\n    /// @notice Address of the Vault Governance for this contract.\r\n    function vaultGovernance() external view returns (IVaultGovernance);\r\n\r\n    /// @notice ERC20 tokens under Vault management.\r\n    function vaultTokens() external view returns (address[] memory);\r\n\r\n    /// @notice Checks if a token is vault token\r\n    /// @param token Address of the token to check\r\n    /// @return `true` if this token is managed by Vault\r\n    function isVaultToken(address token) external view returns (bool);\r\n\r\n    /// @notice Total value locked for this contract.\r\n    /// @dev Generally it is the underlying token value of this contract in some\r\n    /// other DeFi protocol. For example, for USDC Yearn Vault this would be total USDC balance that could be withdrawn for Yearn to this contract.\r\n    /// The tvl itself is estimated in some range. Sometimes the range is exact, sometimes it's not\r\n    /// @return minTokenAmounts Lower bound for total available balances estimation (nth tokenAmount corresponds to nth token in vaultTokens)\r\n    /// @return maxTokenAmounts Upper bound for total available balances estimation (nth tokenAmount corresponds to nth token in vaultTokens)\r\n    function tvl() external view returns (uint256[] memory minTokenAmounts, uint256[] memory maxTokenAmounts);\r\n\r\n    /// @notice Existential amounts for each token\r\n    function pullExistentials() external view returns (uint256[] memory);\r\n}\r\n"
			},
			"contracts/interfaces/IVaultRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity =0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\nimport \"./IProtocolGovernance.sol\";\r\n\r\ninterface IVaultRegistry is IERC721 {\r\n    /// @notice Get Vault for the giver NFT ID.\r\n    /// @param nftId NFT ID\r\n    /// @return vault Address of the Vault contract\r\n    function vaultForNft(uint256 nftId) external view returns (address vault);\r\n\r\n    /// @notice Get NFT ID for given Vault contract address.\r\n    /// @param vault Address of the Vault contract\r\n    /// @return nftId NFT ID\r\n    function nftForVault(address vault) external view returns (uint256 nftId);\r\n\r\n    /// @notice Checks if the nft is locked for all transfers\r\n    /// @param nft NFT to check for lock\r\n    /// @return `true` if locked, false otherwise\r\n    function isLocked(uint256 nft) external view returns (bool);\r\n\r\n    /// @notice Register new Vault and mint NFT.\r\n    /// @param vault address of the vault\r\n    /// @param owner owner of the NFT\r\n    /// @return nft Nft minted for the given Vault\r\n    function registerVault(address vault, address owner) external returns (uint256 nft);\r\n\r\n    /// @notice Number of Vaults registered.\r\n    function vaultsCount() external view returns (uint256);\r\n\r\n    /// @notice All Vaults registered.\r\n    function vaults() external view returns (address[] memory);\r\n\r\n    /// @notice Address of the ProtocolGovernance.\r\n    function protocolGovernance() external view returns (IProtocolGovernance);\r\n\r\n    /// @notice Address of the staged ProtocolGovernance.\r\n    function stagedProtocolGovernance() external view returns (IProtocolGovernance);\r\n\r\n    /// @notice Minimal timestamp when staged ProtocolGovernance can be applied.\r\n    function stagedProtocolGovernanceTimestamp() external view returns (uint256);\r\n\r\n    /// @notice Stage new ProtocolGovernance.\r\n    /// @param newProtocolGovernance new ProtocolGovernance\r\n    function stageProtocolGovernance(IProtocolGovernance newProtocolGovernance) external;\r\n\r\n    /// @notice Commit new ProtocolGovernance.\r\n    function commitStagedProtocolGovernance() external;\r\n\r\n    /// @notice Lock NFT for transfers\r\n    /// @dev Use this method when vault structure is set up and should become immutable. Can be called by owner.\r\n    /// @param nft - NFT to lock\r\n    function lockNft(uint256 nft) external;\r\n}\r\n"
			},
			"contracts/interfaces/external/erc/IERC1271.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.9;\r\n\r\ninterface IERC1271 {\r\n    /// @notice Verifies offchain signature.\r\n    /// @dev Should return whether the signature provided is valid for the provided hash\r\n    ///\r\n    /// MUST return the bytes4 magic value 0x1626ba7e when function passes.\r\n    ///\r\n    /// MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5)\r\n    ///\r\n    /// MUST allow external calls\r\n    /// @param _hash Hash of the data to be signed\r\n    /// @param _signature Signature byte array associated with _hash\r\n    /// @return magicValue 0x1626ba7e if valid, 0xffffffff otherwise\r\n    function isValidSignature(bytes32 _hash, bytes memory _signature) external view returns (bytes4 magicValue);\r\n}\r\n"
			},
			"contracts/interfaces/external/univ3/pool/IUniswapV3PoolDerivedState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Pool state that is not stored\r\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\r\n/// blockchain. The functions here may have variable gas costs.\r\ninterface IUniswapV3PoolDerivedState {\r\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\r\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\r\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\r\n    /// you must call it with secondsAgos = [3600, 0].\r\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\r\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\r\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\r\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\r\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\r\n    /// timestamp\r\n    function observe(uint32[] calldata secondsAgos)\r\n        external\r\n        view\r\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\r\n}\r\n"
			},
			"contracts/interfaces/external/univ3/pool/IUniswapV3PoolState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity =0.8.9;\r\n\r\n/// @title Pool state that can change\r\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\r\n/// per transaction\r\ninterface IUniswapV3PoolState {\r\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\r\n    /// when accessed externally.\r\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\r\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\r\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\r\n    /// boundary.\r\n    /// observationIndex The index of the last oracle observation that was written,\r\n    /// observationCardinality The current maximum number of observations stored in the pool,\r\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\r\n    /// feeProtocol The protocol fee for both tokens of the pool.\r\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\r\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\r\n    /// unlocked Whether the pool is currently locked to reentrancy\r\n    function slot0()\r\n        external\r\n        view\r\n        returns (\r\n            uint160 sqrtPriceX96,\r\n            int24 tick,\r\n            uint16 observationIndex,\r\n            uint16 observationCardinality,\r\n            uint16 observationCardinalityNext,\r\n            uint8 feeProtocol,\r\n            bool unlocked\r\n        );\r\n\r\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\r\n    /// @dev This value can overflow the uint256\r\n    function feeGrowthGlobal0X128() external view returns (uint256);\r\n\r\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\r\n    /// @dev This value can overflow the uint256\r\n    function feeGrowthGlobal1X128() external view returns (uint256);\r\n\r\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\r\n    /// @dev Protocol fees will never exceed uint128 max in either token\r\n    function protocolPerformanceFees() external view returns (uint128 token0, uint128 token1);\r\n\r\n    /// @notice The currently in range liquidity available to the pool\r\n    /// @dev This value has no relationship to the total liquidity across all ticks\r\n    function liquidity() external view returns (uint128);\r\n\r\n    /// @notice Look up information about a specific tick in the pool\r\n    /// @param tick The tick to look up\r\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\r\n    /// tick upper,\r\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\r\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\r\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\r\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\r\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\r\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\r\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\r\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\r\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\r\n    /// a specific position.\r\n    function ticks(int24 tick)\r\n        external\r\n        view\r\n        returns (\r\n            uint128 liquidityGross,\r\n            int128 liquidityNet,\r\n            uint256 feeGrowthOutside0X128,\r\n            uint256 feeGrowthOutside1X128,\r\n            int56 tickCumulativeOutside,\r\n            uint160 secondsPerLiquidityOutsideX128,\r\n            uint32 secondsOutside,\r\n            bool initialized\r\n        );\r\n\r\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\r\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\r\n\r\n    /// @notice Returns the information about a position by the position's key\r\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\r\n    /// @return _liquidity The amount of liquidity in the position,\r\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\r\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\r\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\r\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\r\n    function positions(bytes32 key)\r\n        external\r\n        view\r\n        returns (\r\n            uint128 _liquidity,\r\n            uint256 feeGrowthInside0LastX128,\r\n            uint256 feeGrowthInside1LastX128,\r\n            uint128 tokensOwed0,\r\n            uint128 tokensOwed1\r\n        );\r\n\r\n    /// @notice Returns data about a specific observation index\r\n    /// @param index The element of the observations array to fetch\r\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\r\n    /// ago, rather than at a specific index in the array.\r\n    /// @return blockTimestamp The timestamp of the observation,\r\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\r\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\r\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\r\n    function observations(uint256 index)\r\n        external\r\n        view\r\n        returns (\r\n            uint32 blockTimestamp,\r\n            int56 tickCumulative,\r\n            uint160 secondsPerLiquidityCumulativeX128,\r\n            bool initialized\r\n        );\r\n}\r\n"
			},
			"contracts/interfaces/external/univ3/pool/IUniswapV3PoolImmutables.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Pool state that never changes\r\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\r\ninterface IUniswapV3PoolImmutables {\r\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\r\n    /// @return The contract address\r\n    function factory() external view returns (address);\r\n\r\n    /// @notice The first of the two tokens of the pool, sorted by address\r\n    /// @return The token contract address\r\n    function token0() external view returns (address);\r\n\r\n    /// @notice The second of the two tokens of the pool, sorted by address\r\n    /// @return The token contract address\r\n    function token1() external view returns (address);\r\n\r\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\r\n    /// @return The fee\r\n    function fee() external view returns (uint24);\r\n\r\n    /// @notice The pool tick spacing\r\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\r\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\r\n    /// This value is an int24 to avoid casting even though it is always positive.\r\n    /// @return The tick spacing\r\n    function tickSpacing() external view returns (int24);\r\n\r\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\r\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\r\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\r\n    /// @return The max amount of liquidity per tick\r\n    function maxLiquidityPerTick() external view returns (uint128);\r\n}\r\n"
			},
			"contracts/interfaces/external/univ3/pool/IUniswapV3PoolActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Permissionless pool actions\r\n/// @notice Contains pool methods that can be called by anyone\r\ninterface IUniswapV3PoolActions {\r\n    /// @notice Sets the initial price for the pool\r\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\r\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\r\n    function initialize(uint160 sqrtPriceX96) external;\r\n\r\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\r\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\r\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\r\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\r\n    /// @param recipient The address for which the liquidity will be created\r\n    /// @param tickLower The lower tick of the position in which to add liquidity\r\n    /// @param tickUpper The upper tick of the position in which to add liquidity\r\n    /// @param amount The amount of liquidity to mint\r\n    /// @param data Any data that should be passed through to the callback\r\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\r\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\r\n    function mint(\r\n        address recipient,\r\n        int24 tickLower,\r\n        int24 tickUpper,\r\n        uint128 amount,\r\n        bytes calldata data\r\n    ) external returns (uint256 amount0, uint256 amount1);\r\n\r\n    /// @notice Collects tokens owed to a position\r\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\r\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\r\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\r\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\r\n    /// @param recipient The address which should receive the fees collected\r\n    /// @param tickLower The lower tick of the position for which to collect fees\r\n    /// @param tickUpper The upper tick of the position for which to collect fees\r\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\r\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\r\n    /// @return amount0 The amount of fees collected in token0\r\n    /// @return amount1 The amount of fees collected in token1\r\n    function collect(\r\n        address recipient,\r\n        int24 tickLower,\r\n        int24 tickUpper,\r\n        uint128 amount0Requested,\r\n        uint128 amount1Requested\r\n    ) external returns (uint128 amount0, uint128 amount1);\r\n\r\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\r\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\r\n    /// @dev Fees must be collected separately via a call to #collect\r\n    /// @param tickLower The lower tick of the position for which to burn liquidity\r\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\r\n    /// @param amount How much liquidity to burn\r\n    /// @return amount0 The amount of token0 sent to the recipient\r\n    /// @return amount1 The amount of token1 sent to the recipient\r\n    function burn(\r\n        int24 tickLower,\r\n        int24 tickUpper,\r\n        uint128 amount\r\n    ) external returns (uint256 amount0, uint256 amount1);\r\n\r\n    /// @notice Swap token0 for token1, or token1 for token0\r\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\r\n    /// @param recipient The address to receive the output of the swap\r\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\r\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\r\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\r\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\r\n    /// @param data Any data to be passed through to the callback\r\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\r\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\r\n    function swap(\r\n        address recipient,\r\n        bool zeroForOne,\r\n        int256 amountSpecified,\r\n        uint160 sqrtPriceLimitX96,\r\n        bytes calldata data\r\n    ) external returns (int256 amount0, int256 amount1);\r\n\r\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\r\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\r\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\r\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\r\n    /// @param recipient The address which will receive the token0 and token1 amounts\r\n    /// @param amount0 The amount of token0 to send\r\n    /// @param amount1 The amount of token1 to send\r\n    /// @param data Any data to be passed through to the callback\r\n    function flash(\r\n        address recipient,\r\n        uint256 amount0,\r\n        uint256 amount1,\r\n        bytes calldata data\r\n    ) external;\r\n\r\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\r\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\r\n    /// the input observationCardinalityNext.\r\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\r\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\r\n}\r\n"
			},
			"contracts/interfaces/external/univ3/IPeripheryImmutableState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity =0.8.9;\r\n\r\n/// @title Immutable state\r\n/// @notice Functions that return immutable state of the router\r\ninterface IPeripheryImmutableState {\r\n    /// @return Returns the address of the Uniswap V3 factory\r\n    function factory() external view returns (address);\r\n\r\n    /// @return Returns the address of WETH9\r\n    function WETH9() external view returns (address);\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"contracts/interfaces/IUnitPricesGovernance.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\r\nimport \"./utils/IDefaultAccessControl.sol\";\r\n\r\ninterface IUnitPricesGovernance is IDefaultAccessControl, IERC165 {\r\n    // -------------------  EXTERNAL, VIEW  -------------------\r\n\r\n    /// @notice Estimated amount of token worth 1 USD staged for commit.\r\n    /// @param token Address of the token\r\n    /// @return The amount of token\r\n    function stagedUnitPrices(address token) external view returns (uint256);\r\n\r\n    /// @notice Timestamp after which staged unit prices for the given token can be committed.\r\n    /// @param token Address of the token\r\n    /// @return Timestamp\r\n    function stagedUnitPricesTimestamps(address token) external view returns (uint256);\r\n\r\n    /// @notice Estimated amount of token worth 1 USD.\r\n    /// @param token Address of the token\r\n    /// @return The amount of token\r\n    function unitPrices(address token) external view returns (uint256);\r\n\r\n    // -------------------  EXTERNAL, MUTATING  -------------------\r\n\r\n    /// @notice Stage estimated amount of token worth 1 USD staged for commit.\r\n    /// @param token Address of the token\r\n    /// @param value The amount of token\r\n    function stageUnitPrice(address token, uint256 value) external;\r\n\r\n    /// @notice Reset staged value\r\n    /// @param token Address of the token\r\n    function rollbackUnitPrice(address token) external;\r\n\r\n    /// @notice Commit staged unit price\r\n    /// @param token Address of the token\r\n    function commitUnitPrice(address token) external;\r\n}\r\n"
			},
			"contracts/interfaces/utils/IDefaultAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\";\r\n\r\ninterface IDefaultAccessControl is IAccessControlEnumerable {\r\n    /// @notice Checks that the address is contract admin.\r\n    /// @param who Address to check\r\n    /// @return `true` if who is admin, `false` otherwise\r\n    function isAdmin(address who) external view returns (bool);\r\n\r\n    /// @notice Checks that the address is contract admin.\r\n    /// @param who Address to check\r\n    /// @return `true` if who is operator, `false` otherwise\r\n    function isOperator(address who) external view returns (bool);\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControlEnumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (access/IAccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\n\n/**\n * @dev External interface of AccessControlEnumerable declared to support ERC165 detection.\n */\ninterface IAccessControlEnumerable is IAccessControl {\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x693d1a6333975d5bd166fcc844874f96affecbf45dc5c34fa7d172248d74c06b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e7e0a870c4c25c619d8cef3c646ac78b9e9d4ac15d50f8f2b6729bd04cae47c\",\"dweb:/ipfs/QmNj6rGpNzq6HDnfyBNr8joZCGm23M5kWHAhYfg3BwN7JF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControlEnumerable.sol": {
				"IAccessControlEnumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControlEnumerable declared to support ERC165 detection.",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControlEnumerable declared to support ERC165 detection.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":\"IAccessControlEnumerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x693d1a6333975d5bd166fcc844874f96affecbf45dc5c34fa7d172248d74c06b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e7e0a870c4c25c619d8cef3c646ac78b9e9d4ac15d50f8f2b6729bd04cae47c\",\"dweb:/ipfs/QmNj6rGpNzq6HDnfyBNr8joZCGm23M5kWHAhYfg3BwN7JF\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0x3c3ef4fb25def71f5f18af554ca938950eb9cf218fda073ed2c69b9203c03455\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8083924ad8ee40a1254bb235c59360165b3cac1bc1e9bfd926beecc50c75cffd\",\"dweb:/ipfs/Qme9trL3Q7GAP2B18XAg1DynP1EyQ2K1GcM6MwWgKM97p5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"Clones": {
					"abi": [],
					"devdoc": {
						"details": "https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \"clones\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method. _Available since v3.4._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/Clones.sol\":740:3557  library Clones {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":740:3557  library Clones {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202ccb06fcf7ed52d10db08d73133abc5eb2568b3fbef887814c2b2bfdcee3af5764736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202ccb06fcf7ed52d10db08d73133abc5eb2568b3fbef887814c2b2bfdcee3af5764736f6c63430008090033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0xCB MOD 0xFC 0xF7 0xED MSTORE 0xD1 0xD 0xB0 DUP14 PUSH20 0x133ABC5EB2568B3FBEF887814C2B2BFDCEE3AF57 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
							"sourceMap": "740:2817:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;740:2817:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202ccb06fcf7ed52d10db08d73133abc5eb2568b3fbef887814c2b2bfdcee3af5764736f6c63430008090033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0xCB MOD 0xFC 0xF7 0xED MSTORE 0xD1 0xD 0xB0 DUP14 PUSH20 0x133ABC5EB2568B3FBEF887814C2B2BFDCEE3AF57 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
							"sourceMap": "740:2817:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"clone(address)": "infinite",
								"cloneDeterministic(address,bytes32)": "infinite",
								"predictDeterministicAddress(address,bytes32)": "infinite",
								"predictDeterministicAddress(address,bytes32,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 740,
									"end": 3557,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 740,
									"end": 3557,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 740,
									"end": 3557,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 740,
									"end": 3557,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 740,
									"end": 3557,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 740,
									"end": 3557,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 740,
									"end": 3557,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 740,
									"end": 3557,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 740,
									"end": 3557,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 740,
									"end": 3557,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 740,
									"end": 3557,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 740,
									"end": 3557,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 740,
									"end": 3557,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 740,
									"end": 3557,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 740,
									"end": 3557,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 740,
									"end": 3557,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 740,
									"end": 3557,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 740,
									"end": 3557,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 740,
									"end": 3557,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 740,
									"end": 3557,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 740,
									"end": 3557,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 740,
									"end": 3557,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 740,
									"end": 3557,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 740,
									"end": 3557,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 740,
									"end": 3557,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 740,
									"end": 3557,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 740,
									"end": 3557,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 740,
									"end": 3557,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 740,
									"end": 3557,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 740,
									"end": 3557,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 740,
									"end": 3557,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 740,
									"end": 3557,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 740,
									"end": 3557,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 740,
									"end": 3557,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202ccb06fcf7ed52d10db08d73133abc5eb2568b3fbef887814c2b2bfdcee3af5764736f6c63430008090033",
									".code": [
										{
											"begin": 740,
											"end": 3557,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 740,
											"end": 3557,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 740,
											"end": 3557,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 740,
											"end": 3557,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 740,
											"end": 3557,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 740,
											"end": 3557,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 740,
											"end": 3557,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 3557,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 740,
											"end": 3557,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Clones.sol\":\"Clones\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0xb0ff3f5c37c94cfa0da555a4c7d9034c46d70d0479917bed63612a9fc7092672\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d92b14d2421dde24a46c0b0bf71e0fd992d704c3930fbdda0cbd63ac139f801\",\"dweb:/ipfs/QmUxyqzwRvHLtsosLRh7i3CynAaojXfRJYcE1aBmeUeWrd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x872ba21af7c1f0ae04a715beca31e8fcac764d6c8762940b0fe1bfb6ed8e86f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://497017741d74878b56a67ad51e98061bd9ec0e6e4fdbfef0e2ab51523f4c16de\",\"dweb:/ipfs/QmWfkpRHksy8jFywqYxdmMqdkQ1hxrGTPoNBXbZ48zTvyv\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x6aa521718bf139b44ce56f194f6aea1d590cacef995b5a84703fb1579fa49be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://100f8d367b5e94eb9cb991914f1de133cf272654c0708faa893bbc17a5b35b93\",\"dweb:/ipfs/QmZeBojmgXq821dL1TJKFb58B1FogM9jL3u7hXQ8hTEBKT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x483b106386dd309f168672928252a19f30c30efb4d17d4b8e2b0f587ca784a11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://189a39d066c6886ddbe86c79bb36d6cbe66e98bc6a94956e28f5503dae4ad406\",\"dweb:/ipfs/QmT3s3PwCdXqHLJk26kcnedrRGTC9T18z52i9Be7PV9ppc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x905cd0ecd91d1de79a4679d745b79cf852ca8ccda5d25d1c49c6bd17a5edc0cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dd1601fcd370546d8c06ea1902d7e7364fc490fbf0ebc3004230ef1f5db473c\",\"dweb:/ipfs/Qmb8zbC3TjWFtcuyP3KEEaegMkPcfeKAcPrwzvkAoMR3cZ\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x6aa521718bf139b44ce56f194f6aea1d590cacef995b5a84703fb1579fa49be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://100f8d367b5e94eb9cb991914f1de133cf272654c0708faa893bbc17a5b35b93\",\"dweb:/ipfs/QmZeBojmgXq821dL1TJKFb58B1FogM9jL3u7hXQ8hTEBKT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x6aa521718bf139b44ce56f194f6aea1d590cacef995b5a84703fb1579fa49be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://100f8d367b5e94eb9cb991914f1de133cf272654c0708faa893bbc17a5b35b93\",\"dweb:/ipfs/QmZeBojmgXq821dL1TJKFb58B1FogM9jL3u7hXQ8hTEBKT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IProtocolGovernance.sol": {
				"IProtocolGovernance": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "permissionId",
									"type": "uint8"
								}
							],
							"name": "addressesByPermission",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "commitAllPermissionGrantsSurpassedDelay",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "commitAllValidatorsSurpassedDelay",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "commitParams",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "commitPermissionGrants",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "commitUnitPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "commitValidator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "forceAllowMask",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "governanceDelay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "uint8[]",
									"name": "permissionIds",
									"type": "uint8[]"
								}
							],
							"name": "hasAllPermissions",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "permissionId",
									"type": "uint8"
								}
							],
							"name": "hasPermission",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "isAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "isOperator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxTokensPerVault",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "params",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "maxTokensPerVault",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "governanceDelay",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "protocolTreasury",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "forceAllowMask",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "withdrawLimit",
											"type": "uint256"
										}
									],
									"internalType": "struct IProtocolGovernance.Params",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "permissionAddresses",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "permissionMasks",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolTreasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "uint8[]",
									"name": "permissionIds",
									"type": "uint8[]"
								}
							],
							"name": "revokePermissions",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "revokeValidator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rollbackStagedPermissionGrants",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rollbackStagedValidators",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "rollbackUnitPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "maxTokensPerVault",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "governanceDelay",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "protocolTreasury",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "forceAllowMask",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "withdrawLimit",
											"type": "uint256"
										}
									],
									"internalType": "struct IProtocolGovernance.Params",
									"name": "newParams",
									"type": "tuple"
								}
							],
							"name": "stageParams",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "uint8[]",
									"name": "permissionIds",
									"type": "uint8[]"
								}
							],
							"name": "stagePermissionGrants",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "stageUnitPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "validator",
									"type": "address"
								}
							],
							"name": "stageValidator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stagedParams",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "maxTokensPerVault",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "governanceDelay",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "protocolTreasury",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "forceAllowMask",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "withdrawLimit",
											"type": "uint256"
										}
									],
									"internalType": "struct IProtocolGovernance.Params",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stagedParamsTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stagedPermissionGrantsAddresses",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "stagedPermissionGrantsMasks",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "stagedPermissionGrantsTimestamps",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "stagedUnitPrices",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "stagedUnitPricesTimestamps",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "stagedValidators",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stagedValidatorsAddresses",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "stagedValidatorsTimestamps",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "unitPrices",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "validators",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "i",
									"type": "uint256"
								}
							],
							"name": "validatorsAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "validatorsAddresses",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "withdrawLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addressesByPermission(uint8)": {
								"params": {
									"permissionId": "Id of the permission to check."
								},
								"returns": {
									"_0": "A list of dirty addresses."
								}
							},
							"commitAllPermissionGrantsSurpassedDelay()": {
								"returns": {
									"_0": "An array of addresses for which permission grants were committed."
								}
							},
							"commitAllValidatorsSurpassedDelay()": {
								"returns": {
									"_0": "Addresses for which validators were committed"
								}
							},
							"commitPermissionGrants(address)": {
								"details": "Reverts if governance delay has not passed yet.",
								"params": {
									"target": "The given address."
								}
							},
							"commitUnitPrice(address)": {
								"params": {
									"token": "Address of the token"
								}
							},
							"commitValidator(address)": {
								"details": "Reverts if governance delay has not passed yet.",
								"params": {
									"target": "The given address."
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasAllPermissions(address,uint8[])": {
								"params": {
									"permissionIds": "A list of permissions to check",
									"target": "Address to check"
								}
							},
							"hasPermission(address,uint8)": {
								"params": {
									"addr": "Address to check",
									"permissionId": "Permission to check"
								}
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"isAdmin(address)": {
								"params": {
									"who": "Address to check"
								},
								"returns": {
									"_0": "`true` if who is admin, `false` otherwise"
								}
							},
							"isOperator(address)": {
								"params": {
									"who": "Address to check"
								},
								"returns": {
									"_0": "`true` if who is operator, `false` otherwise"
								}
							},
							"permissionMasks(address)": {
								"params": {
									"target": "The given address"
								},
								"returns": {
									"_0": "Bitmask"
								}
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokePermissions(address,uint8[])": {
								"params": {
									"permissionIds": "A list of permission ids to revoke.",
									"target": "The given address."
								}
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"revokeValidator(address)": {
								"params": {
									"target": "The given address"
								}
							},
							"rollbackUnitPrice(address)": {
								"params": {
									"token": "Address of the token"
								}
							},
							"stageParams((uint256,uint256,address,uint256,uint256))": {
								"params": {
									"newParams": "New protocol parameters to set."
								}
							},
							"stagePermissionGrants(address,uint8[])": {
								"params": {
									"permissionIds": "A list of permission ids to grant",
									"target": "Target address"
								}
							},
							"stageUnitPrice(address,uint256)": {
								"params": {
									"token": "Address of the token",
									"value": "The amount of token"
								}
							},
							"stageValidator(address,address)": {
								"params": {
									"target": "The given address",
									"validator": "The validator for the given address"
								}
							},
							"stagedParamsTimestamp()": {
								"returns": {
									"_0": "Zero if there are no staged parameters, timestamp otherwise."
								}
							},
							"stagedPermissionGrantsMasks(address)": {
								"params": {
									"target": "The given address"
								},
								"returns": {
									"_0": "Bitmask"
								}
							},
							"stagedPermissionGrantsTimestamps(address)": {
								"params": {
									"target": "The given address"
								},
								"returns": {
									"_0": "Zero if there are no staged permission grants, timestamp otherwise"
								}
							},
							"stagedUnitPrices(address)": {
								"params": {
									"token": "Address of the token"
								},
								"returns": {
									"_0": "The amount of token"
								}
							},
							"stagedUnitPricesTimestamps(address)": {
								"params": {
									"token": "Address of the token"
								},
								"returns": {
									"_0": "Timestamp"
								}
							},
							"stagedValidators(address)": {
								"params": {
									"target": "The given address"
								},
								"returns": {
									"_0": "Validator"
								}
							},
							"stagedValidatorsTimestamps(address)": {
								"params": {
									"target": "The given address"
								},
								"returns": {
									"_0": "Zero if there are no staged permission grants, timestamp otherwise"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"unitPrices(address)": {
								"params": {
									"token": "Address of the token"
								},
								"returns": {
									"_0": "The amount of token"
								}
							},
							"validators(address)": {
								"params": {
									"target": "The given address"
								},
								"returns": {
									"_0": "Validator"
								}
							},
							"validatorsAddress(uint256)": {
								"params": {
									"i": "The number of address"
								},
								"returns": {
									"_0": "Validator address"
								}
							},
							"withdrawLimit(address)": {
								"params": {
									"token": "Address of the token"
								},
								"returns": {
									"_0": "Withdraw limit per token per block"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addressesByPermission(uint8)": "717af5ed",
							"commitAllPermissionGrantsSurpassedDelay()": "e970164c",
							"commitAllValidatorsSurpassedDelay()": "577848ea",
							"commitParams()": "bd7692f7",
							"commitPermissionGrants(address)": "887b812d",
							"commitUnitPrice(address)": "3837a1a3",
							"commitValidator(address)": "0161c241",
							"forceAllowMask()": "99fb4234",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"governanceDelay()": "bba32939",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasAllPermissions(address,uint8[])": "9348e4ec",
							"hasPermission(address,uint8)": "63e85d2d",
							"hasRole(bytes32,address)": "91d14854",
							"isAdmin(address)": "24d7806c",
							"isOperator(address)": "6d70f7ae",
							"maxTokensPerVault()": "78546fa2",
							"params()": "cff0ab96",
							"permissionAddresses()": "806bc2f1",
							"permissionMasks(address)": "64cd39af",
							"protocolTreasury()": "803db96d",
							"renounceRole(bytes32,address)": "36568abe",
							"revokePermissions(address,uint8[])": "c7e6ab05",
							"revokeRole(bytes32,address)": "d547741f",
							"revokeValidator(address)": "047564b7",
							"rollbackStagedPermissionGrants()": "bd674f3a",
							"rollbackStagedValidators()": "1dd02197",
							"rollbackUnitPrice(address)": "73680db4",
							"stageParams((uint256,uint256,address,uint256,uint256))": "5c1e4448",
							"stagePermissionGrants(address,uint8[])": "1c3a2341",
							"stageUnitPrice(address,uint256)": "56f46d72",
							"stageValidator(address,address)": "b521bf2d",
							"stagedParams()": "731c01a9",
							"stagedParamsTimestamp()": "bd66b16e",
							"stagedPermissionGrantsAddresses()": "95e3a12d",
							"stagedPermissionGrantsMasks(address)": "2a4ebb41",
							"stagedPermissionGrantsTimestamps(address)": "8e35b028",
							"stagedUnitPrices(address)": "ae24e14a",
							"stagedUnitPricesTimestamps(address)": "12c2d874",
							"stagedValidators(address)": "f7fcd303",
							"stagedValidatorsAddresses()": "1c5afc46",
							"stagedValidatorsTimestamps(address)": "d65c5e6b",
							"supportsInterface(bytes4)": "01ffc9a7",
							"unitPrices(address)": "768a1bfc",
							"validators(address)": "fa52c7d8",
							"validatorsAddress(uint256)": "b3ff103c",
							"validatorsAddresses()": "d1bf2a6b",
							"withdrawLimit(address)": "fce33f01"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"permissionId\",\"type\":\"uint8\"}],\"name\":\"addressesByPermission\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commitAllPermissionGrantsSurpassedDelay\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commitAllValidatorsSurpassedDelay\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commitParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"commitPermissionGrants\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"commitUnitPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"commitValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"forceAllowMask\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint8[]\",\"name\":\"permissionIds\",\"type\":\"uint8[]\"}],\"name\":\"hasAllPermissions\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"permissionId\",\"type\":\"uint8\"}],\"name\":\"hasPermission\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTokensPerVault\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"params\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxTokensPerVault\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceDelay\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"protocolTreasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"forceAllowMask\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawLimit\",\"type\":\"uint256\"}],\"internalType\":\"struct IProtocolGovernance.Params\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permissionAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"permissionMasks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint8[]\",\"name\":\"permissionIds\",\"type\":\"uint8[]\"}],\"name\":\"revokePermissions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"revokeValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rollbackStagedPermissionGrants\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rollbackStagedValidators\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"rollbackUnitPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxTokensPerVault\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceDelay\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"protocolTreasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"forceAllowMask\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawLimit\",\"type\":\"uint256\"}],\"internalType\":\"struct IProtocolGovernance.Params\",\"name\":\"newParams\",\"type\":\"tuple\"}],\"name\":\"stageParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint8[]\",\"name\":\"permissionIds\",\"type\":\"uint8[]\"}],\"name\":\"stagePermissionGrants\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"stageUnitPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"}],\"name\":\"stageValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stagedParams\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxTokensPerVault\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceDelay\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"protocolTreasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"forceAllowMask\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawLimit\",\"type\":\"uint256\"}],\"internalType\":\"struct IProtocolGovernance.Params\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stagedParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stagedPermissionGrantsAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"stagedPermissionGrantsMasks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"stagedPermissionGrantsTimestamps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"stagedUnitPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"stagedUnitPricesTimestamps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"stagedValidators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stagedValidatorsAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"stagedValidatorsTimestamps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"unitPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"validators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"validatorsAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"validatorsAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addressesByPermission(uint8)\":{\"params\":{\"permissionId\":\"Id of the permission to check.\"},\"returns\":{\"_0\":\"A list of dirty addresses.\"}},\"commitAllPermissionGrantsSurpassedDelay()\":{\"returns\":{\"_0\":\"An array of addresses for which permission grants were committed.\"}},\"commitAllValidatorsSurpassedDelay()\":{\"returns\":{\"_0\":\"Addresses for which validators were committed\"}},\"commitPermissionGrants(address)\":{\"details\":\"Reverts if governance delay has not passed yet.\",\"params\":{\"target\":\"The given address.\"}},\"commitUnitPrice(address)\":{\"params\":{\"token\":\"Address of the token\"}},\"commitValidator(address)\":{\"details\":\"Reverts if governance delay has not passed yet.\",\"params\":{\"target\":\"The given address.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasAllPermissions(address,uint8[])\":{\"params\":{\"permissionIds\":\"A list of permissions to check\",\"target\":\"Address to check\"}},\"hasPermission(address,uint8)\":{\"params\":{\"addr\":\"Address to check\",\"permissionId\":\"Permission to check\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isAdmin(address)\":{\"params\":{\"who\":\"Address to check\"},\"returns\":{\"_0\":\"`true` if who is admin, `false` otherwise\"}},\"isOperator(address)\":{\"params\":{\"who\":\"Address to check\"},\"returns\":{\"_0\":\"`true` if who is operator, `false` otherwise\"}},\"permissionMasks(address)\":{\"params\":{\"target\":\"The given address\"},\"returns\":{\"_0\":\"Bitmask\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokePermissions(address,uint8[])\":{\"params\":{\"permissionIds\":\"A list of permission ids to revoke.\",\"target\":\"The given address.\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"revokeValidator(address)\":{\"params\":{\"target\":\"The given address\"}},\"rollbackUnitPrice(address)\":{\"params\":{\"token\":\"Address of the token\"}},\"stageParams((uint256,uint256,address,uint256,uint256))\":{\"params\":{\"newParams\":\"New protocol parameters to set.\"}},\"stagePermissionGrants(address,uint8[])\":{\"params\":{\"permissionIds\":\"A list of permission ids to grant\",\"target\":\"Target address\"}},\"stageUnitPrice(address,uint256)\":{\"params\":{\"token\":\"Address of the token\",\"value\":\"The amount of token\"}},\"stageValidator(address,address)\":{\"params\":{\"target\":\"The given address\",\"validator\":\"The validator for the given address\"}},\"stagedParamsTimestamp()\":{\"returns\":{\"_0\":\"Zero if there are no staged parameters, timestamp otherwise.\"}},\"stagedPermissionGrantsMasks(address)\":{\"params\":{\"target\":\"The given address\"},\"returns\":{\"_0\":\"Bitmask\"}},\"stagedPermissionGrantsTimestamps(address)\":{\"params\":{\"target\":\"The given address\"},\"returns\":{\"_0\":\"Zero if there are no staged permission grants, timestamp otherwise\"}},\"stagedUnitPrices(address)\":{\"params\":{\"token\":\"Address of the token\"},\"returns\":{\"_0\":\"The amount of token\"}},\"stagedUnitPricesTimestamps(address)\":{\"params\":{\"token\":\"Address of the token\"},\"returns\":{\"_0\":\"Timestamp\"}},\"stagedValidators(address)\":{\"params\":{\"target\":\"The given address\"},\"returns\":{\"_0\":\"Validator\"}},\"stagedValidatorsTimestamps(address)\":{\"params\":{\"target\":\"The given address\"},\"returns\":{\"_0\":\"Zero if there are no staged permission grants, timestamp otherwise\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"unitPrices(address)\":{\"params\":{\"token\":\"Address of the token\"},\"returns\":{\"_0\":\"The amount of token\"}},\"validators(address)\":{\"params\":{\"target\":\"The given address\"},\"returns\":{\"_0\":\"Validator\"}},\"validatorsAddress(uint256)\":{\"params\":{\"i\":\"The number of address\"},\"returns\":{\"_0\":\"Validator address\"}},\"withdrawLimit(address)\":{\"params\":{\"token\":\"Address of the token\"},\"returns\":{\"_0\":\"Withdraw limit per token per block\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addressesByPermission(uint8)\":{\"notice\":\"Return all addresses where rawPermissionMask bit for permissionId is set to 1.\"},\"commitAllPermissionGrantsSurpassedDelay()\":{\"notice\":\"Commites all staged permission grants for which governance delay passed.\"},\"commitAllValidatorsSurpassedDelay()\":{\"notice\":\"Commites all staged validators for which governance delay passed\"},\"commitParams()\":{\"notice\":\"Commits staged protocol params. Reverts if governance delay has not passed yet.\"},\"commitPermissionGrants(address)\":{\"notice\":\"Commits permission grants for the given address.\"},\"commitUnitPrice(address)\":{\"notice\":\"Commit staged unit price\"},\"commitValidator(address)\":{\"notice\":\"Commits validator for the given address.\"},\"forceAllowMask()\":{\"notice\":\"Permissions mask which defines if ordinary permission should be reverted. This bitmask is xored with ordinary mask.\"},\"governanceDelay()\":{\"notice\":\"The delay for committing any governance params.\"},\"hasAllPermissions(address,uint8[])\":{\"notice\":\"Checks if address has all permissions.\"},\"hasPermission(address,uint8)\":{\"notice\":\"Checks if address has permission or given permission is force allowed for any address.\"},\"isAdmin(address)\":{\"notice\":\"Checks that the address is contract admin.\"},\"isOperator(address)\":{\"notice\":\"Checks that the address is contract admin.\"},\"maxTokensPerVault()\":{\"notice\":\"Max different ERC20 token addresses that could be managed by the protocol.\"},\"params()\":{\"notice\":\"Current protocol parameters.\"},\"permissionAddresses()\":{\"notice\":\"Addresses for which non-zero permissions are set.\"},\"permissionMasks(address)\":{\"notice\":\"Permission bitmask for the given address.\"},\"protocolTreasury()\":{\"notice\":\"The address of the protocol treasury.\"},\"revokePermissions(address,uint8[])\":{\"notice\":\"Revoke permission instantly from the given address.\"},\"revokeValidator(address)\":{\"notice\":\"Revoke validator instantly from the given address.\"},\"rollbackStagedPermissionGrants()\":{\"notice\":\"Rollback all staged granted permission grant.\"},\"rollbackStagedValidators()\":{\"notice\":\"Rollback all staged validators.\"},\"rollbackUnitPrice(address)\":{\"notice\":\"Reset staged value\"},\"stageParams((uint256,uint256,address,uint256,uint256))\":{\"notice\":\"Sets new pending params that could have been committed after governance delay expires.\"},\"stagePermissionGrants(address,uint8[])\":{\"notice\":\"Stage granted permissions that could have been committed after governance delay expires. Resets commit delay and permissions if there are already staged permissions for this address.\"},\"stageUnitPrice(address,uint256)\":{\"notice\":\"Stage estimated amount of token worth 1 USD staged for commit.\"},\"stageValidator(address,address)\":{\"notice\":\"Stages a new validator for the given address\"},\"stagedParams()\":{\"notice\":\"Staged pending protocol parameters.\"},\"stagedParamsTimestamp()\":{\"notice\":\"Timestamp after which staged pending protocol parameters can be committed\"},\"stagedPermissionGrantsAddresses()\":{\"notice\":\"Permission addresses staged for commit.\"},\"stagedPermissionGrantsMasks(address)\":{\"notice\":\"Staged granted permission bitmask for the given address.\"},\"stagedPermissionGrantsTimestamps(address)\":{\"notice\":\"Timestamp after which staged granted permissions for the given address can be committed.\"},\"stagedUnitPrices(address)\":{\"notice\":\"Estimated amount of token worth 1 USD staged for commit.\"},\"stagedUnitPricesTimestamps(address)\":{\"notice\":\"Timestamp after which staged unit prices for the given token can be committed.\"},\"stagedValidators(address)\":{\"notice\":\"Staged validator for the given address.\"},\"stagedValidatorsAddresses()\":{\"notice\":\"Addresses that has staged validators.\"},\"stagedValidatorsTimestamps(address)\":{\"notice\":\"Timestamp after which staged granted permissions for the given address can be committed.\"},\"unitPrices(address)\":{\"notice\":\"Estimated amount of token worth 1 USD.\"},\"validators(address)\":{\"notice\":\"Validator for the given address.\"},\"validatorsAddress(uint256)\":{\"notice\":\"Address that has validators.\"},\"validatorsAddresses()\":{\"notice\":\"Addresses that has validators.\"},\"withdrawLimit(address)\":{\"notice\":\"Withdraw limit per token per block.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IProtocolGovernance.sol\":\"IProtocolGovernance\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x693d1a6333975d5bd166fcc844874f96affecbf45dc5c34fa7d172248d74c06b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e7e0a870c4c25c619d8cef3c646ac78b9e9d4ac15d50f8f2b6729bd04cae47c\",\"dweb:/ipfs/QmNj6rGpNzq6HDnfyBNr8joZCGm23M5kWHAhYfg3BwN7JF\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0x3c3ef4fb25def71f5f18af554ca938950eb9cf218fda073ed2c69b9203c03455\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8083924ad8ee40a1254bb235c59360165b3cac1bc1e9bfd926beecc50c75cffd\",\"dweb:/ipfs/Qme9trL3Q7GAP2B18XAg1DynP1EyQ2K1GcM6MwWgKM97p5\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x6aa521718bf139b44ce56f194f6aea1d590cacef995b5a84703fb1579fa49be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://100f8d367b5e94eb9cb991914f1de133cf272654c0708faa893bbc17a5b35b93\",\"dweb:/ipfs/QmZeBojmgXq821dL1TJKFb58B1FogM9jL3u7hXQ8hTEBKT\"]},\"contracts/interfaces/IProtocolGovernance.sol\":{\"keccak256\":\"0xda6b37c257d780a870b289b4e44badc6afb7f2301f500a440c4c020abedd98e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93ce78b05dd9bdaea807380cd44e220c217ee4bb27f311993f28ea27c82fd215\",\"dweb:/ipfs/QmcxSoA8MBtwt1FFGVcGo4LCzCSUAB3jfX5TkiafAVQbqx\"]},\"contracts/interfaces/IUnitPricesGovernance.sol\":{\"keccak256\":\"0x300050e0de7d02134592f130cdb90752dc8fcea6cab2e58eb9dafd3a7e3f4e5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1065d39058393c0da9550a424a34e2832882a530e4ddce33f5ddd17bd2d56a72\",\"dweb:/ipfs/QmX1zjA1as8jxrvZCwTyGPVAkCyh7Gg6G89757aJLoGC47\"]},\"contracts/interfaces/utils/IDefaultAccessControl.sol\":{\"keccak256\":\"0x847c664c3e293a19109ec872e341f254a86c6f93548cea827f4e8a485cf994cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95fc19492725d54c1792afc736ec501a1f3a46975ecf584bfd3c0bfd83b140eb\",\"dweb:/ipfs/QmXnawUkM3xxj2ytaTaekvj8FB3JeoiTrrBazhYg47wjSc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addressesByPermission(uint8)": {
								"notice": "Return all addresses where rawPermissionMask bit for permissionId is set to 1."
							},
							"commitAllPermissionGrantsSurpassedDelay()": {
								"notice": "Commites all staged permission grants for which governance delay passed."
							},
							"commitAllValidatorsSurpassedDelay()": {
								"notice": "Commites all staged validators for which governance delay passed"
							},
							"commitParams()": {
								"notice": "Commits staged protocol params. Reverts if governance delay has not passed yet."
							},
							"commitPermissionGrants(address)": {
								"notice": "Commits permission grants for the given address."
							},
							"commitUnitPrice(address)": {
								"notice": "Commit staged unit price"
							},
							"commitValidator(address)": {
								"notice": "Commits validator for the given address."
							},
							"forceAllowMask()": {
								"notice": "Permissions mask which defines if ordinary permission should be reverted. This bitmask is xored with ordinary mask."
							},
							"governanceDelay()": {
								"notice": "The delay for committing any governance params."
							},
							"hasAllPermissions(address,uint8[])": {
								"notice": "Checks if address has all permissions."
							},
							"hasPermission(address,uint8)": {
								"notice": "Checks if address has permission or given permission is force allowed for any address."
							},
							"isAdmin(address)": {
								"notice": "Checks that the address is contract admin."
							},
							"isOperator(address)": {
								"notice": "Checks that the address is contract admin."
							},
							"maxTokensPerVault()": {
								"notice": "Max different ERC20 token addresses that could be managed by the protocol."
							},
							"params()": {
								"notice": "Current protocol parameters."
							},
							"permissionAddresses()": {
								"notice": "Addresses for which non-zero permissions are set."
							},
							"permissionMasks(address)": {
								"notice": "Permission bitmask for the given address."
							},
							"protocolTreasury()": {
								"notice": "The address of the protocol treasury."
							},
							"revokePermissions(address,uint8[])": {
								"notice": "Revoke permission instantly from the given address."
							},
							"revokeValidator(address)": {
								"notice": "Revoke validator instantly from the given address."
							},
							"rollbackStagedPermissionGrants()": {
								"notice": "Rollback all staged granted permission grant."
							},
							"rollbackStagedValidators()": {
								"notice": "Rollback all staged validators."
							},
							"rollbackUnitPrice(address)": {
								"notice": "Reset staged value"
							},
							"stageParams((uint256,uint256,address,uint256,uint256))": {
								"notice": "Sets new pending params that could have been committed after governance delay expires."
							},
							"stagePermissionGrants(address,uint8[])": {
								"notice": "Stage granted permissions that could have been committed after governance delay expires. Resets commit delay and permissions if there are already staged permissions for this address."
							},
							"stageUnitPrice(address,uint256)": {
								"notice": "Stage estimated amount of token worth 1 USD staged for commit."
							},
							"stageValidator(address,address)": {
								"notice": "Stages a new validator for the given address"
							},
							"stagedParams()": {
								"notice": "Staged pending protocol parameters."
							},
							"stagedParamsTimestamp()": {
								"notice": "Timestamp after which staged pending protocol parameters can be committed"
							},
							"stagedPermissionGrantsAddresses()": {
								"notice": "Permission addresses staged for commit."
							},
							"stagedPermissionGrantsMasks(address)": {
								"notice": "Staged granted permission bitmask for the given address."
							},
							"stagedPermissionGrantsTimestamps(address)": {
								"notice": "Timestamp after which staged granted permissions for the given address can be committed."
							},
							"stagedUnitPrices(address)": {
								"notice": "Estimated amount of token worth 1 USD staged for commit."
							},
							"stagedUnitPricesTimestamps(address)": {
								"notice": "Timestamp after which staged unit prices for the given token can be committed."
							},
							"stagedValidators(address)": {
								"notice": "Staged validator for the given address."
							},
							"stagedValidatorsAddresses()": {
								"notice": "Addresses that has staged validators."
							},
							"stagedValidatorsTimestamps(address)": {
								"notice": "Timestamp after which staged granted permissions for the given address can be committed."
							},
							"unitPrices(address)": {
								"notice": "Estimated amount of token worth 1 USD."
							},
							"validators(address)": {
								"notice": "Validator for the given address."
							},
							"validatorsAddress(uint256)": {
								"notice": "Address that has validators."
							},
							"validatorsAddresses()": {
								"notice": "Addresses that has validators."
							},
							"withdrawLimit(address)": {
								"notice": "Withdraw limit per token per block."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IUnitPricesGovernance.sol": {
				"IUnitPricesGovernance": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "commitUnitPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "isAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "isOperator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "rollbackUnitPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "stageUnitPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "stagedUnitPrices",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "stagedUnitPricesTimestamps",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "unitPrices",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"commitUnitPrice(address)": {
								"params": {
									"token": "Address of the token"
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"isAdmin(address)": {
								"params": {
									"who": "Address to check"
								},
								"returns": {
									"_0": "`true` if who is admin, `false` otherwise"
								}
							},
							"isOperator(address)": {
								"params": {
									"who": "Address to check"
								},
								"returns": {
									"_0": "`true` if who is operator, `false` otherwise"
								}
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"rollbackUnitPrice(address)": {
								"params": {
									"token": "Address of the token"
								}
							},
							"stageUnitPrice(address,uint256)": {
								"params": {
									"token": "Address of the token",
									"value": "The amount of token"
								}
							},
							"stagedUnitPrices(address)": {
								"params": {
									"token": "Address of the token"
								},
								"returns": {
									"_0": "The amount of token"
								}
							},
							"stagedUnitPricesTimestamps(address)": {
								"params": {
									"token": "Address of the token"
								},
								"returns": {
									"_0": "Timestamp"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"unitPrices(address)": {
								"params": {
									"token": "Address of the token"
								},
								"returns": {
									"_0": "The amount of token"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"commitUnitPrice(address)": "3837a1a3",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"isAdmin(address)": "24d7806c",
							"isOperator(address)": "6d70f7ae",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"rollbackUnitPrice(address)": "73680db4",
							"stageUnitPrice(address,uint256)": "56f46d72",
							"stagedUnitPrices(address)": "ae24e14a",
							"stagedUnitPricesTimestamps(address)": "12c2d874",
							"supportsInterface(bytes4)": "01ffc9a7",
							"unitPrices(address)": "768a1bfc"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"commitUnitPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"rollbackUnitPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"stageUnitPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"stagedUnitPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"stagedUnitPricesTimestamps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"unitPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"commitUnitPrice(address)\":{\"params\":{\"token\":\"Address of the token\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isAdmin(address)\":{\"params\":{\"who\":\"Address to check\"},\"returns\":{\"_0\":\"`true` if who is admin, `false` otherwise\"}},\"isOperator(address)\":{\"params\":{\"who\":\"Address to check\"},\"returns\":{\"_0\":\"`true` if who is operator, `false` otherwise\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"rollbackUnitPrice(address)\":{\"params\":{\"token\":\"Address of the token\"}},\"stageUnitPrice(address,uint256)\":{\"params\":{\"token\":\"Address of the token\",\"value\":\"The amount of token\"}},\"stagedUnitPrices(address)\":{\"params\":{\"token\":\"Address of the token\"},\"returns\":{\"_0\":\"The amount of token\"}},\"stagedUnitPricesTimestamps(address)\":{\"params\":{\"token\":\"Address of the token\"},\"returns\":{\"_0\":\"Timestamp\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"unitPrices(address)\":{\"params\":{\"token\":\"Address of the token\"},\"returns\":{\"_0\":\"The amount of token\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"commitUnitPrice(address)\":{\"notice\":\"Commit staged unit price\"},\"isAdmin(address)\":{\"notice\":\"Checks that the address is contract admin.\"},\"isOperator(address)\":{\"notice\":\"Checks that the address is contract admin.\"},\"rollbackUnitPrice(address)\":{\"notice\":\"Reset staged value\"},\"stageUnitPrice(address,uint256)\":{\"notice\":\"Stage estimated amount of token worth 1 USD staged for commit.\"},\"stagedUnitPrices(address)\":{\"notice\":\"Estimated amount of token worth 1 USD staged for commit.\"},\"stagedUnitPricesTimestamps(address)\":{\"notice\":\"Timestamp after which staged unit prices for the given token can be committed.\"},\"unitPrices(address)\":{\"notice\":\"Estimated amount of token worth 1 USD.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IUnitPricesGovernance.sol\":\"IUnitPricesGovernance\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x693d1a6333975d5bd166fcc844874f96affecbf45dc5c34fa7d172248d74c06b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e7e0a870c4c25c619d8cef3c646ac78b9e9d4ac15d50f8f2b6729bd04cae47c\",\"dweb:/ipfs/QmNj6rGpNzq6HDnfyBNr8joZCGm23M5kWHAhYfg3BwN7JF\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0x3c3ef4fb25def71f5f18af554ca938950eb9cf218fda073ed2c69b9203c03455\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8083924ad8ee40a1254bb235c59360165b3cac1bc1e9bfd926beecc50c75cffd\",\"dweb:/ipfs/Qme9trL3Q7GAP2B18XAg1DynP1EyQ2K1GcM6MwWgKM97p5\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x6aa521718bf139b44ce56f194f6aea1d590cacef995b5a84703fb1579fa49be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://100f8d367b5e94eb9cb991914f1de133cf272654c0708faa893bbc17a5b35b93\",\"dweb:/ipfs/QmZeBojmgXq821dL1TJKFb58B1FogM9jL3u7hXQ8hTEBKT\"]},\"contracts/interfaces/IUnitPricesGovernance.sol\":{\"keccak256\":\"0x300050e0de7d02134592f130cdb90752dc8fcea6cab2e58eb9dafd3a7e3f4e5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1065d39058393c0da9550a424a34e2832882a530e4ddce33f5ddd17bd2d56a72\",\"dweb:/ipfs/QmX1zjA1as8jxrvZCwTyGPVAkCyh7Gg6G89757aJLoGC47\"]},\"contracts/interfaces/utils/IDefaultAccessControl.sol\":{\"keccak256\":\"0x847c664c3e293a19109ec872e341f254a86c6f93548cea827f4e8a485cf994cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95fc19492725d54c1792afc736ec501a1f3a46975ecf584bfd3c0bfd83b140eb\",\"dweb:/ipfs/QmXnawUkM3xxj2ytaTaekvj8FB3JeoiTrrBazhYg47wjSc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"commitUnitPrice(address)": {
								"notice": "Commit staged unit price"
							},
							"isAdmin(address)": {
								"notice": "Checks that the address is contract admin."
							},
							"isOperator(address)": {
								"notice": "Checks that the address is contract admin."
							},
							"rollbackUnitPrice(address)": {
								"notice": "Reset staged value"
							},
							"stageUnitPrice(address,uint256)": {
								"notice": "Stage estimated amount of token worth 1 USD staged for commit."
							},
							"stagedUnitPrices(address)": {
								"notice": "Estimated amount of token worth 1 USD staged for commit."
							},
							"stagedUnitPricesTimestamps(address)": {
								"notice": "Timestamp after which staged unit prices for the given token can be committed."
							},
							"unitPrices(address)": {
								"notice": "Estimated amount of token worth 1 USD."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IVaultRegistry.sol": {
				"IVaultRegistry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "commitStagedProtocolGovernance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nft",
									"type": "uint256"
								}
							],
							"name": "isLocked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nft",
									"type": "uint256"
								}
							],
							"name": "lockNft",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "nftForVault",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nftId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolGovernance",
							"outputs": [
								{
									"internalType": "contract IProtocolGovernance",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "registerVault",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nft",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IProtocolGovernance",
									"name": "newProtocolGovernance",
									"type": "address"
								}
							],
							"name": "stageProtocolGovernance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stagedProtocolGovernance",
							"outputs": [
								{
									"internalType": "contract IProtocolGovernance",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stagedProtocolGovernanceTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nftId",
									"type": "uint256"
								}
							],
							"name": "vaultForNft",
							"outputs": [
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vaults",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vaultsCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"isLocked(uint256)": {
								"params": {
									"nft": "NFT to check for lock"
								},
								"returns": {
									"_0": "`true` if locked, false otherwise"
								}
							},
							"lockNft(uint256)": {
								"details": "Use this method when vault structure is set up and should become immutable. Can be called by owner.",
								"params": {
									"nft": "- NFT to lock"
								}
							},
							"nftForVault(address)": {
								"params": {
									"vault": "Address of the Vault contract"
								},
								"returns": {
									"nftId": "NFT ID"
								}
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"registerVault(address,address)": {
								"params": {
									"owner": "owner of the NFT",
									"vault": "address of the vault"
								},
								"returns": {
									"nft": "Nft minted for the given Vault"
								}
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"stageProtocolGovernance(address)": {
								"params": {
									"newProtocolGovernance": "new ProtocolGovernance"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							},
							"vaultForNft(uint256)": {
								"params": {
									"nftId": "NFT ID"
								},
								"returns": {
									"vault": "Address of the Vault contract"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"commitStagedProtocolGovernance()": "0407ca13",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"isLocked(uint256)": "f6aacfb1",
							"lockNft(uint256)": "4dcbc739",
							"nftForVault(address)": "fcdabd27",
							"ownerOf(uint256)": "6352211e",
							"protocolGovernance()": "5227ce4c",
							"registerVault(address,address)": "05c4fdf9",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"stageProtocolGovernance(address)": "3be0539c",
							"stagedProtocolGovernance()": "82e9f71f",
							"stagedProtocolGovernanceTimestamp()": "95cdb9a5",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd",
							"vaultForNft(uint256)": "9c94d853",
							"vaults()": "8220ef5b",
							"vaultsCount()": "88977738"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commitStagedProtocolGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"isLocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"lockNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"nftForVault\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolGovernance\",\"outputs\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"registerVault\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"newProtocolGovernance\",\"type\":\"address\"}],\"name\":\"stageProtocolGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stagedProtocolGovernance\",\"outputs\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stagedProtocolGovernanceTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"}],\"name\":\"vaultForNft\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaults\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"isLocked(uint256)\":{\"params\":{\"nft\":\"NFT to check for lock\"},\"returns\":{\"_0\":\"`true` if locked, false otherwise\"}},\"lockNft(uint256)\":{\"details\":\"Use this method when vault structure is set up and should become immutable. Can be called by owner.\",\"params\":{\"nft\":\"- NFT to lock\"}},\"nftForVault(address)\":{\"params\":{\"vault\":\"Address of the Vault contract\"},\"returns\":{\"nftId\":\"NFT ID\"}},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"registerVault(address,address)\":{\"params\":{\"owner\":\"owner of the NFT\",\"vault\":\"address of the vault\"},\"returns\":{\"nft\":\"Nft minted for the given Vault\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"stageProtocolGovernance(address)\":{\"params\":{\"newProtocolGovernance\":\"new ProtocolGovernance\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"vaultForNft(uint256)\":{\"params\":{\"nftId\":\"NFT ID\"},\"returns\":{\"vault\":\"Address of the Vault contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"commitStagedProtocolGovernance()\":{\"notice\":\"Commit new ProtocolGovernance.\"},\"isLocked(uint256)\":{\"notice\":\"Checks if the nft is locked for all transfers\"},\"lockNft(uint256)\":{\"notice\":\"Lock NFT for transfers\"},\"nftForVault(address)\":{\"notice\":\"Get NFT ID for given Vault contract address.\"},\"protocolGovernance()\":{\"notice\":\"Address of the ProtocolGovernance.\"},\"registerVault(address,address)\":{\"notice\":\"Register new Vault and mint NFT.\"},\"stageProtocolGovernance(address)\":{\"notice\":\"Stage new ProtocolGovernance.\"},\"stagedProtocolGovernance()\":{\"notice\":\"Address of the staged ProtocolGovernance.\"},\"stagedProtocolGovernanceTimestamp()\":{\"notice\":\"Minimal timestamp when staged ProtocolGovernance can be applied.\"},\"vaultForNft(uint256)\":{\"notice\":\"Get Vault for the giver NFT ID.\"},\"vaults()\":{\"notice\":\"All Vaults registered.\"},\"vaultsCount()\":{\"notice\":\"Number of Vaults registered.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IVaultRegistry.sol\":\"IVaultRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x693d1a6333975d5bd166fcc844874f96affecbf45dc5c34fa7d172248d74c06b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e7e0a870c4c25c619d8cef3c646ac78b9e9d4ac15d50f8f2b6729bd04cae47c\",\"dweb:/ipfs/QmNj6rGpNzq6HDnfyBNr8joZCGm23M5kWHAhYfg3BwN7JF\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0x3c3ef4fb25def71f5f18af554ca938950eb9cf218fda073ed2c69b9203c03455\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8083924ad8ee40a1254bb235c59360165b3cac1bc1e9bfd926beecc50c75cffd\",\"dweb:/ipfs/Qme9trL3Q7GAP2B18XAg1DynP1EyQ2K1GcM6MwWgKM97p5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x872ba21af7c1f0ae04a715beca31e8fcac764d6c8762940b0fe1bfb6ed8e86f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://497017741d74878b56a67ad51e98061bd9ec0e6e4fdbfef0e2ab51523f4c16de\",\"dweb:/ipfs/QmWfkpRHksy8jFywqYxdmMqdkQ1hxrGTPoNBXbZ48zTvyv\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x6aa521718bf139b44ce56f194f6aea1d590cacef995b5a84703fb1579fa49be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://100f8d367b5e94eb9cb991914f1de133cf272654c0708faa893bbc17a5b35b93\",\"dweb:/ipfs/QmZeBojmgXq821dL1TJKFb58B1FogM9jL3u7hXQ8hTEBKT\"]},\"contracts/interfaces/IProtocolGovernance.sol\":{\"keccak256\":\"0xda6b37c257d780a870b289b4e44badc6afb7f2301f500a440c4c020abedd98e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93ce78b05dd9bdaea807380cd44e220c217ee4bb27f311993f28ea27c82fd215\",\"dweb:/ipfs/QmcxSoA8MBtwt1FFGVcGo4LCzCSUAB3jfX5TkiafAVQbqx\"]},\"contracts/interfaces/IUnitPricesGovernance.sol\":{\"keccak256\":\"0x300050e0de7d02134592f130cdb90752dc8fcea6cab2e58eb9dafd3a7e3f4e5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1065d39058393c0da9550a424a34e2832882a530e4ddce33f5ddd17bd2d56a72\",\"dweb:/ipfs/QmX1zjA1as8jxrvZCwTyGPVAkCyh7Gg6G89757aJLoGC47\"]},\"contracts/interfaces/IVaultRegistry.sol\":{\"keccak256\":\"0x66ba86bbbe472a039ab45b556eb235c9ed64ea0d43de4f22fdf64b9b41e3f4ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8fb21d42fb95e7f8df33c227ae1b2363c7d86288f8d88a076c0163f28c2687e\",\"dweb:/ipfs/QmQboWcs8qDG1kqjoKr5QAVa6oWCHagGoYxcsmNbgYhka3\"]},\"contracts/interfaces/utils/IDefaultAccessControl.sol\":{\"keccak256\":\"0x847c664c3e293a19109ec872e341f254a86c6f93548cea827f4e8a485cf994cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95fc19492725d54c1792afc736ec501a1f3a46975ecf584bfd3c0bfd83b140eb\",\"dweb:/ipfs/QmXnawUkM3xxj2ytaTaekvj8FB3JeoiTrrBazhYg47wjSc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"commitStagedProtocolGovernance()": {
								"notice": "Commit new ProtocolGovernance."
							},
							"isLocked(uint256)": {
								"notice": "Checks if the nft is locked for all transfers"
							},
							"lockNft(uint256)": {
								"notice": "Lock NFT for transfers"
							},
							"nftForVault(address)": {
								"notice": "Get NFT ID for given Vault contract address."
							},
							"protocolGovernance()": {
								"notice": "Address of the ProtocolGovernance."
							},
							"registerVault(address,address)": {
								"notice": "Register new Vault and mint NFT."
							},
							"stageProtocolGovernance(address)": {
								"notice": "Stage new ProtocolGovernance."
							},
							"stagedProtocolGovernance()": {
								"notice": "Address of the staged ProtocolGovernance."
							},
							"stagedProtocolGovernanceTimestamp()": {
								"notice": "Minimal timestamp when staged ProtocolGovernance can be applied."
							},
							"vaultForNft(uint256)": {
								"notice": "Get Vault for the giver NFT ID."
							},
							"vaults()": {
								"notice": "All Vaults registered."
							},
							"vaultsCount()": {
								"notice": "Number of Vaults registered."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/interfaces/external/erc/IERC1271.sol": {
				"IERC1271": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "magicValue",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"isValidSignature(bytes32,bytes)": {
								"details": "Should return whether the signature provided is valid for the provided hash MUST return the bytes4 magic value 0x1626ba7e when function passes. MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5) MUST allow external calls",
								"params": {
									"_hash": "Hash of the data to be signed",
									"_signature": "Signature byte array associated with _hash"
								},
								"returns": {
									"magicValue": "0x1626ba7e if valid, 0xffffffff otherwise"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isValidSignature(bytes32,bytes)": "1626ba7e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided hash MUST return the bytes4 magic value 0x1626ba7e when function passes. MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5) MUST allow external calls\",\"params\":{\"_hash\":\"Hash of the data to be signed\",\"_signature\":\"Signature byte array associated with _hash\"},\"returns\":{\"magicValue\":\"0x1626ba7e if valid, 0xffffffff otherwise\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Verifies offchain signature.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/external/erc/IERC1271.sol\":\"IERC1271\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/external/erc/IERC1271.sol\":{\"keccak256\":\"0x2081de4db31bc623043b8305bf55c676c55250a3b51deb293281d97f1ca7e9c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://712dbbd43245e0bb9ca5573170507fabb506ffe7610dc39f13b4716220479fba\",\"dweb:/ipfs/QmZybwDeFoWpzkZEmMxqPA6Jx1fn8P5ygVHSDFk4uM7xS7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"isValidSignature(bytes32,bytes)": {
								"notice": "Verifies offchain signature."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/interfaces/external/univ3/INonfungiblePositionManager.sol": {
				"INonfungiblePositionManager": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "DecreaseLiquidity",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "IncreaseLiquidity",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint128",
											"name": "amount0Max",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "amount1Max",
											"type": "uint128"
										}
									],
									"internalType": "struct INonfungiblePositionManager.CollectParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint128",
											"name": "liquidity",
											"type": "uint128"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.DecreaseLiquidityParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "decreaseLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.IncreaseLiquidityParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "increaseLiquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickLower",
											"type": "int24"
										},
										{
											"internalType": "int24",
											"name": "tickUpper",
											"type": "int24"
										},
										{
											"internalType": "uint256",
											"name": "amount0Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.MintParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "nonce",
									"type": "uint96"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Collect(uint256,address,uint256,uint256)": {
								"details": "The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior",
								"params": {
									"amount0": "The amount of token0 owed to the position that was collected",
									"amount1": "The amount of token1 owed to the position that was collected",
									"recipient": "The address of the account that received the collected tokens",
									"tokenId": "The ID of the token for which underlying tokens were collected"
								}
							},
							"DecreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was accounted for the decrease in liquidity",
									"amount1": "The amount of token1 that was accounted for the decrease in liquidity",
									"liquidity": "The amount by which liquidity for the NFT position was decreased",
									"tokenId": "The ID of the token for which liquidity was decreased"
								}
							},
							"IncreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"details": "Also emitted when a token is minted",
								"params": {
									"amount0": "The amount of token0 that was paid for the increase in liquidity",
									"amount1": "The amount of token1 that was paid for the increase in liquidity",
									"liquidity": "The amount by which liquidity for the NFT position was increased",
									"tokenId": "The ID of the token for which liquidity was increased"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"WETH9()": {
								"returns": {
									"_0": "Returns the address of WETH9"
								}
							},
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"burn(uint256)": {
								"params": {
									"tokenId": "The ID of the token that is being burned"
								}
							},
							"collect((uint256,address,uint128,uint128))": {
								"params": {
									"params": "tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": {
								"params": {
									"params": "tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change"
								},
								"returns": {
									"amount0": "The amount of token0 accounted to the position's tokens owed",
									"amount1": "The amount of token1 accounted to the position's tokens owed"
								}
							},
							"factory()": {
								"returns": {
									"_0": "Returns the address of the Uniswap V3 factory"
								}
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": {
								"params": {
									"params": "tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change"
								},
								"returns": {
									"amount0": "The amount of token0 to acheive resulting liquidity",
									"amount1": "The amount of token1 to acheive resulting liquidity",
									"liquidity": "The new liquidity amount as a result of the increase"
								}
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": {
								"details": "Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.",
								"params": {
									"params": "The params necessary to mint a position, encoded as `MintParams` in calldata"
								},
								"returns": {
									"amount0": "The amount of token0",
									"amount1": "The amount of token1",
									"liquidity": "The amount of liquidity for this position",
									"tokenId": "The ID of the token that represents the minted position"
								}
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"positions(uint256)": {
								"details": "Throws if the token ID is not valid.",
								"params": {
									"tokenId": "The ID of the token that represents the position"
								},
								"returns": {
									"fee": "The fee associated with the pool",
									"feeGrowthInside0LastX128": "The fee growth of token0 as of the last action on the individual position",
									"feeGrowthInside1LastX128": "The fee growth of token1 as of the last action on the individual position",
									"liquidity": "The liquidity of the position",
									"nonce": "The nonce for permits",
									"operator": "The address that is approved for spending",
									"tickLower": "The lower end of the tick range for the position",
									"tickUpper": "The higher end of the tick range for the position",
									"token0": "The address of the token0 for a specific pool",
									"token1": "The address of the token1 for a specific pool",
									"tokensOwed0": "The uncollected amount of token0 owed to the position as of the last computation",
									"tokensOwed1": "The uncollected amount of token1 owed to the position as of the last computation"
								}
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "Non-fungible token for positions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"collect((uint256,address,uint128,uint128))": "fc6f7865",
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": "0c49ccbe",
							"factory()": "c45a0155",
							"getApproved(uint256)": "081812fc",
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": "219f5d17",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": "88316456",
							"ownerOf(uint256)": "6352211e",
							"positions(uint256)": "99fbab88",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"DecreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"IncreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Max\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Max\",\"type\":\"uint128\"}],\"internalType\":\"struct INonfungiblePositionManager.CollectParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.DecreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"decreaseLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.IncreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"increaseLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.MintParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Collect(uint256,address,uint256,uint256)\":{\"details\":\"The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\",\"params\":{\"amount0\":\"The amount of token0 owed to the position that was collected\",\"amount1\":\"The amount of token1 owed to the position that was collected\",\"recipient\":\"The address of the account that received the collected tokens\",\"tokenId\":\"The ID of the token for which underlying tokens were collected\"}},\"DecreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was accounted for the decrease in liquidity\",\"amount1\":\"The amount of token1 that was accounted for the decrease in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was decreased\",\"tokenId\":\"The ID of the token for which liquidity was decreased\"}},\"IncreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"details\":\"Also emitted when a token is minted\",\"params\":{\"amount0\":\"The amount of token0 that was paid for the increase in liquidity\",\"amount1\":\"The amount of token1 that was paid for the increase in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was increased\",\"tokenId\":\"The ID of the token for which liquidity was increased\"}}},\"kind\":\"dev\",\"methods\":{\"WETH9()\":{\"returns\":{\"_0\":\"Returns the address of WETH9\"}},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"burn(uint256)\":{\"params\":{\"tokenId\":\"The ID of the token that is being burned\"}},\"collect((uint256,address,uint128,uint128))\":{\"params\":{\"params\":\"tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 accounted to the position's tokens owed\",\"amount1\":\"The amount of token1 accounted to the position's tokens owed\"}},\"factory()\":{\"returns\":{\"_0\":\"Returns the address of the Uniswap V3 factory\"}},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 to acheive resulting liquidity\",\"amount1\":\"The amount of token1 to acheive resulting liquidity\",\"liquidity\":\"The new liquidity amount as a result of the increase\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))\":{\"details\":\"Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.\",\"params\":{\"params\":\"The params necessary to mint a position, encoded as `MintParams` in calldata\"},\"returns\":{\"amount0\":\"The amount of token0\",\"amount1\":\"The amount of token1\",\"liquidity\":\"The amount of liquidity for this position\",\"tokenId\":\"The ID of the token that represents the minted position\"}},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"positions(uint256)\":{\"details\":\"Throws if the token ID is not valid.\",\"params\":{\"tokenId\":\"The ID of the token that represents the position\"},\"returns\":{\"fee\":\"The fee associated with the pool\",\"feeGrowthInside0LastX128\":\"The fee growth of token0 as of the last action on the individual position\",\"feeGrowthInside1LastX128\":\"The fee growth of token1 as of the last action on the individual position\",\"liquidity\":\"The liquidity of the position\",\"nonce\":\"The nonce for permits\",\"operator\":\"The address that is approved for spending\",\"tickLower\":\"The lower end of the tick range for the position\",\"tickUpper\":\"The higher end of the tick range for the position\",\"token0\":\"The address of the token0 for a specific pool\",\"token1\":\"The address of the token1 for a specific pool\",\"tokensOwed0\":\"The uncollected amount of token0 owed to the position as of the last computation\",\"tokensOwed1\":\"The uncollected amount of token1 owed to the position as of the last computation\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"Non-fungible token for positions\",\"version\":1},\"userdoc\":{\"events\":{\"Collect(uint256,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are collected for a position NFT\"},\"DecreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is decreased for a position NFT\"},\"IncreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is increased for a position NFT\"}},\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first.\"},\"collect((uint256,address,uint128,uint128))\":{\"notice\":\"Collects up to a maximum amount of fees owed to a specific position to the recipient\"},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"notice\":\"Decreases the amount of liquidity in a position and accounts it to the position\"},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\"},\"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))\":{\"notice\":\"Creates a new position wrapped in a NFT\"},\"positions(uint256)\":{\"notice\":\"Returns the position information associated with a given token ID.\"}},\"notice\":\"Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred and authorized.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/external/univ3/INonfungiblePositionManager.sol\":\"INonfungiblePositionManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x872ba21af7c1f0ae04a715beca31e8fcac764d6c8762940b0fe1bfb6ed8e86f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://497017741d74878b56a67ad51e98061bd9ec0e6e4fdbfef0e2ab51523f4c16de\",\"dweb:/ipfs/QmWfkpRHksy8jFywqYxdmMqdkQ1hxrGTPoNBXbZ48zTvyv\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x6aa521718bf139b44ce56f194f6aea1d590cacef995b5a84703fb1579fa49be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://100f8d367b5e94eb9cb991914f1de133cf272654c0708faa893bbc17a5b35b93\",\"dweb:/ipfs/QmZeBojmgXq821dL1TJKFb58B1FogM9jL3u7hXQ8hTEBKT\"]},\"contracts/interfaces/external/univ3/INonfungiblePositionManager.sol\":{\"keccak256\":\"0x2cf07283a70e7c61de51ad6bb067fbf35219872572dfc10b3388e0e43163f9f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://35790b7ff53f908c7fb2650ebd7dafd9cd23d526db63ef7c7836cbe440efe1d2\",\"dweb:/ipfs/QmQ2R6qZoDGPRnG9FrvDBEUHbuhb6VrAw9QaqheAAqhu3B\"]},\"contracts/interfaces/external/univ3/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x4580b2db1a3e6e749dcc1d9854036b80ea83651df0670a49f1596d7bd4abae13\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e77ef1fe49205ab1f85341e2de918b7058228d2637796b8eee9fb7247270caa2\",\"dweb:/ipfs/Qme2Hpmgui9Nm24zkhPHpQBnt73ginNfkWUDxv2JT8YUBA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Collect(uint256,address,uint256,uint256)": {
								"notice": "Emitted when tokens are collected for a position NFT"
							},
							"DecreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is decreased for a position NFT"
							},
							"IncreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is increased for a position NFT"
							}
						},
						"kind": "user",
						"methods": {
							"burn(uint256)": {
								"notice": "Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first."
							},
							"collect((uint256,address,uint128,uint128))": {
								"notice": "Collects up to a maximum amount of fees owed to a specific position to the recipient"
							},
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": {
								"notice": "Decreases the amount of liquidity in a position and accounts it to the position"
							},
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": {
								"notice": "Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`"
							},
							"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": {
								"notice": "Creates a new position wrapped in a NFT"
							},
							"positions(uint256)": {
								"notice": "Returns the position information associated with a given token ID."
							}
						},
						"notice": "Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred and authorized.",
						"version": 1
					}
				}
			},
			"contracts/interfaces/external/univ3/IPeripheryImmutableState.sol": {
				"IPeripheryImmutableState": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"WETH9()": {
								"returns": {
									"_0": "Returns the address of WETH9"
								}
							},
							"factory()": {
								"returns": {
									"_0": "Returns the address of the Uniswap V3 factory"
								}
							}
						},
						"title": "Immutable state",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"factory()": "c45a0155"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"WETH9()\":{\"returns\":{\"_0\":\"Returns the address of WETH9\"}},\"factory()\":{\"returns\":{\"_0\":\"Returns the address of the Uniswap V3 factory\"}}},\"title\":\"Immutable state\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Functions that return immutable state of the router\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/external/univ3/IPeripheryImmutableState.sol\":\"IPeripheryImmutableState\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/external/univ3/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x4580b2db1a3e6e749dcc1d9854036b80ea83651df0670a49f1596d7bd4abae13\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e77ef1fe49205ab1f85341e2de918b7058228d2637796b8eee9fb7247270caa2\",\"dweb:/ipfs/Qme2Hpmgui9Nm24zkhPHpQBnt73ginNfkWUDxv2JT8YUBA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Functions that return immutable state of the router",
						"version": 1
					}
				}
			},
			"contracts/interfaces/external/univ3/IUniswapV3Pool.sol": {
				"IUniswapV3Pool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolPerformanceFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The pool interface is broken up into many smaller pieces",
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolPerformanceFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "The interface for a Uniswap V3 Pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"liquidity()": "1a686502",
							"maxLiquidityPerTick()": "70cf754a",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"observations(uint256)": "252c09d7",
							"observe(uint32[])": "883bdbfd",
							"positions(bytes32)": "514ea4bf",
							"protocolPerformanceFees()": "1ce9d079",
							"slot0()": "3850c7bd",
							"swap(address,bool,int256,uint160,bytes)": "128acb08",
							"tickBitmap(int16)": "5339c296",
							"tickSpacing()": "d0c93a7c",
							"ticks(int24)": "f30dba93",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolPerformanceFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolPerformanceFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolPerformanceFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/external/univ3/IUniswapV3Pool.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/external/univ3/IUniswapV3Pool.sol\":{\"keccak256\":\"0x5ed3604a829824e7a494212a297c7df61ea3eac9e1be66b43d7e4934d66a50fb\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://741461dc04e7a02feff6db5d6a6a4b8638ed14dbef8b6d73afb85e6de77d71c5\",\"dweb:/ipfs/QmdvEiTZpsyEWLab3pyZDosJBywhLqB7QZp3ppMzshsX2N\"]},\"contracts/interfaces/external/univ3/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0xc0bbb3ed984dff71351269a84eb6e8e05b80fa82f8db633d3c79cce902b10062\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1203ca3fd412d00b180941863d57ac4fb7d87612af5cd130f5f7fad4a9434be5\",\"dweb:/ipfs/QmZxjkYTmDqmyJvTBdAkens6MpoXJ4CHuvhKe5UtYawKBV\"]},\"contracts/interfaces/external/univ3/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xa0b05b8e81826ab8b998d01e9aa5be259d1d00fc8133077969fe81ff2815fa37\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://69c1895b6b0930464290d7d5ae2ed4468965d0053ca4b8ad05793705c465eac2\",\"dweb:/ipfs/QmQXE6AqVpy5ebkTarwk1ZfRkbTGeoYpayc5KfWUdijb3L\"]},\"contracts/interfaces/external/univ3/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0x4c110f8100d8bdd61abfa008dc37dc5f98c12b5b25222ac8ac8bf99ced935300\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ef3fd138626582293a67630e3aeb17065bcc04fb018255ff89c459a81e3bd8da\",\"dweb:/ipfs/QmV7q5EoCzNJsZGkozzb55b1iM6F1kinSKrYdARf2ZkCGb\"]},\"contracts/interfaces/external/univ3/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x9eaa533e27dc574ccd9feb3323ecc892b5153c255aeb4727c161ab9885d761f0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://31989ea5752d8fa6fd3ebe743e1fbb98ec6b0d159dfbf4864958824673748664\",\"dweb:/ipfs/QmWT6hgfaAPo3yFbRx69x6SJwbizmvF95YkPxhbVipRHh6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolPerformanceFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
						"version": 1
					}
				}
			},
			"contracts/interfaces/external/univ3/pool/IUniswapV3PoolActions.sol": {
				"IUniswapV3PoolActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							}
						},
						"title": "Permissionless pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"swap(address,bool,int256,uint160,bytes)": "128acb08"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/external/univ3/pool/IUniswapV3PoolActions.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/external/univ3/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0xc0bbb3ed984dff71351269a84eb6e8e05b80fa82f8db633d3c79cce902b10062\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1203ca3fd412d00b180941863d57ac4fb7d87612af5cd130f5f7fad4a9434be5\",\"dweb:/ipfs/QmZxjkYTmDqmyJvTBdAkens6MpoXJ4CHuvhKe5UtYawKBV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							}
						},
						"notice": "Contains pool methods that can be called by anyone",
						"version": 1
					}
				}
			},
			"contracts/interfaces/external/univ3/pool/IUniswapV3PoolDerivedState.sol": {
				"IUniswapV3PoolDerivedState": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							}
						},
						"title": "Pool state that is not stored",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"observe(uint32[])": "883bdbfd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/external/univ3/pool/IUniswapV3PoolDerivedState.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/external/univ3/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xa0b05b8e81826ab8b998d01e9aa5be259d1d00fc8133077969fe81ff2815fa37\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://69c1895b6b0930464290d7d5ae2ed4468965d0053ca4b8ad05793705c465eac2\",\"dweb:/ipfs/QmQXE6AqVpy5ebkTarwk1ZfRkbTGeoYpayc5KfWUdijb3L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							}
						},
						"notice": "Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.",
						"version": 1
					}
				}
			},
			"contracts/interfaces/external/univ3/pool/IUniswapV3PoolImmutables.sol": {
				"IUniswapV3PoolImmutables": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "Pool state that never changes",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"maxLiquidityPerTick()": "70cf754a",
							"tickSpacing()": "d0c93a7c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/external/univ3/pool/IUniswapV3PoolImmutables.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/external/univ3/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0x4c110f8100d8bdd61abfa008dc37dc5f98c12b5b25222ac8ac8bf99ced935300\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ef3fd138626582293a67630e3aeb17065bcc04fb018255ff89c459a81e3bd8da\",\"dweb:/ipfs/QmV7q5EoCzNJsZGkozzb55b1iM6F1kinSKrYdARf2ZkCGb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
						"version": 1
					}
				}
			},
			"contracts/interfaces/external/univ3/pool/IUniswapV3PoolState.sol": {
				"IUniswapV3PoolState": {
					"abi": [
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolPerformanceFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolPerformanceFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							}
						},
						"title": "Pool state that can change",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"liquidity()": "1a686502",
							"observations(uint256)": "252c09d7",
							"positions(bytes32)": "514ea4bf",
							"protocolPerformanceFees()": "1ce9d079",
							"slot0()": "3850c7bd",
							"tickBitmap(int16)": "5339c296",
							"ticks(int24)": "f30dba93"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolPerformanceFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolPerformanceFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolPerformanceFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/external/univ3/pool/IUniswapV3PoolState.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/external/univ3/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x9eaa533e27dc574ccd9feb3323ecc892b5153c255aeb4727c161ab9885d761f0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://31989ea5752d8fa6fd3ebe743e1fbb98ec6b0d159dfbf4864958824673748664\",\"dweb:/ipfs/QmWT6hgfaAPo3yFbRx69x6SJwbizmvF95YkPxhbVipRHh6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolPerformanceFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							}
						},
						"notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
						"version": 1
					}
				}
			},
			"contracts/interfaces/oracles/IOracle.sol": {
				"IOracle": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "safetyIndicesSet",
									"type": "uint256"
								}
							],
							"name": "priceX96",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "pricesX96",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "safetyIndices",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"priceX96(address,address,uint256)": {
								"details": "The price is token1 / token0 i.e. how many weis of token1 required for 1 wei of token0. The safety indexes are: 1 - unsafe, this is typically a spot price that can be easily manipulated, 2 - 4 - more or less safe, this is typically a uniV3 oracle, where the safety is defined by the timespan of the average price 5 - safe - this is typically a chailink oracle",
								"params": {
									"safetyIndicesSet": "Bitmask of safety indices that are allowed for the return prices. For set of safety indexes = { 1 }, safetyIndicesSet = 0x2",
									"token0": "Reference to token0",
									"token1": "Reference to token1"
								},
								"returns": {
									"pricesX96": "Prices that satisfy safetyIndex and tokens",
									"safetyIndices": "Safety indices for those prices"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"priceX96(address,address,uint256)": "6d80125b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"safetyIndicesSet\",\"type\":\"uint256\"}],\"name\":\"priceX96\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"pricesX96\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"safetyIndices\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"priceX96(address,address,uint256)\":{\"details\":\"The price is token1 / token0 i.e. how many weis of token1 required for 1 wei of token0. The safety indexes are: 1 - unsafe, this is typically a spot price that can be easily manipulated, 2 - 4 - more or less safe, this is typically a uniV3 oracle, where the safety is defined by the timespan of the average price 5 - safe - this is typically a chailink oracle\",\"params\":{\"safetyIndicesSet\":\"Bitmask of safety indices that are allowed for the return prices. For set of safety indexes = { 1 }, safetyIndicesSet = 0x2\",\"token0\":\"Reference to token0\",\"token1\":\"Reference to token1\"},\"returns\":{\"pricesX96\":\"Prices that satisfy safetyIndex and tokens\",\"safetyIndices\":\"Safety indices for those prices\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"priceX96(address,address,uint256)\":{\"notice\":\"Oracle price for tokens as a Q64.96 value.Returns pricing information based on the indexes of non-zero bits in safetyIndicesSet.It is possible that not all indices will have their respective prices returned.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/oracles/IOracle.sol\":\"IOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/oracles/IOracle.sol\":{\"keccak256\":\"0x4629a653a356248a9683d6e02a6fb738802b60086b1cb8cdbfa05385f1914b5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b733f94000de360f16dd43a6ef2ad51c42f03520f7c6827919922de5d0e1149\",\"dweb:/ipfs/QmZsdkkSrjG5cViQF5qxmU9wvnLmLKgyBvANRhTYTPaisJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"priceX96(address,address,uint256)": {
								"notice": "Oracle price for tokens as a Q64.96 value.Returns pricing information based on the indexes of non-zero bits in safetyIndicesSet.It is possible that not all indices will have their respective prices returned."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/interfaces/utils/IContractMeta.sol": {
				"IContractMeta": {
					"abi": [
						{
							"inputs": [],
							"name": "contractName",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractNameBytes",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractVersion",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractVersionBytes",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"contractName()": "75d0c0dc",
							"contractNameBytes()": "0e3e80ac",
							"contractVersion()": "a0a8e460",
							"contractVersionBytes()": "06a46239"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"contractName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractNameBytes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersionBytes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/utils/IContractMeta.sol\":\"IContractMeta\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/utils/IContractMeta.sol\":{\"keccak256\":\"0x71ab67daf730f37610ce5964dda62744edb347fa5b12210f9bb7c9239ff66e2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6f38640781fbb7476777544c34457723765be302d0b208a7e841a6361967812\",\"dweb:/ipfs/QmRKa7A3FZJvjrJwZnhKUuddfdH7J7HuRTQBbdfBwiU4rU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/utils/IDefaultAccessControl.sol": {
				"IDefaultAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "isAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "isOperator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"isAdmin(address)": {
								"params": {
									"who": "Address to check"
								},
								"returns": {
									"_0": "`true` if who is admin, `false` otherwise"
								}
							},
							"isOperator(address)": {
								"params": {
									"who": "Address to check"
								},
								"returns": {
									"_0": "`true` if who is operator, `false` otherwise"
								}
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"isAdmin(address)": "24d7806c",
							"isOperator(address)": "6d70f7ae",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isAdmin(address)\":{\"params\":{\"who\":\"Address to check\"},\"returns\":{\"_0\":\"`true` if who is admin, `false` otherwise\"}},\"isOperator(address)\":{\"params\":{\"who\":\"Address to check\"},\"returns\":{\"_0\":\"`true` if who is operator, `false` otherwise\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isAdmin(address)\":{\"notice\":\"Checks that the address is contract admin.\"},\"isOperator(address)\":{\"notice\":\"Checks that the address is contract admin.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/utils/IDefaultAccessControl.sol\":\"IDefaultAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x693d1a6333975d5bd166fcc844874f96affecbf45dc5c34fa7d172248d74c06b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e7e0a870c4c25c619d8cef3c646ac78b9e9d4ac15d50f8f2b6729bd04cae47c\",\"dweb:/ipfs/QmNj6rGpNzq6HDnfyBNr8joZCGm23M5kWHAhYfg3BwN7JF\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0x3c3ef4fb25def71f5f18af554ca938950eb9cf218fda073ed2c69b9203c03455\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8083924ad8ee40a1254bb235c59360165b3cac1bc1e9bfd926beecc50c75cffd\",\"dweb:/ipfs/Qme9trL3Q7GAP2B18XAg1DynP1EyQ2K1GcM6MwWgKM97p5\"]},\"contracts/interfaces/utils/IDefaultAccessControl.sol\":{\"keccak256\":\"0x847c664c3e293a19109ec872e341f254a86c6f93548cea827f4e8a485cf994cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95fc19492725d54c1792afc736ec501a1f3a46975ecf584bfd3c0bfd83b140eb\",\"dweb:/ipfs/QmXnawUkM3xxj2ytaTaekvj8FB3JeoiTrrBazhYg47wjSc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"isAdmin(address)": {
								"notice": "Checks that the address is contract admin."
							},
							"isOperator(address)": {
								"notice": "Checks that the address is contract admin."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/interfaces/vaults/IIntegrationVault.sol": {
				"IIntegrationVault": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "selector",
									"type": "bytes4"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "externalCall",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "result",
									"type": "bytes"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "magicValue",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "isVaultToken",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nft",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "tokens",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "tokenAmounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "options",
									"type": "bytes"
								}
							],
							"name": "pull",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "actualTokenAmounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pullExistentials",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "tokens",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "tokenAmounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "options",
									"type": "bytes"
								}
							],
							"name": "push",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "actualTokenAmounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "tokens",
									"type": "address[]"
								}
							],
							"name": "reclaimTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "actualTokenAmounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "tokens",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "tokenAmounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "options",
									"type": "bytes"
								}
							],
							"name": "transferAndPush",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "actualTokenAmounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tvl",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "minTokenAmounts",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "maxTokenAmounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vaultGovernance",
							"outputs": [
								{
									"internalType": "contract IVaultGovernance",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vaultTokens",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"externalCall(address,bytes4,bytes)": {
								"details": "Can only be called by Vault Owner or Strategy. Vault owner is the owner of NFT for this vault in VaultManager. Strategy is approved address for the vault NFT. Since this method allows sending arbitrary transactions, the destinations of the calls are whitelisted by Protocol Governance.",
								"params": {
									"data": "Abi encoded parameters to `to::selector`",
									"selector": "Selector of the call",
									"to": "Address of the reward pool"
								},
								"returns": {
									"result": "Result of execution of the call"
								}
							},
							"isValidSignature(bytes32,bytes)": {
								"details": "Should return whether the signature provided is valid for the provided hash MUST return the bytes4 magic value 0x1626ba7e when function passes. MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5) MUST allow external calls",
								"params": {
									"_hash": "Hash of the data to be signed",
									"_signature": "Signature byte array associated with _hash"
								},
								"returns": {
									"magicValue": "0x1626ba7e if valid, 0xffffffff otherwise"
								}
							},
							"isVaultToken(address)": {
								"params": {
									"token": "Address of the token to check"
								},
								"returns": {
									"_0": "`true` if this token is managed by Vault"
								}
							},
							"pull(address,address[],uint256[],bytes)": {
								"details": "Can only be called but Vault Owner or Strategy. Vault owner is the owner of NFT for this vault in VaultManager. Strategy is approved address for the vault NFT. When called by vault owner this method just pulls the tokens from the protocol to the `to` address When called by strategy on vault other than zero vault it pulls the tokens to zero vault (required `to` == zero vault) When called by strategy on zero vault it pulls the tokens to zero vault, pushes tokens on the `to` vault, and reclaims everything that's left. Thus any vault other than zero vault cannot have any tokens on it Tokens **must** be a subset of Vault Tokens. However, the convention is that if tokenAmount == 0 it is the same as token is missing. Pull is fulfilled on the best effort basis, i.e. if the tokenAmounts overflows available funds it withdraws all the funds.",
								"params": {
									"options": "Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions",
									"to": "Address to receive the tokens",
									"tokenAmounts": "Amounts of tokens to pull",
									"tokens": "Tokens to pull"
								},
								"returns": {
									"actualTokenAmounts": "The amounts actually withdrawn. It could be less than tokenAmounts (but not higher)"
								}
							},
							"push(address[],uint256[],bytes)": {
								"details": "Tokens **must** be a subset of Vault Tokens. However, the convention is that if tokenAmount == 0 it is the same as token is missing. Also notice that this operation doesn't guarantee that tokenAmounts will be invested in full.",
								"params": {
									"options": "Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions",
									"tokenAmounts": "Amounts of tokens to push",
									"tokens": "Tokens to push"
								},
								"returns": {
									"actualTokenAmounts": "The amounts actually invested. It could be less than tokenAmounts (but not higher)"
								}
							},
							"reclaimTokens(address[])": {
								"details": "Cannot be called from zero vault.",
								"params": {
									"tokens": "Tokens to claim"
								},
								"returns": {
									"actualTokenAmounts": "Amounts reclaimed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferAndPush(address,address[],uint256[],bytes)": {
								"params": {
									"options": "Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions",
									"tokenAmounts": "Amounts of tokens to push",
									"tokens": "Tokens to push"
								},
								"returns": {
									"actualTokenAmounts": "The amounts actually invested. It could be less than tokenAmounts (but not higher)"
								}
							},
							"tvl()": {
								"details": "Generally it is the underlying token value of this contract in some other DeFi protocol. For example, for USDC Yearn Vault this would be total USDC balance that could be withdrawn for Yearn to this contract. The tvl itself is estimated in some range. Sometimes the range is exact, sometimes it's not",
								"returns": {
									"maxTokenAmounts": "Upper bound for total available balances estimation (nth tokenAmount corresponds to nth token in vaultTokens)",
									"minTokenAmounts": "Lower bound for total available balances estimation (nth tokenAmount corresponds to nth token in vaultTokens)"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"externalCall(address,bytes4,bytes)": "2e2f4cc2",
							"initialized()": "158ef93e",
							"isValidSignature(bytes32,bytes)": "1626ba7e",
							"isVaultToken(address)": "338c4ccb",
							"nft()": "47ccca02",
							"pull(address,address[],uint256[],bytes)": "2062d754",
							"pullExistentials()": "d2c219b0",
							"push(address[],uint256[],bytes)": "566ca6b4",
							"reclaimTokens(address[])": "05e1c942",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferAndPush(address,address[],uint256[],bytes)": "27a35e5a",
							"tvl()": "e5328e06",
							"vaultGovernance()": "fe255a5e",
							"vaultTokens()": "69722233"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"externalCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isVaultToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"}],\"name\":\"pull\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"actualTokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullExistentials\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"}],\"name\":\"push\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"actualTokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"reclaimTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"actualTokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"}],\"name\":\"transferAndPush\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"actualTokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tvl\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"minTokenAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"maxTokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultGovernance\",\"outputs\":[{\"internalType\":\"contract IVaultGovernance\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"externalCall(address,bytes4,bytes)\":{\"details\":\"Can only be called by Vault Owner or Strategy. Vault owner is the owner of NFT for this vault in VaultManager. Strategy is approved address for the vault NFT. Since this method allows sending arbitrary transactions, the destinations of the calls are whitelisted by Protocol Governance.\",\"params\":{\"data\":\"Abi encoded parameters to `to::selector`\",\"selector\":\"Selector of the call\",\"to\":\"Address of the reward pool\"},\"returns\":{\"result\":\"Result of execution of the call\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided hash MUST return the bytes4 magic value 0x1626ba7e when function passes. MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5) MUST allow external calls\",\"params\":{\"_hash\":\"Hash of the data to be signed\",\"_signature\":\"Signature byte array associated with _hash\"},\"returns\":{\"magicValue\":\"0x1626ba7e if valid, 0xffffffff otherwise\"}},\"isVaultToken(address)\":{\"params\":{\"token\":\"Address of the token to check\"},\"returns\":{\"_0\":\"`true` if this token is managed by Vault\"}},\"pull(address,address[],uint256[],bytes)\":{\"details\":\"Can only be called but Vault Owner or Strategy. Vault owner is the owner of NFT for this vault in VaultManager. Strategy is approved address for the vault NFT. When called by vault owner this method just pulls the tokens from the protocol to the `to` address When called by strategy on vault other than zero vault it pulls the tokens to zero vault (required `to` == zero vault) When called by strategy on zero vault it pulls the tokens to zero vault, pushes tokens on the `to` vault, and reclaims everything that's left. Thus any vault other than zero vault cannot have any tokens on it Tokens **must** be a subset of Vault Tokens. However, the convention is that if tokenAmount == 0 it is the same as token is missing. Pull is fulfilled on the best effort basis, i.e. if the tokenAmounts overflows available funds it withdraws all the funds.\",\"params\":{\"options\":\"Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions\",\"to\":\"Address to receive the tokens\",\"tokenAmounts\":\"Amounts of tokens to pull\",\"tokens\":\"Tokens to pull\"},\"returns\":{\"actualTokenAmounts\":\"The amounts actually withdrawn. It could be less than tokenAmounts (but not higher)\"}},\"push(address[],uint256[],bytes)\":{\"details\":\"Tokens **must** be a subset of Vault Tokens. However, the convention is that if tokenAmount == 0 it is the same as token is missing. Also notice that this operation doesn't guarantee that tokenAmounts will be invested in full.\",\"params\":{\"options\":\"Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions\",\"tokenAmounts\":\"Amounts of tokens to push\",\"tokens\":\"Tokens to push\"},\"returns\":{\"actualTokenAmounts\":\"The amounts actually invested. It could be less than tokenAmounts (but not higher)\"}},\"reclaimTokens(address[])\":{\"details\":\"Cannot be called from zero vault.\",\"params\":{\"tokens\":\"Tokens to claim\"},\"returns\":{\"actualTokenAmounts\":\"Amounts reclaimed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferAndPush(address,address[],uint256[],bytes)\":{\"params\":{\"options\":\"Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions\",\"tokenAmounts\":\"Amounts of tokens to push\",\"tokens\":\"Tokens to push\"},\"returns\":{\"actualTokenAmounts\":\"The amounts actually invested. It could be less than tokenAmounts (but not higher)\"}},\"tvl()\":{\"details\":\"Generally it is the underlying token value of this contract in some other DeFi protocol. For example, for USDC Yearn Vault this would be total USDC balance that could be withdrawn for Yearn to this contract. The tvl itself is estimated in some range. Sometimes the range is exact, sometimes it's not\",\"returns\":{\"maxTokenAmounts\":\"Upper bound for total available balances estimation (nth tokenAmount corresponds to nth token in vaultTokens)\",\"minTokenAmounts\":\"Lower bound for total available balances estimation (nth tokenAmount corresponds to nth token in vaultTokens)\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"externalCall(address,bytes4,bytes)\":{\"notice\":\"Execute one of whitelisted calls.\"},\"initialized()\":{\"notice\":\"Checks if the vault is initialized\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Verifies offchain signature.\"},\"isVaultToken(address)\":{\"notice\":\"Checks if a token is vault token\"},\"nft()\":{\"notice\":\"VaultRegistry NFT for this vault\"},\"pull(address,address[],uint256[],bytes)\":{\"notice\":\"Pulls tokens from the underlying protocol to the `to` address.\"},\"pullExistentials()\":{\"notice\":\"Existential amounts for each token\"},\"push(address[],uint256[],bytes)\":{\"notice\":\"Pushes tokens on the vault balance to the underlying protocol. For example, for Yearn this operation will take USDC from the contract balance and convert it to yUSDC.\"},\"reclaimTokens(address[])\":{\"notice\":\"Claim ERC20 tokens from vault balance to zero vault.\"},\"transferAndPush(address,address[],uint256[],bytes)\":{\"notice\":\"The same as `push` method above but transfers tokens to vault balance prior to calling push. After the `push` it returns all the leftover tokens back (`push` method doesn't guarantee that tokenAmounts will be invested in full).\"},\"tvl()\":{\"notice\":\"Total value locked for this contract.\"},\"vaultGovernance()\":{\"notice\":\"Address of the Vault Governance for this contract.\"},\"vaultTokens()\":{\"notice\":\"ERC20 tokens under Vault management.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/vaults/IIntegrationVault.sol\":\"IIntegrationVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x693d1a6333975d5bd166fcc844874f96affecbf45dc5c34fa7d172248d74c06b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e7e0a870c4c25c619d8cef3c646ac78b9e9d4ac15d50f8f2b6729bd04cae47c\",\"dweb:/ipfs/QmNj6rGpNzq6HDnfyBNr8joZCGm23M5kWHAhYfg3BwN7JF\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0x3c3ef4fb25def71f5f18af554ca938950eb9cf218fda073ed2c69b9203c03455\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8083924ad8ee40a1254bb235c59360165b3cac1bc1e9bfd926beecc50c75cffd\",\"dweb:/ipfs/Qme9trL3Q7GAP2B18XAg1DynP1EyQ2K1GcM6MwWgKM97p5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x872ba21af7c1f0ae04a715beca31e8fcac764d6c8762940b0fe1bfb6ed8e86f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://497017741d74878b56a67ad51e98061bd9ec0e6e4fdbfef0e2ab51523f4c16de\",\"dweb:/ipfs/QmWfkpRHksy8jFywqYxdmMqdkQ1hxrGTPoNBXbZ48zTvyv\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x6aa521718bf139b44ce56f194f6aea1d590cacef995b5a84703fb1579fa49be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://100f8d367b5e94eb9cb991914f1de133cf272654c0708faa893bbc17a5b35b93\",\"dweb:/ipfs/QmZeBojmgXq821dL1TJKFb58B1FogM9jL3u7hXQ8hTEBKT\"]},\"contracts/interfaces/IProtocolGovernance.sol\":{\"keccak256\":\"0xda6b37c257d780a870b289b4e44badc6afb7f2301f500a440c4c020abedd98e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93ce78b05dd9bdaea807380cd44e220c217ee4bb27f311993f28ea27c82fd215\",\"dweb:/ipfs/QmcxSoA8MBtwt1FFGVcGo4LCzCSUAB3jfX5TkiafAVQbqx\"]},\"contracts/interfaces/IUnitPricesGovernance.sol\":{\"keccak256\":\"0x300050e0de7d02134592f130cdb90752dc8fcea6cab2e58eb9dafd3a7e3f4e5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1065d39058393c0da9550a424a34e2832882a530e4ddce33f5ddd17bd2d56a72\",\"dweb:/ipfs/QmX1zjA1as8jxrvZCwTyGPVAkCyh7Gg6G89757aJLoGC47\"]},\"contracts/interfaces/IVaultRegistry.sol\":{\"keccak256\":\"0x66ba86bbbe472a039ab45b556eb235c9ed64ea0d43de4f22fdf64b9b41e3f4ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8fb21d42fb95e7f8df33c227ae1b2363c7d86288f8d88a076c0163f28c2687e\",\"dweb:/ipfs/QmQboWcs8qDG1kqjoKr5QAVa6oWCHagGoYxcsmNbgYhka3\"]},\"contracts/interfaces/external/erc/IERC1271.sol\":{\"keccak256\":\"0x2081de4db31bc623043b8305bf55c676c55250a3b51deb293281d97f1ca7e9c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://712dbbd43245e0bb9ca5573170507fabb506ffe7610dc39f13b4716220479fba\",\"dweb:/ipfs/QmZybwDeFoWpzkZEmMxqPA6Jx1fn8P5ygVHSDFk4uM7xS7\"]},\"contracts/interfaces/utils/IDefaultAccessControl.sol\":{\"keccak256\":\"0x847c664c3e293a19109ec872e341f254a86c6f93548cea827f4e8a485cf994cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95fc19492725d54c1792afc736ec501a1f3a46975ecf584bfd3c0bfd83b140eb\",\"dweb:/ipfs/QmXnawUkM3xxj2ytaTaekvj8FB3JeoiTrrBazhYg47wjSc\"]},\"contracts/interfaces/vaults/IIntegrationVault.sol\":{\"keccak256\":\"0xad9b4303b547c9304e51078cffc69552de4308a30036b1d07cc02a05ce5476d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ddd09b0d3b58bb44b45555f2a363db98e93016cae4518511c4d3e68736b30b5\",\"dweb:/ipfs/QmYME2tp5jr9G5JhCALziJqPLysB7tgAUTkVE7rtkydA5E\"]},\"contracts/interfaces/vaults/IVault.sol\":{\"keccak256\":\"0x9e74850f8f3ecd6eab0f6b1adaad960c443b14c128007a77260d2bb6bcb686d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87c2e0bdacc0a3fe9825f07a2de8ece41a6cc477872b10bd2b083400a13f4b8e\",\"dweb:/ipfs/QmWWvR4uQY7rXboGbVBEnDH9QvTRJW9pSmSoPq8f9p8JgT\"]},\"contracts/interfaces/vaults/IVaultGovernance.sol\":{\"keccak256\":\"0xa5b24cd080393cb094d7887bbdc04fb4361fde90280e8bf9856428b6b6ebd90d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6ce19e4c8a5b788963f895c6ebde1c84a294a284e76d9733d9bf89f75d2eca2\",\"dweb:/ipfs/QmWFXkhuaaCr3VaRaKSe12hs6DKeebQhDUqAd4z6TeByJq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"externalCall(address,bytes4,bytes)": {
								"notice": "Execute one of whitelisted calls."
							},
							"initialized()": {
								"notice": "Checks if the vault is initialized"
							},
							"isValidSignature(bytes32,bytes)": {
								"notice": "Verifies offchain signature."
							},
							"isVaultToken(address)": {
								"notice": "Checks if a token is vault token"
							},
							"nft()": {
								"notice": "VaultRegistry NFT for this vault"
							},
							"pull(address,address[],uint256[],bytes)": {
								"notice": "Pulls tokens from the underlying protocol to the `to` address."
							},
							"pullExistentials()": {
								"notice": "Existential amounts for each token"
							},
							"push(address[],uint256[],bytes)": {
								"notice": "Pushes tokens on the vault balance to the underlying protocol. For example, for Yearn this operation will take USDC from the contract balance and convert it to yUSDC."
							},
							"reclaimTokens(address[])": {
								"notice": "Claim ERC20 tokens from vault balance to zero vault."
							},
							"transferAndPush(address,address[],uint256[],bytes)": {
								"notice": "The same as `push` method above but transfers tokens to vault balance prior to calling push. After the `push` it returns all the leftover tokens back (`push` method doesn't guarantee that tokenAmounts will be invested in full)."
							},
							"tvl()": {
								"notice": "Total value locked for this contract."
							},
							"vaultGovernance()": {
								"notice": "Address of the Vault Governance for this contract."
							},
							"vaultTokens()": {
								"notice": "ERC20 tokens under Vault management."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/interfaces/vaults/IUniV3Vault.sol": {
				"IUniV3Vault": {
					"abi": [
						{
							"inputs": [],
							"name": "collectEarnings",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "collectedEarnings",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "selector",
									"type": "bytes4"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "externalCall",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "result",
									"type": "bytes"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nft_",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "vaultTokens_",
									"type": "address[]"
								},
								{
									"internalType": "uint24",
									"name": "fee_",
									"type": "uint24"
								},
								{
									"internalType": "address",
									"name": "uniV3Helper_",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "magicValue",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "isVaultToken",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								}
							],
							"name": "liquidityToTokenAmounts",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenAmounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nft",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pool",
							"outputs": [
								{
									"internalType": "contract IUniswapV3Pool",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "positionManager",
							"outputs": [
								{
									"internalType": "contract INonfungiblePositionManager",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "tokens",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "tokenAmounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "options",
									"type": "bytes"
								}
							],
							"name": "pull",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "actualTokenAmounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pullExistentials",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "tokens",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "tokenAmounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "options",
									"type": "bytes"
								}
							],
							"name": "push",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "actualTokenAmounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "tokens",
									"type": "address[]"
								}
							],
							"name": "reclaimTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "actualTokenAmounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenAmounts",
									"type": "uint256[]"
								}
							],
							"name": "tokenAmountsToLiquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "tokens",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "tokenAmounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "options",
									"type": "bytes"
								}
							],
							"name": "transferAndPush",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "actualTokenAmounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tvl",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "minTokenAmounts",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "maxTokenAmounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniV3Nft",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vaultGovernance",
							"outputs": [
								{
									"internalType": "contract IVaultGovernance",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vaultTokens",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"externalCall(address,bytes4,bytes)": {
								"details": "Can only be called by Vault Owner or Strategy. Vault owner is the owner of NFT for this vault in VaultManager. Strategy is approved address for the vault NFT. Since this method allows sending arbitrary transactions, the destinations of the calls are whitelisted by Protocol Governance.",
								"params": {
									"data": "Abi encoded parameters to `to::selector`",
									"selector": "Selector of the call",
									"to": "Address of the reward pool"
								},
								"returns": {
									"result": "Result of execution of the call"
								}
							},
							"initialize(uint256,address[],uint24,address)": {
								"details": "Can only be initialized by vault governance",
								"params": {
									"fee_": "Fee of the UniV3 pool",
									"nft_": "NFT of the vault in the VaultRegistry",
									"uniV3Helper_": "address of helper for UniV3 arithmetic with ticks",
									"vaultTokens_": "ERC20 tokens that will be managed by this Vault"
								}
							},
							"isValidSignature(bytes32,bytes)": {
								"details": "Should return whether the signature provided is valid for the provided hash MUST return the bytes4 magic value 0x1626ba7e when function passes. MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5) MUST allow external calls",
								"params": {
									"_hash": "Hash of the data to be signed",
									"_signature": "Signature byte array associated with _hash"
								},
								"returns": {
									"magicValue": "0x1626ba7e if valid, 0xffffffff otherwise"
								}
							},
							"isVaultToken(address)": {
								"params": {
									"token": "Address of the token to check"
								},
								"returns": {
									"_0": "`true` if this token is managed by Vault"
								}
							},
							"liquidityToTokenAmounts(uint128)": {
								"params": {
									"liquidity": "Liquidity that will be converted to token amounts"
								},
								"returns": {
									"tokenAmounts": "Token amounts for the specified liquidity"
								}
							},
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
							},
							"pull(address,address[],uint256[],bytes)": {
								"details": "Can only be called but Vault Owner or Strategy. Vault owner is the owner of NFT for this vault in VaultManager. Strategy is approved address for the vault NFT. When called by vault owner this method just pulls the tokens from the protocol to the `to` address When called by strategy on vault other than zero vault it pulls the tokens to zero vault (required `to` == zero vault) When called by strategy on zero vault it pulls the tokens to zero vault, pushes tokens on the `to` vault, and reclaims everything that's left. Thus any vault other than zero vault cannot have any tokens on it Tokens **must** be a subset of Vault Tokens. However, the convention is that if tokenAmount == 0 it is the same as token is missing. Pull is fulfilled on the best effort basis, i.e. if the tokenAmounts overflows available funds it withdraws all the funds.",
								"params": {
									"options": "Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions",
									"to": "Address to receive the tokens",
									"tokenAmounts": "Amounts of tokens to pull",
									"tokens": "Tokens to pull"
								},
								"returns": {
									"actualTokenAmounts": "The amounts actually withdrawn. It could be less than tokenAmounts (but not higher)"
								}
							},
							"push(address[],uint256[],bytes)": {
								"details": "Tokens **must** be a subset of Vault Tokens. However, the convention is that if tokenAmount == 0 it is the same as token is missing. Also notice that this operation doesn't guarantee that tokenAmounts will be invested in full.",
								"params": {
									"options": "Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions",
									"tokenAmounts": "Amounts of tokens to push",
									"tokens": "Tokens to push"
								},
								"returns": {
									"actualTokenAmounts": "The amounts actually invested. It could be less than tokenAmounts (but not higher)"
								}
							},
							"reclaimTokens(address[])": {
								"details": "Cannot be called from zero vault.",
								"params": {
									"tokens": "Tokens to claim"
								},
								"returns": {
									"actualTokenAmounts": "Amounts reclaimed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenAmountsToLiquidity(uint256[])": {
								"params": {
									"tokenAmounts": "Token amounts that will be converted to liquidity"
								},
								"returns": {
									"liquidity": "Liquidity for the specified token amounts"
								}
							},
							"transferAndPush(address,address[],uint256[],bytes)": {
								"params": {
									"options": "Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions",
									"tokenAmounts": "Amounts of tokens to push",
									"tokens": "Tokens to push"
								},
								"returns": {
									"actualTokenAmounts": "The amounts actually invested. It could be less than tokenAmounts (but not higher)"
								}
							},
							"tvl()": {
								"details": "Generally it is the underlying token value of this contract in some other DeFi protocol. For example, for USDC Yearn Vault this would be total USDC balance that could be withdrawn for Yearn to this contract. The tvl itself is estimated in some range. Sometimes the range is exact, sometimes it's not",
								"returns": {
									"maxTokenAmounts": "Upper bound for total available balances estimation (nth tokenAmount corresponds to nth token in vaultTokens)",
									"minTokenAmounts": "Lower bound for total available balances estimation (nth tokenAmount corresponds to nth token in vaultTokens)"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"collectEarnings()": "c27b2c2d",
							"externalCall(address,bytes4,bytes)": "2e2f4cc2",
							"initialize(uint256,address[],uint24,address)": "1912128b",
							"initialized()": "158ef93e",
							"isValidSignature(bytes32,bytes)": "1626ba7e",
							"isVaultToken(address)": "338c4ccb",
							"liquidityToTokenAmounts(uint128)": "c85fc740",
							"nft()": "47ccca02",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"pool()": "16f0115b",
							"positionManager()": "791b98bc",
							"pull(address,address[],uint256[],bytes)": "2062d754",
							"pullExistentials()": "d2c219b0",
							"push(address[],uint256[],bytes)": "566ca6b4",
							"reclaimTokens(address[])": "05e1c942",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenAmountsToLiquidity(uint256[])": "00f73da2",
							"transferAndPush(address,address[],uint256[],bytes)": "27a35e5a",
							"tvl()": "e5328e06",
							"uniV3Nft()": "f4adc08b",
							"vaultGovernance()": "fe255a5e",
							"vaultTokens()": "69722233"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"collectEarnings\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"collectedEarnings\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"externalCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft_\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"vaultTokens_\",\"type\":\"address[]\"},{\"internalType\":\"uint24\",\"name\":\"fee_\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"uniV3Helper_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isVaultToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"name\":\"liquidityToTokenAmounts\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"contract IUniswapV3Pool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"positionManager\",\"outputs\":[{\"internalType\":\"contract INonfungiblePositionManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"}],\"name\":\"pull\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"actualTokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullExistentials\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"}],\"name\":\"push\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"actualTokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"reclaimTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"actualTokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"}],\"name\":\"tokenAmountsToLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"}],\"name\":\"transferAndPush\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"actualTokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tvl\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"minTokenAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"maxTokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniV3Nft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultGovernance\",\"outputs\":[{\"internalType\":\"contract IVaultGovernance\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"externalCall(address,bytes4,bytes)\":{\"details\":\"Can only be called by Vault Owner or Strategy. Vault owner is the owner of NFT for this vault in VaultManager. Strategy is approved address for the vault NFT. Since this method allows sending arbitrary transactions, the destinations of the calls are whitelisted by Protocol Governance.\",\"params\":{\"data\":\"Abi encoded parameters to `to::selector`\",\"selector\":\"Selector of the call\",\"to\":\"Address of the reward pool\"},\"returns\":{\"result\":\"Result of execution of the call\"}},\"initialize(uint256,address[],uint24,address)\":{\"details\":\"Can only be initialized by vault governance\",\"params\":{\"fee_\":\"Fee of the UniV3 pool\",\"nft_\":\"NFT of the vault in the VaultRegistry\",\"uniV3Helper_\":\"address of helper for UniV3 arithmetic with ticks\",\"vaultTokens_\":\"ERC20 tokens that will be managed by this Vault\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided hash MUST return the bytes4 magic value 0x1626ba7e when function passes. MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5) MUST allow external calls\",\"params\":{\"_hash\":\"Hash of the data to be signed\",\"_signature\":\"Signature byte array associated with _hash\"},\"returns\":{\"magicValue\":\"0x1626ba7e if valid, 0xffffffff otherwise\"}},\"isVaultToken(address)\":{\"params\":{\"token\":\"Address of the token to check\"},\"returns\":{\"_0\":\"`true` if this token is managed by Vault\"}},\"liquidityToTokenAmounts(uint128)\":{\"params\":{\"liquidity\":\"Liquidity that will be converted to token amounts\"},\"returns\":{\"tokenAmounts\":\"Token amounts for the specified liquidity\"}},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\"},\"pull(address,address[],uint256[],bytes)\":{\"details\":\"Can only be called but Vault Owner or Strategy. Vault owner is the owner of NFT for this vault in VaultManager. Strategy is approved address for the vault NFT. When called by vault owner this method just pulls the tokens from the protocol to the `to` address When called by strategy on vault other than zero vault it pulls the tokens to zero vault (required `to` == zero vault) When called by strategy on zero vault it pulls the tokens to zero vault, pushes tokens on the `to` vault, and reclaims everything that's left. Thus any vault other than zero vault cannot have any tokens on it Tokens **must** be a subset of Vault Tokens. However, the convention is that if tokenAmount == 0 it is the same as token is missing. Pull is fulfilled on the best effort basis, i.e. if the tokenAmounts overflows available funds it withdraws all the funds.\",\"params\":{\"options\":\"Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions\",\"to\":\"Address to receive the tokens\",\"tokenAmounts\":\"Amounts of tokens to pull\",\"tokens\":\"Tokens to pull\"},\"returns\":{\"actualTokenAmounts\":\"The amounts actually withdrawn. It could be less than tokenAmounts (but not higher)\"}},\"push(address[],uint256[],bytes)\":{\"details\":\"Tokens **must** be a subset of Vault Tokens. However, the convention is that if tokenAmount == 0 it is the same as token is missing. Also notice that this operation doesn't guarantee that tokenAmounts will be invested in full.\",\"params\":{\"options\":\"Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions\",\"tokenAmounts\":\"Amounts of tokens to push\",\"tokens\":\"Tokens to push\"},\"returns\":{\"actualTokenAmounts\":\"The amounts actually invested. It could be less than tokenAmounts (but not higher)\"}},\"reclaimTokens(address[])\":{\"details\":\"Cannot be called from zero vault.\",\"params\":{\"tokens\":\"Tokens to claim\"},\"returns\":{\"actualTokenAmounts\":\"Amounts reclaimed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenAmountsToLiquidity(uint256[])\":{\"params\":{\"tokenAmounts\":\"Token amounts that will be converted to liquidity\"},\"returns\":{\"liquidity\":\"Liquidity for the specified token amounts\"}},\"transferAndPush(address,address[],uint256[],bytes)\":{\"params\":{\"options\":\"Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions\",\"tokenAmounts\":\"Amounts of tokens to push\",\"tokens\":\"Tokens to push\"},\"returns\":{\"actualTokenAmounts\":\"The amounts actually invested. It could be less than tokenAmounts (but not higher)\"}},\"tvl()\":{\"details\":\"Generally it is the underlying token value of this contract in some other DeFi protocol. For example, for USDC Yearn Vault this would be total USDC balance that could be withdrawn for Yearn to this contract. The tvl itself is estimated in some range. Sometimes the range is exact, sometimes it's not\",\"returns\":{\"maxTokenAmounts\":\"Upper bound for total available balances estimation (nth tokenAmount corresponds to nth token in vaultTokens)\",\"minTokenAmounts\":\"Lower bound for total available balances estimation (nth tokenAmount corresponds to nth token in vaultTokens)\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectEarnings()\":{\"notice\":\"Collect UniV3 fees to zero vault.\"},\"externalCall(address,bytes4,bytes)\":{\"notice\":\"Execute one of whitelisted calls.\"},\"initialize(uint256,address[],uint24,address)\":{\"notice\":\"Initialized a new contract.\"},\"initialized()\":{\"notice\":\"Checks if the vault is initialized\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Verifies offchain signature.\"},\"isVaultToken(address)\":{\"notice\":\"Checks if a token is vault token\"},\"liquidityToTokenAmounts(uint128)\":{\"notice\":\"Returns tokenAmounts corresponding to liquidity, based on the current Uniswap position\"},\"nft()\":{\"notice\":\"VaultRegistry NFT for this vault\"},\"pool()\":{\"notice\":\"Reference to UniswapV3 pool.\"},\"positionManager()\":{\"notice\":\"Reference to INonfungiblePositionManager of UniswapV3 protocol.\"},\"pull(address,address[],uint256[],bytes)\":{\"notice\":\"Pulls tokens from the underlying protocol to the `to` address.\"},\"pullExistentials()\":{\"notice\":\"Existential amounts for each token\"},\"push(address[],uint256[],bytes)\":{\"notice\":\"Pushes tokens on the vault balance to the underlying protocol. For example, for Yearn this operation will take USDC from the contract balance and convert it to yUSDC.\"},\"reclaimTokens(address[])\":{\"notice\":\"Claim ERC20 tokens from vault balance to zero vault.\"},\"tokenAmountsToLiquidity(uint256[])\":{\"notice\":\"Returns liquidity corresponding to token amounts, based on the current Uniswap position\"},\"transferAndPush(address,address[],uint256[],bytes)\":{\"notice\":\"The same as `push` method above but transfers tokens to vault balance prior to calling push. After the `push` it returns all the leftover tokens back (`push` method doesn't guarantee that tokenAmounts will be invested in full).\"},\"tvl()\":{\"notice\":\"Total value locked for this contract.\"},\"uniV3Nft()\":{\"notice\":\"NFT of UniV3 position manager\"},\"vaultGovernance()\":{\"notice\":\"Address of the Vault Governance for this contract.\"},\"vaultTokens()\":{\"notice\":\"ERC20 tokens under Vault management.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/vaults/IUniV3Vault.sol\":\"IUniV3Vault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x693d1a6333975d5bd166fcc844874f96affecbf45dc5c34fa7d172248d74c06b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e7e0a870c4c25c619d8cef3c646ac78b9e9d4ac15d50f8f2b6729bd04cae47c\",\"dweb:/ipfs/QmNj6rGpNzq6HDnfyBNr8joZCGm23M5kWHAhYfg3BwN7JF\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0x3c3ef4fb25def71f5f18af554ca938950eb9cf218fda073ed2c69b9203c03455\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8083924ad8ee40a1254bb235c59360165b3cac1bc1e9bfd926beecc50c75cffd\",\"dweb:/ipfs/Qme9trL3Q7GAP2B18XAg1DynP1EyQ2K1GcM6MwWgKM97p5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x872ba21af7c1f0ae04a715beca31e8fcac764d6c8762940b0fe1bfb6ed8e86f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://497017741d74878b56a67ad51e98061bd9ec0e6e4fdbfef0e2ab51523f4c16de\",\"dweb:/ipfs/QmWfkpRHksy8jFywqYxdmMqdkQ1hxrGTPoNBXbZ48zTvyv\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x483b106386dd309f168672928252a19f30c30efb4d17d4b8e2b0f587ca784a11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://189a39d066c6886ddbe86c79bb36d6cbe66e98bc6a94956e28f5503dae4ad406\",\"dweb:/ipfs/QmT3s3PwCdXqHLJk26kcnedrRGTC9T18z52i9Be7PV9ppc\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x6aa521718bf139b44ce56f194f6aea1d590cacef995b5a84703fb1579fa49be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://100f8d367b5e94eb9cb991914f1de133cf272654c0708faa893bbc17a5b35b93\",\"dweb:/ipfs/QmZeBojmgXq821dL1TJKFb58B1FogM9jL3u7hXQ8hTEBKT\"]},\"contracts/interfaces/IProtocolGovernance.sol\":{\"keccak256\":\"0xda6b37c257d780a870b289b4e44badc6afb7f2301f500a440c4c020abedd98e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93ce78b05dd9bdaea807380cd44e220c217ee4bb27f311993f28ea27c82fd215\",\"dweb:/ipfs/QmcxSoA8MBtwt1FFGVcGo4LCzCSUAB3jfX5TkiafAVQbqx\"]},\"contracts/interfaces/IUnitPricesGovernance.sol\":{\"keccak256\":\"0x300050e0de7d02134592f130cdb90752dc8fcea6cab2e58eb9dafd3a7e3f4e5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1065d39058393c0da9550a424a34e2832882a530e4ddce33f5ddd17bd2d56a72\",\"dweb:/ipfs/QmX1zjA1as8jxrvZCwTyGPVAkCyh7Gg6G89757aJLoGC47\"]},\"contracts/interfaces/IVaultRegistry.sol\":{\"keccak256\":\"0x66ba86bbbe472a039ab45b556eb235c9ed64ea0d43de4f22fdf64b9b41e3f4ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8fb21d42fb95e7f8df33c227ae1b2363c7d86288f8d88a076c0163f28c2687e\",\"dweb:/ipfs/QmQboWcs8qDG1kqjoKr5QAVa6oWCHagGoYxcsmNbgYhka3\"]},\"contracts/interfaces/external/erc/IERC1271.sol\":{\"keccak256\":\"0x2081de4db31bc623043b8305bf55c676c55250a3b51deb293281d97f1ca7e9c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://712dbbd43245e0bb9ca5573170507fabb506ffe7610dc39f13b4716220479fba\",\"dweb:/ipfs/QmZybwDeFoWpzkZEmMxqPA6Jx1fn8P5ygVHSDFk4uM7xS7\"]},\"contracts/interfaces/external/univ3/INonfungiblePositionManager.sol\":{\"keccak256\":\"0x2cf07283a70e7c61de51ad6bb067fbf35219872572dfc10b3388e0e43163f9f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://35790b7ff53f908c7fb2650ebd7dafd9cd23d526db63ef7c7836cbe440efe1d2\",\"dweb:/ipfs/QmQ2R6qZoDGPRnG9FrvDBEUHbuhb6VrAw9QaqheAAqhu3B\"]},\"contracts/interfaces/external/univ3/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x4580b2db1a3e6e749dcc1d9854036b80ea83651df0670a49f1596d7bd4abae13\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e77ef1fe49205ab1f85341e2de918b7058228d2637796b8eee9fb7247270caa2\",\"dweb:/ipfs/Qme2Hpmgui9Nm24zkhPHpQBnt73ginNfkWUDxv2JT8YUBA\"]},\"contracts/interfaces/external/univ3/IUniswapV3Pool.sol\":{\"keccak256\":\"0x5ed3604a829824e7a494212a297c7df61ea3eac9e1be66b43d7e4934d66a50fb\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://741461dc04e7a02feff6db5d6a6a4b8638ed14dbef8b6d73afb85e6de77d71c5\",\"dweb:/ipfs/QmdvEiTZpsyEWLab3pyZDosJBywhLqB7QZp3ppMzshsX2N\"]},\"contracts/interfaces/external/univ3/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0xc0bbb3ed984dff71351269a84eb6e8e05b80fa82f8db633d3c79cce902b10062\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1203ca3fd412d00b180941863d57ac4fb7d87612af5cd130f5f7fad4a9434be5\",\"dweb:/ipfs/QmZxjkYTmDqmyJvTBdAkens6MpoXJ4CHuvhKe5UtYawKBV\"]},\"contracts/interfaces/external/univ3/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xa0b05b8e81826ab8b998d01e9aa5be259d1d00fc8133077969fe81ff2815fa37\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://69c1895b6b0930464290d7d5ae2ed4468965d0053ca4b8ad05793705c465eac2\",\"dweb:/ipfs/QmQXE6AqVpy5ebkTarwk1ZfRkbTGeoYpayc5KfWUdijb3L\"]},\"contracts/interfaces/external/univ3/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0x4c110f8100d8bdd61abfa008dc37dc5f98c12b5b25222ac8ac8bf99ced935300\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ef3fd138626582293a67630e3aeb17065bcc04fb018255ff89c459a81e3bd8da\",\"dweb:/ipfs/QmV7q5EoCzNJsZGkozzb55b1iM6F1kinSKrYdARf2ZkCGb\"]},\"contracts/interfaces/external/univ3/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x9eaa533e27dc574ccd9feb3323ecc892b5153c255aeb4727c161ab9885d761f0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://31989ea5752d8fa6fd3ebe743e1fbb98ec6b0d159dfbf4864958824673748664\",\"dweb:/ipfs/QmWT6hgfaAPo3yFbRx69x6SJwbizmvF95YkPxhbVipRHh6\"]},\"contracts/interfaces/utils/IDefaultAccessControl.sol\":{\"keccak256\":\"0x847c664c3e293a19109ec872e341f254a86c6f93548cea827f4e8a485cf994cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95fc19492725d54c1792afc736ec501a1f3a46975ecf584bfd3c0bfd83b140eb\",\"dweb:/ipfs/QmXnawUkM3xxj2ytaTaekvj8FB3JeoiTrrBazhYg47wjSc\"]},\"contracts/interfaces/vaults/IIntegrationVault.sol\":{\"keccak256\":\"0xad9b4303b547c9304e51078cffc69552de4308a30036b1d07cc02a05ce5476d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ddd09b0d3b58bb44b45555f2a363db98e93016cae4518511c4d3e68736b30b5\",\"dweb:/ipfs/QmYME2tp5jr9G5JhCALziJqPLysB7tgAUTkVE7rtkydA5E\"]},\"contracts/interfaces/vaults/IUniV3Vault.sol\":{\"keccak256\":\"0xea220692057c5684a52a33e43cbdcaf0de486caa77f8e0a3c07863f08e2d0143\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://43f7df00ae6ce5ab6dbb4074a958f2566d70208d687b255c55bcdfe7aab1bef4\",\"dweb:/ipfs/QmZXUpkFgKGrYmJgcHRmd4ZDLS3ftP68LtuqM35xtPURcG\"]},\"contracts/interfaces/vaults/IVault.sol\":{\"keccak256\":\"0x9e74850f8f3ecd6eab0f6b1adaad960c443b14c128007a77260d2bb6bcb686d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87c2e0bdacc0a3fe9825f07a2de8ece41a6cc477872b10bd2b083400a13f4b8e\",\"dweb:/ipfs/QmWWvR4uQY7rXboGbVBEnDH9QvTRJW9pSmSoPq8f9p8JgT\"]},\"contracts/interfaces/vaults/IVaultGovernance.sol\":{\"keccak256\":\"0xa5b24cd080393cb094d7887bbdc04fb4361fde90280e8bf9856428b6b6ebd90d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6ce19e4c8a5b788963f895c6ebde1c84a294a284e76d9733d9bf89f75d2eca2\",\"dweb:/ipfs/QmWFXkhuaaCr3VaRaKSe12hs6DKeebQhDUqAd4z6TeByJq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"collectEarnings()": {
								"notice": "Collect UniV3 fees to zero vault."
							},
							"externalCall(address,bytes4,bytes)": {
								"notice": "Execute one of whitelisted calls."
							},
							"initialize(uint256,address[],uint24,address)": {
								"notice": "Initialized a new contract."
							},
							"initialized()": {
								"notice": "Checks if the vault is initialized"
							},
							"isValidSignature(bytes32,bytes)": {
								"notice": "Verifies offchain signature."
							},
							"isVaultToken(address)": {
								"notice": "Checks if a token is vault token"
							},
							"liquidityToTokenAmounts(uint128)": {
								"notice": "Returns tokenAmounts corresponding to liquidity, based on the current Uniswap position"
							},
							"nft()": {
								"notice": "VaultRegistry NFT for this vault"
							},
							"pool()": {
								"notice": "Reference to UniswapV3 pool."
							},
							"positionManager()": {
								"notice": "Reference to INonfungiblePositionManager of UniswapV3 protocol."
							},
							"pull(address,address[],uint256[],bytes)": {
								"notice": "Pulls tokens from the underlying protocol to the `to` address."
							},
							"pullExistentials()": {
								"notice": "Existential amounts for each token"
							},
							"push(address[],uint256[],bytes)": {
								"notice": "Pushes tokens on the vault balance to the underlying protocol. For example, for Yearn this operation will take USDC from the contract balance and convert it to yUSDC."
							},
							"reclaimTokens(address[])": {
								"notice": "Claim ERC20 tokens from vault balance to zero vault."
							},
							"tokenAmountsToLiquidity(uint256[])": {
								"notice": "Returns liquidity corresponding to token amounts, based on the current Uniswap position"
							},
							"transferAndPush(address,address[],uint256[],bytes)": {
								"notice": "The same as `push` method above but transfers tokens to vault balance prior to calling push. After the `push` it returns all the leftover tokens back (`push` method doesn't guarantee that tokenAmounts will be invested in full)."
							},
							"tvl()": {
								"notice": "Total value locked for this contract."
							},
							"uniV3Nft()": {
								"notice": "NFT of UniV3 position manager"
							},
							"vaultGovernance()": {
								"notice": "Address of the Vault Governance for this contract."
							},
							"vaultTokens()": {
								"notice": "ERC20 tokens under Vault management."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/interfaces/vaults/IUniV3VaultGovernance.sol": {
				"IUniV3VaultGovernance": {
					"abi": [
						{
							"inputs": [],
							"name": "commitDelayedProtocolParams",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nft",
									"type": "uint256"
								}
							],
							"name": "commitDelayedStrategyParams",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "commitInternalParams",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "vaultTokens_",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "owner_",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee_",
									"type": "uint24"
								},
								{
									"internalType": "address",
									"name": "uniV3Helper_",
									"type": "address"
								}
							],
							"name": "createVault",
							"outputs": [
								{
									"internalType": "contract IUniV3Vault",
									"name": "vault",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nft",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "delayedProtocolParams",
							"outputs": [
								{
									"components": [
										{
											"internalType": "contract INonfungiblePositionManager",
											"name": "positionManager",
											"type": "address"
										},
										{
											"internalType": "contract IOracle",
											"name": "oracle",
											"type": "address"
										}
									],
									"internalType": "struct IUniV3VaultGovernance.DelayedProtocolParams",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "delayedProtocolParamsTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nft",
									"type": "uint256"
								}
							],
							"name": "delayedProtocolPerVaultParamsTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nft",
									"type": "uint256"
								}
							],
							"name": "delayedStrategyParams",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "safetyIndicesSet",
											"type": "uint32"
										}
									],
									"internalType": "struct IUniV3VaultGovernance.DelayedStrategyParams",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nft",
									"type": "uint256"
								}
							],
							"name": "delayedStrategyParamsTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "internalParams",
							"outputs": [
								{
									"components": [
										{
											"internalType": "contract IProtocolGovernance",
											"name": "protocolGovernance",
											"type": "address"
										},
										{
											"internalType": "contract IVaultRegistry",
											"name": "registry",
											"type": "address"
										},
										{
											"internalType": "contract IVault",
											"name": "singleton",
											"type": "address"
										}
									],
									"internalType": "struct IVaultGovernance.InternalParams",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "internalParamsTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "contract INonfungiblePositionManager",
											"name": "positionManager",
											"type": "address"
										},
										{
											"internalType": "contract IOracle",
											"name": "oracle",
											"type": "address"
										}
									],
									"internalType": "struct IUniV3VaultGovernance.DelayedProtocolParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "stageDelayedProtocolParams",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nft",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "safetyIndicesSet",
											"type": "uint32"
										}
									],
									"internalType": "struct IUniV3VaultGovernance.DelayedStrategyParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "stageDelayedStrategyParams",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "contract IProtocolGovernance",
											"name": "protocolGovernance",
											"type": "address"
										},
										{
											"internalType": "contract IVaultRegistry",
											"name": "registry",
											"type": "address"
										},
										{
											"internalType": "contract IVault",
											"name": "singleton",
											"type": "address"
										}
									],
									"internalType": "struct IVaultGovernance.InternalParams",
									"name": "newParams",
									"type": "tuple"
								}
							],
							"name": "stageInternalParams",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stagedDelayedProtocolParams",
							"outputs": [
								{
									"components": [
										{
											"internalType": "contract INonfungiblePositionManager",
											"name": "positionManager",
											"type": "address"
										},
										{
											"internalType": "contract IOracle",
											"name": "oracle",
											"type": "address"
										}
									],
									"internalType": "struct IUniV3VaultGovernance.DelayedProtocolParams",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nft",
									"type": "uint256"
								}
							],
							"name": "stagedDelayedStrategyParams",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "safetyIndicesSet",
											"type": "uint32"
										}
									],
									"internalType": "struct IUniV3VaultGovernance.DelayedStrategyParams",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stagedInternalParams",
							"outputs": [
								{
									"components": [
										{
											"internalType": "contract IProtocolGovernance",
											"name": "protocolGovernance",
											"type": "address"
										},
										{
											"internalType": "contract IVaultRegistry",
											"name": "registry",
											"type": "address"
										},
										{
											"internalType": "contract IVault",
											"name": "singleton",
											"type": "address"
										}
									],
									"internalType": "struct IVaultGovernance.InternalParams",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"commitDelayedStrategyParams(uint256)": {
								"details": "Can only be called after delayedStrategyParamsTimestamp",
								"params": {
									"nft": "VaultRegistry NFT of the vault"
								}
							},
							"createVault(address[],address,uint24,address)": {
								"params": {
									"fee_": "Fee of the UniV3 pool",
									"owner_": "Owner of the vault NFT",
									"uniV3Helper_": "address of helper for UniV3 arithmetic with ticks",
									"vaultTokens_": "ERC20 tokens that will be managed by this Vault"
								}
							},
							"delayedProtocolPerVaultParamsTimestamp(uint256)": {
								"params": {
									"nft": "Nft of the vault"
								}
							},
							"delayedStrategyParams(uint256)": {
								"params": {
									"nft": "VaultRegistry NFT of the vault"
								}
							},
							"delayedStrategyParamsTimestamp(uint256)": {
								"params": {
									"nft": "Nft of the vault"
								}
							},
							"stageDelayedProtocolParams((address,address))": {
								"params": {
									"params": "New params"
								}
							},
							"stageDelayedStrategyParams(uint256,(uint32))": {
								"params": {
									"nft": "VaultRegistry NFT of the vault",
									"params": "New params"
								}
							},
							"stageInternalParams((address,address,address))": {
								"params": {
									"newParams": "New Internal Params"
								}
							},
							"stagedDelayedStrategyParams(uint256)": {
								"params": {
									"nft": "VaultRegistry NFT of the vault"
								}
							},
							"stagedInternalParams()": {
								"details": "The Internal Params could be committed after internalParamsTimestamp"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"commitDelayedProtocolParams()": "98347a5d",
							"commitDelayedStrategyParams(uint256)": "0bdedd56",
							"commitInternalParams()": "d4a07d34",
							"createVault(address[],address,uint24,address)": "66c153e9",
							"delayedProtocolParams()": "d34cc380",
							"delayedProtocolParamsTimestamp()": "e4af6e79",
							"delayedProtocolPerVaultParamsTimestamp(uint256)": "511ce798",
							"delayedStrategyParams(uint256)": "8860d248",
							"delayedStrategyParamsTimestamp(uint256)": "6707acee",
							"internalParams()": "7ac46fbb",
							"internalParamsTimestamp()": "1c7f4c73",
							"stageDelayedProtocolParams((address,address))": "b2fe31ad",
							"stageDelayedStrategyParams(uint256,(uint32))": "25281714",
							"stageInternalParams((address,address,address))": "09946538",
							"stagedDelayedProtocolParams()": "c2cbdc67",
							"stagedDelayedStrategyParams(uint256)": "59f3dae7",
							"stagedInternalParams()": "86c6be3e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"commitDelayedProtocolParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"commitDelayedStrategyParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commitInternalParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"vaultTokens_\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee_\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"uniV3Helper_\",\"type\":\"address\"}],\"name\":\"createVault\",\"outputs\":[{\"internalType\":\"contract IUniV3Vault\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delayedProtocolParams\",\"outputs\":[{\"components\":[{\"internalType\":\"contract INonfungiblePositionManager\",\"name\":\"positionManager\",\"type\":\"address\"},{\"internalType\":\"contract IOracle\",\"name\":\"oracle\",\"type\":\"address\"}],\"internalType\":\"struct IUniV3VaultGovernance.DelayedProtocolParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delayedProtocolParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"delayedProtocolPerVaultParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"delayedStrategyParams\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"safetyIndicesSet\",\"type\":\"uint32\"}],\"internalType\":\"struct IUniV3VaultGovernance.DelayedStrategyParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"delayedStrategyParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"internalParams\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"internalParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract INonfungiblePositionManager\",\"name\":\"positionManager\",\"type\":\"address\"},{\"internalType\":\"contract IOracle\",\"name\":\"oracle\",\"type\":\"address\"}],\"internalType\":\"struct IUniV3VaultGovernance.DelayedProtocolParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"stageDelayedProtocolParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"safetyIndicesSet\",\"type\":\"uint32\"}],\"internalType\":\"struct IUniV3VaultGovernance.DelayedStrategyParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"stageDelayedStrategyParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"newParams\",\"type\":\"tuple\"}],\"name\":\"stageInternalParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stagedDelayedProtocolParams\",\"outputs\":[{\"components\":[{\"internalType\":\"contract INonfungiblePositionManager\",\"name\":\"positionManager\",\"type\":\"address\"},{\"internalType\":\"contract IOracle\",\"name\":\"oracle\",\"type\":\"address\"}],\"internalType\":\"struct IUniV3VaultGovernance.DelayedProtocolParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"stagedDelayedStrategyParams\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"safetyIndicesSet\",\"type\":\"uint32\"}],\"internalType\":\"struct IUniV3VaultGovernance.DelayedStrategyParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stagedInternalParams\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"commitDelayedStrategyParams(uint256)\":{\"details\":\"Can only be called after delayedStrategyParamsTimestamp\",\"params\":{\"nft\":\"VaultRegistry NFT of the vault\"}},\"createVault(address[],address,uint24,address)\":{\"params\":{\"fee_\":\"Fee of the UniV3 pool\",\"owner_\":\"Owner of the vault NFT\",\"uniV3Helper_\":\"address of helper for UniV3 arithmetic with ticks\",\"vaultTokens_\":\"ERC20 tokens that will be managed by this Vault\"}},\"delayedProtocolPerVaultParamsTimestamp(uint256)\":{\"params\":{\"nft\":\"Nft of the vault\"}},\"delayedStrategyParams(uint256)\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\"}},\"delayedStrategyParamsTimestamp(uint256)\":{\"params\":{\"nft\":\"Nft of the vault\"}},\"stageDelayedProtocolParams((address,address))\":{\"params\":{\"params\":\"New params\"}},\"stageDelayedStrategyParams(uint256,(uint32))\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\",\"params\":\"New params\"}},\"stageInternalParams((address,address,address))\":{\"params\":{\"newParams\":\"New Internal Params\"}},\"stagedDelayedStrategyParams(uint256)\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\"}},\"stagedInternalParams()\":{\"details\":\"The Internal Params could be committed after internalParamsTimestamp\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"commitDelayedProtocolParams()\":{\"notice\":\"Commit Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay.\"},\"commitDelayedStrategyParams(uint256)\":{\"notice\":\"Commit Delayed Strategy Params, i.e. Params that could be changed by Strategy or Protocol Governance with Protocol Governance delay.\"},\"commitInternalParams()\":{\"notice\":\"Commit staged Internal Params.\"},\"createVault(address[],address,uint24,address)\":{\"notice\":\"Deploys a new vault.\"},\"delayedProtocolParams()\":{\"notice\":\"Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay.\"},\"delayedProtocolParamsTimestamp()\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Protocol Params could be committed.\"},\"delayedProtocolPerVaultParamsTimestamp(uint256)\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Protocol Params Per Vault could be committed.\"},\"delayedStrategyParams(uint256)\":{\"notice\":\"Delayed Strategy Params\"},\"delayedStrategyParamsTimestamp(uint256)\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Strategy Params could be committed.\"},\"internalParams()\":{\"notice\":\"Internal Params of the contract.\"},\"internalParamsTimestamp()\":{\"notice\":\"Timestamp in unix time seconds after which staged Internal Params could be committed.\"},\"stageDelayedProtocolParams((address,address))\":{\"notice\":\"Stage Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay.\"},\"stageDelayedStrategyParams(uint256,(uint32))\":{\"notice\":\"Stage Delayed Strategy Params, i.e. Params that could be changed by Strategy or Protocol Governance with Protocol Governance delay.\"},\"stageInternalParams((address,address,address))\":{\"notice\":\"Stage new Internal Params.\"},\"stagedDelayedProtocolParams()\":{\"notice\":\"Delayed Protocol Params staged for commit after delay.\"},\"stagedDelayedStrategyParams(uint256)\":{\"notice\":\"Delayed Strategy Params staged for commit after delay.\"},\"stagedInternalParams()\":{\"notice\":\"Staged new Internal Params.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/vaults/IUniV3VaultGovernance.sol\":\"IUniV3VaultGovernance\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x693d1a6333975d5bd166fcc844874f96affecbf45dc5c34fa7d172248d74c06b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e7e0a870c4c25c619d8cef3c646ac78b9e9d4ac15d50f8f2b6729bd04cae47c\",\"dweb:/ipfs/QmNj6rGpNzq6HDnfyBNr8joZCGm23M5kWHAhYfg3BwN7JF\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0x3c3ef4fb25def71f5f18af554ca938950eb9cf218fda073ed2c69b9203c03455\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8083924ad8ee40a1254bb235c59360165b3cac1bc1e9bfd926beecc50c75cffd\",\"dweb:/ipfs/Qme9trL3Q7GAP2B18XAg1DynP1EyQ2K1GcM6MwWgKM97p5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x872ba21af7c1f0ae04a715beca31e8fcac764d6c8762940b0fe1bfb6ed8e86f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://497017741d74878b56a67ad51e98061bd9ec0e6e4fdbfef0e2ab51523f4c16de\",\"dweb:/ipfs/QmWfkpRHksy8jFywqYxdmMqdkQ1hxrGTPoNBXbZ48zTvyv\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x483b106386dd309f168672928252a19f30c30efb4d17d4b8e2b0f587ca784a11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://189a39d066c6886ddbe86c79bb36d6cbe66e98bc6a94956e28f5503dae4ad406\",\"dweb:/ipfs/QmT3s3PwCdXqHLJk26kcnedrRGTC9T18z52i9Be7PV9ppc\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x6aa521718bf139b44ce56f194f6aea1d590cacef995b5a84703fb1579fa49be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://100f8d367b5e94eb9cb991914f1de133cf272654c0708faa893bbc17a5b35b93\",\"dweb:/ipfs/QmZeBojmgXq821dL1TJKFb58B1FogM9jL3u7hXQ8hTEBKT\"]},\"contracts/interfaces/IProtocolGovernance.sol\":{\"keccak256\":\"0xda6b37c257d780a870b289b4e44badc6afb7f2301f500a440c4c020abedd98e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93ce78b05dd9bdaea807380cd44e220c217ee4bb27f311993f28ea27c82fd215\",\"dweb:/ipfs/QmcxSoA8MBtwt1FFGVcGo4LCzCSUAB3jfX5TkiafAVQbqx\"]},\"contracts/interfaces/IUnitPricesGovernance.sol\":{\"keccak256\":\"0x300050e0de7d02134592f130cdb90752dc8fcea6cab2e58eb9dafd3a7e3f4e5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1065d39058393c0da9550a424a34e2832882a530e4ddce33f5ddd17bd2d56a72\",\"dweb:/ipfs/QmX1zjA1as8jxrvZCwTyGPVAkCyh7Gg6G89757aJLoGC47\"]},\"contracts/interfaces/IVaultRegistry.sol\":{\"keccak256\":\"0x66ba86bbbe472a039ab45b556eb235c9ed64ea0d43de4f22fdf64b9b41e3f4ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8fb21d42fb95e7f8df33c227ae1b2363c7d86288f8d88a076c0163f28c2687e\",\"dweb:/ipfs/QmQboWcs8qDG1kqjoKr5QAVa6oWCHagGoYxcsmNbgYhka3\"]},\"contracts/interfaces/external/erc/IERC1271.sol\":{\"keccak256\":\"0x2081de4db31bc623043b8305bf55c676c55250a3b51deb293281d97f1ca7e9c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://712dbbd43245e0bb9ca5573170507fabb506ffe7610dc39f13b4716220479fba\",\"dweb:/ipfs/QmZybwDeFoWpzkZEmMxqPA6Jx1fn8P5ygVHSDFk4uM7xS7\"]},\"contracts/interfaces/external/univ3/INonfungiblePositionManager.sol\":{\"keccak256\":\"0x2cf07283a70e7c61de51ad6bb067fbf35219872572dfc10b3388e0e43163f9f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://35790b7ff53f908c7fb2650ebd7dafd9cd23d526db63ef7c7836cbe440efe1d2\",\"dweb:/ipfs/QmQ2R6qZoDGPRnG9FrvDBEUHbuhb6VrAw9QaqheAAqhu3B\"]},\"contracts/interfaces/external/univ3/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x4580b2db1a3e6e749dcc1d9854036b80ea83651df0670a49f1596d7bd4abae13\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e77ef1fe49205ab1f85341e2de918b7058228d2637796b8eee9fb7247270caa2\",\"dweb:/ipfs/Qme2Hpmgui9Nm24zkhPHpQBnt73ginNfkWUDxv2JT8YUBA\"]},\"contracts/interfaces/external/univ3/IUniswapV3Pool.sol\":{\"keccak256\":\"0x5ed3604a829824e7a494212a297c7df61ea3eac9e1be66b43d7e4934d66a50fb\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://741461dc04e7a02feff6db5d6a6a4b8638ed14dbef8b6d73afb85e6de77d71c5\",\"dweb:/ipfs/QmdvEiTZpsyEWLab3pyZDosJBywhLqB7QZp3ppMzshsX2N\"]},\"contracts/interfaces/external/univ3/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0xc0bbb3ed984dff71351269a84eb6e8e05b80fa82f8db633d3c79cce902b10062\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1203ca3fd412d00b180941863d57ac4fb7d87612af5cd130f5f7fad4a9434be5\",\"dweb:/ipfs/QmZxjkYTmDqmyJvTBdAkens6MpoXJ4CHuvhKe5UtYawKBV\"]},\"contracts/interfaces/external/univ3/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xa0b05b8e81826ab8b998d01e9aa5be259d1d00fc8133077969fe81ff2815fa37\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://69c1895b6b0930464290d7d5ae2ed4468965d0053ca4b8ad05793705c465eac2\",\"dweb:/ipfs/QmQXE6AqVpy5ebkTarwk1ZfRkbTGeoYpayc5KfWUdijb3L\"]},\"contracts/interfaces/external/univ3/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0x4c110f8100d8bdd61abfa008dc37dc5f98c12b5b25222ac8ac8bf99ced935300\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ef3fd138626582293a67630e3aeb17065bcc04fb018255ff89c459a81e3bd8da\",\"dweb:/ipfs/QmV7q5EoCzNJsZGkozzb55b1iM6F1kinSKrYdARf2ZkCGb\"]},\"contracts/interfaces/external/univ3/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x9eaa533e27dc574ccd9feb3323ecc892b5153c255aeb4727c161ab9885d761f0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://31989ea5752d8fa6fd3ebe743e1fbb98ec6b0d159dfbf4864958824673748664\",\"dweb:/ipfs/QmWT6hgfaAPo3yFbRx69x6SJwbizmvF95YkPxhbVipRHh6\"]},\"contracts/interfaces/oracles/IOracle.sol\":{\"keccak256\":\"0x4629a653a356248a9683d6e02a6fb738802b60086b1cb8cdbfa05385f1914b5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b733f94000de360f16dd43a6ef2ad51c42f03520f7c6827919922de5d0e1149\",\"dweb:/ipfs/QmZsdkkSrjG5cViQF5qxmU9wvnLmLKgyBvANRhTYTPaisJ\"]},\"contracts/interfaces/utils/IDefaultAccessControl.sol\":{\"keccak256\":\"0x847c664c3e293a19109ec872e341f254a86c6f93548cea827f4e8a485cf994cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95fc19492725d54c1792afc736ec501a1f3a46975ecf584bfd3c0bfd83b140eb\",\"dweb:/ipfs/QmXnawUkM3xxj2ytaTaekvj8FB3JeoiTrrBazhYg47wjSc\"]},\"contracts/interfaces/vaults/IIntegrationVault.sol\":{\"keccak256\":\"0xad9b4303b547c9304e51078cffc69552de4308a30036b1d07cc02a05ce5476d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ddd09b0d3b58bb44b45555f2a363db98e93016cae4518511c4d3e68736b30b5\",\"dweb:/ipfs/QmYME2tp5jr9G5JhCALziJqPLysB7tgAUTkVE7rtkydA5E\"]},\"contracts/interfaces/vaults/IUniV3Vault.sol\":{\"keccak256\":\"0xea220692057c5684a52a33e43cbdcaf0de486caa77f8e0a3c07863f08e2d0143\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://43f7df00ae6ce5ab6dbb4074a958f2566d70208d687b255c55bcdfe7aab1bef4\",\"dweb:/ipfs/QmZXUpkFgKGrYmJgcHRmd4ZDLS3ftP68LtuqM35xtPURcG\"]},\"contracts/interfaces/vaults/IUniV3VaultGovernance.sol\":{\"keccak256\":\"0xf2344aac7597dfb24e081a2ea9f420eea6802772249d79aa6e774ecd5ab46193\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b2d883233a22377b21caf31f8efdaf209af5592096fbefa89ac3168e5ad7ce64\",\"dweb:/ipfs/QmaU1Q81SGHDweFC1mihAwrXQcEfFaJ7QRdxmFh6Ahrja7\"]},\"contracts/interfaces/vaults/IVault.sol\":{\"keccak256\":\"0x9e74850f8f3ecd6eab0f6b1adaad960c443b14c128007a77260d2bb6bcb686d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87c2e0bdacc0a3fe9825f07a2de8ece41a6cc477872b10bd2b083400a13f4b8e\",\"dweb:/ipfs/QmWWvR4uQY7rXboGbVBEnDH9QvTRJW9pSmSoPq8f9p8JgT\"]},\"contracts/interfaces/vaults/IVaultGovernance.sol\":{\"keccak256\":\"0xa5b24cd080393cb094d7887bbdc04fb4361fde90280e8bf9856428b6b6ebd90d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6ce19e4c8a5b788963f895c6ebde1c84a294a284e76d9733d9bf89f75d2eca2\",\"dweb:/ipfs/QmWFXkhuaaCr3VaRaKSe12hs6DKeebQhDUqAd4z6TeByJq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"commitDelayedProtocolParams()": {
								"notice": "Commit Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay."
							},
							"commitDelayedStrategyParams(uint256)": {
								"notice": "Commit Delayed Strategy Params, i.e. Params that could be changed by Strategy or Protocol Governance with Protocol Governance delay."
							},
							"commitInternalParams()": {
								"notice": "Commit staged Internal Params."
							},
							"createVault(address[],address,uint24,address)": {
								"notice": "Deploys a new vault."
							},
							"delayedProtocolParams()": {
								"notice": "Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay."
							},
							"delayedProtocolParamsTimestamp()": {
								"notice": "Timestamp in unix time seconds after which staged Delayed Protocol Params could be committed."
							},
							"delayedProtocolPerVaultParamsTimestamp(uint256)": {
								"notice": "Timestamp in unix time seconds after which staged Delayed Protocol Params Per Vault could be committed."
							},
							"delayedStrategyParams(uint256)": {
								"notice": "Delayed Strategy Params"
							},
							"delayedStrategyParamsTimestamp(uint256)": {
								"notice": "Timestamp in unix time seconds after which staged Delayed Strategy Params could be committed."
							},
							"internalParams()": {
								"notice": "Internal Params of the contract."
							},
							"internalParamsTimestamp()": {
								"notice": "Timestamp in unix time seconds after which staged Internal Params could be committed."
							},
							"stageDelayedProtocolParams((address,address))": {
								"notice": "Stage Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay."
							},
							"stageDelayedStrategyParams(uint256,(uint32))": {
								"notice": "Stage Delayed Strategy Params, i.e. Params that could be changed by Strategy or Protocol Governance with Protocol Governance delay."
							},
							"stageInternalParams((address,address,address))": {
								"notice": "Stage new Internal Params."
							},
							"stagedDelayedProtocolParams()": {
								"notice": "Delayed Protocol Params staged for commit after delay."
							},
							"stagedDelayedStrategyParams(uint256)": {
								"notice": "Delayed Strategy Params staged for commit after delay."
							},
							"stagedInternalParams()": {
								"notice": "Staged new Internal Params."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/interfaces/vaults/IVault.sol": {
				"IVault": {
					"abi": [
						{
							"inputs": [],
							"name": "initialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "isVaultToken",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nft",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pullExistentials",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tvl",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "minTokenAmounts",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "maxTokenAmounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vaultGovernance",
							"outputs": [
								{
									"internalType": "contract IVaultGovernance",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vaultTokens",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"isVaultToken(address)": {
								"params": {
									"token": "Address of the token to check"
								},
								"returns": {
									"_0": "`true` if this token is managed by Vault"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tvl()": {
								"details": "Generally it is the underlying token value of this contract in some other DeFi protocol. For example, for USDC Yearn Vault this would be total USDC balance that could be withdrawn for Yearn to this contract. The tvl itself is estimated in some range. Sometimes the range is exact, sometimes it's not",
								"returns": {
									"maxTokenAmounts": "Upper bound for total available balances estimation (nth tokenAmount corresponds to nth token in vaultTokens)",
									"minTokenAmounts": "Lower bound for total available balances estimation (nth tokenAmount corresponds to nth token in vaultTokens)"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"initialized()": "158ef93e",
							"isVaultToken(address)": "338c4ccb",
							"nft()": "47ccca02",
							"pullExistentials()": "d2c219b0",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tvl()": "e5328e06",
							"vaultGovernance()": "fe255a5e",
							"vaultTokens()": "69722233"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isVaultToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullExistentials\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tvl\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"minTokenAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"maxTokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultGovernance\",\"outputs\":[{\"internalType\":\"contract IVaultGovernance\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isVaultToken(address)\":{\"params\":{\"token\":\"Address of the token to check\"},\"returns\":{\"_0\":\"`true` if this token is managed by Vault\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tvl()\":{\"details\":\"Generally it is the underlying token value of this contract in some other DeFi protocol. For example, for USDC Yearn Vault this would be total USDC balance that could be withdrawn for Yearn to this contract. The tvl itself is estimated in some range. Sometimes the range is exact, sometimes it's not\",\"returns\":{\"maxTokenAmounts\":\"Upper bound for total available balances estimation (nth tokenAmount corresponds to nth token in vaultTokens)\",\"minTokenAmounts\":\"Lower bound for total available balances estimation (nth tokenAmount corresponds to nth token in vaultTokens)\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"initialized()\":{\"notice\":\"Checks if the vault is initialized\"},\"isVaultToken(address)\":{\"notice\":\"Checks if a token is vault token\"},\"nft()\":{\"notice\":\"VaultRegistry NFT for this vault\"},\"pullExistentials()\":{\"notice\":\"Existential amounts for each token\"},\"tvl()\":{\"notice\":\"Total value locked for this contract.\"},\"vaultGovernance()\":{\"notice\":\"Address of the Vault Governance for this contract.\"},\"vaultTokens()\":{\"notice\":\"ERC20 tokens under Vault management.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/vaults/IVault.sol\":\"IVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x693d1a6333975d5bd166fcc844874f96affecbf45dc5c34fa7d172248d74c06b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e7e0a870c4c25c619d8cef3c646ac78b9e9d4ac15d50f8f2b6729bd04cae47c\",\"dweb:/ipfs/QmNj6rGpNzq6HDnfyBNr8joZCGm23M5kWHAhYfg3BwN7JF\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0x3c3ef4fb25def71f5f18af554ca938950eb9cf218fda073ed2c69b9203c03455\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8083924ad8ee40a1254bb235c59360165b3cac1bc1e9bfd926beecc50c75cffd\",\"dweb:/ipfs/Qme9trL3Q7GAP2B18XAg1DynP1EyQ2K1GcM6MwWgKM97p5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x872ba21af7c1f0ae04a715beca31e8fcac764d6c8762940b0fe1bfb6ed8e86f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://497017741d74878b56a67ad51e98061bd9ec0e6e4fdbfef0e2ab51523f4c16de\",\"dweb:/ipfs/QmWfkpRHksy8jFywqYxdmMqdkQ1hxrGTPoNBXbZ48zTvyv\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x6aa521718bf139b44ce56f194f6aea1d590cacef995b5a84703fb1579fa49be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://100f8d367b5e94eb9cb991914f1de133cf272654c0708faa893bbc17a5b35b93\",\"dweb:/ipfs/QmZeBojmgXq821dL1TJKFb58B1FogM9jL3u7hXQ8hTEBKT\"]},\"contracts/interfaces/IProtocolGovernance.sol\":{\"keccak256\":\"0xda6b37c257d780a870b289b4e44badc6afb7f2301f500a440c4c020abedd98e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93ce78b05dd9bdaea807380cd44e220c217ee4bb27f311993f28ea27c82fd215\",\"dweb:/ipfs/QmcxSoA8MBtwt1FFGVcGo4LCzCSUAB3jfX5TkiafAVQbqx\"]},\"contracts/interfaces/IUnitPricesGovernance.sol\":{\"keccak256\":\"0x300050e0de7d02134592f130cdb90752dc8fcea6cab2e58eb9dafd3a7e3f4e5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1065d39058393c0da9550a424a34e2832882a530e4ddce33f5ddd17bd2d56a72\",\"dweb:/ipfs/QmX1zjA1as8jxrvZCwTyGPVAkCyh7Gg6G89757aJLoGC47\"]},\"contracts/interfaces/IVaultRegistry.sol\":{\"keccak256\":\"0x66ba86bbbe472a039ab45b556eb235c9ed64ea0d43de4f22fdf64b9b41e3f4ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8fb21d42fb95e7f8df33c227ae1b2363c7d86288f8d88a076c0163f28c2687e\",\"dweb:/ipfs/QmQboWcs8qDG1kqjoKr5QAVa6oWCHagGoYxcsmNbgYhka3\"]},\"contracts/interfaces/utils/IDefaultAccessControl.sol\":{\"keccak256\":\"0x847c664c3e293a19109ec872e341f254a86c6f93548cea827f4e8a485cf994cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95fc19492725d54c1792afc736ec501a1f3a46975ecf584bfd3c0bfd83b140eb\",\"dweb:/ipfs/QmXnawUkM3xxj2ytaTaekvj8FB3JeoiTrrBazhYg47wjSc\"]},\"contracts/interfaces/vaults/IVault.sol\":{\"keccak256\":\"0x9e74850f8f3ecd6eab0f6b1adaad960c443b14c128007a77260d2bb6bcb686d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87c2e0bdacc0a3fe9825f07a2de8ece41a6cc477872b10bd2b083400a13f4b8e\",\"dweb:/ipfs/QmWWvR4uQY7rXboGbVBEnDH9QvTRJW9pSmSoPq8f9p8JgT\"]},\"contracts/interfaces/vaults/IVaultGovernance.sol\":{\"keccak256\":\"0xa5b24cd080393cb094d7887bbdc04fb4361fde90280e8bf9856428b6b6ebd90d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6ce19e4c8a5b788963f895c6ebde1c84a294a284e76d9733d9bf89f75d2eca2\",\"dweb:/ipfs/QmWFXkhuaaCr3VaRaKSe12hs6DKeebQhDUqAd4z6TeByJq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"initialized()": {
								"notice": "Checks if the vault is initialized"
							},
							"isVaultToken(address)": {
								"notice": "Checks if a token is vault token"
							},
							"nft()": {
								"notice": "VaultRegistry NFT for this vault"
							},
							"pullExistentials()": {
								"notice": "Existential amounts for each token"
							},
							"tvl()": {
								"notice": "Total value locked for this contract."
							},
							"vaultGovernance()": {
								"notice": "Address of the Vault Governance for this contract."
							},
							"vaultTokens()": {
								"notice": "ERC20 tokens under Vault management."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/interfaces/vaults/IVaultGovernance.sol": {
				"IVaultGovernance": {
					"abi": [
						{
							"inputs": [],
							"name": "commitInternalParams",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "delayedProtocolParamsTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nft",
									"type": "uint256"
								}
							],
							"name": "delayedProtocolPerVaultParamsTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nft",
									"type": "uint256"
								}
							],
							"name": "delayedStrategyParamsTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "internalParams",
							"outputs": [
								{
									"components": [
										{
											"internalType": "contract IProtocolGovernance",
											"name": "protocolGovernance",
											"type": "address"
										},
										{
											"internalType": "contract IVaultRegistry",
											"name": "registry",
											"type": "address"
										},
										{
											"internalType": "contract IVault",
											"name": "singleton",
											"type": "address"
										}
									],
									"internalType": "struct IVaultGovernance.InternalParams",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "internalParamsTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "contract IProtocolGovernance",
											"name": "protocolGovernance",
											"type": "address"
										},
										{
											"internalType": "contract IVaultRegistry",
											"name": "registry",
											"type": "address"
										},
										{
											"internalType": "contract IVault",
											"name": "singleton",
											"type": "address"
										}
									],
									"internalType": "struct IVaultGovernance.InternalParams",
									"name": "newParams",
									"type": "tuple"
								}
							],
							"name": "stageInternalParams",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stagedInternalParams",
							"outputs": [
								{
									"components": [
										{
											"internalType": "contract IProtocolGovernance",
											"name": "protocolGovernance",
											"type": "address"
										},
										{
											"internalType": "contract IVaultRegistry",
											"name": "registry",
											"type": "address"
										},
										{
											"internalType": "contract IVault",
											"name": "singleton",
											"type": "address"
										}
									],
									"internalType": "struct IVaultGovernance.InternalParams",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"delayedProtocolPerVaultParamsTimestamp(uint256)": {
								"params": {
									"nft": "Nft of the vault"
								}
							},
							"delayedStrategyParamsTimestamp(uint256)": {
								"params": {
									"nft": "Nft of the vault"
								}
							},
							"stageInternalParams((address,address,address))": {
								"params": {
									"newParams": "New Internal Params"
								}
							},
							"stagedInternalParams()": {
								"details": "The Internal Params could be committed after internalParamsTimestamp"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"commitInternalParams()": "d4a07d34",
							"delayedProtocolParamsTimestamp()": "e4af6e79",
							"delayedProtocolPerVaultParamsTimestamp(uint256)": "511ce798",
							"delayedStrategyParamsTimestamp(uint256)": "6707acee",
							"internalParams()": "7ac46fbb",
							"internalParamsTimestamp()": "1c7f4c73",
							"stageInternalParams((address,address,address))": "09946538",
							"stagedInternalParams()": "86c6be3e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"commitInternalParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delayedProtocolParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"delayedProtocolPerVaultParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"delayedStrategyParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"internalParams\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"internalParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"newParams\",\"type\":\"tuple\"}],\"name\":\"stageInternalParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stagedInternalParams\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"delayedProtocolPerVaultParamsTimestamp(uint256)\":{\"params\":{\"nft\":\"Nft of the vault\"}},\"delayedStrategyParamsTimestamp(uint256)\":{\"params\":{\"nft\":\"Nft of the vault\"}},\"stageInternalParams((address,address,address))\":{\"params\":{\"newParams\":\"New Internal Params\"}},\"stagedInternalParams()\":{\"details\":\"The Internal Params could be committed after internalParamsTimestamp\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"commitInternalParams()\":{\"notice\":\"Commit staged Internal Params.\"},\"delayedProtocolParamsTimestamp()\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Protocol Params could be committed.\"},\"delayedProtocolPerVaultParamsTimestamp(uint256)\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Protocol Params Per Vault could be committed.\"},\"delayedStrategyParamsTimestamp(uint256)\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Strategy Params could be committed.\"},\"internalParams()\":{\"notice\":\"Internal Params of the contract.\"},\"internalParamsTimestamp()\":{\"notice\":\"Timestamp in unix time seconds after which staged Internal Params could be committed.\"},\"stageInternalParams((address,address,address))\":{\"notice\":\"Stage new Internal Params.\"},\"stagedInternalParams()\":{\"notice\":\"Staged new Internal Params.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/vaults/IVaultGovernance.sol\":\"IVaultGovernance\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x693d1a6333975d5bd166fcc844874f96affecbf45dc5c34fa7d172248d74c06b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e7e0a870c4c25c619d8cef3c646ac78b9e9d4ac15d50f8f2b6729bd04cae47c\",\"dweb:/ipfs/QmNj6rGpNzq6HDnfyBNr8joZCGm23M5kWHAhYfg3BwN7JF\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0x3c3ef4fb25def71f5f18af554ca938950eb9cf218fda073ed2c69b9203c03455\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8083924ad8ee40a1254bb235c59360165b3cac1bc1e9bfd926beecc50c75cffd\",\"dweb:/ipfs/Qme9trL3Q7GAP2B18XAg1DynP1EyQ2K1GcM6MwWgKM97p5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x872ba21af7c1f0ae04a715beca31e8fcac764d6c8762940b0fe1bfb6ed8e86f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://497017741d74878b56a67ad51e98061bd9ec0e6e4fdbfef0e2ab51523f4c16de\",\"dweb:/ipfs/QmWfkpRHksy8jFywqYxdmMqdkQ1hxrGTPoNBXbZ48zTvyv\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x6aa521718bf139b44ce56f194f6aea1d590cacef995b5a84703fb1579fa49be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://100f8d367b5e94eb9cb991914f1de133cf272654c0708faa893bbc17a5b35b93\",\"dweb:/ipfs/QmZeBojmgXq821dL1TJKFb58B1FogM9jL3u7hXQ8hTEBKT\"]},\"contracts/interfaces/IProtocolGovernance.sol\":{\"keccak256\":\"0xda6b37c257d780a870b289b4e44badc6afb7f2301f500a440c4c020abedd98e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93ce78b05dd9bdaea807380cd44e220c217ee4bb27f311993f28ea27c82fd215\",\"dweb:/ipfs/QmcxSoA8MBtwt1FFGVcGo4LCzCSUAB3jfX5TkiafAVQbqx\"]},\"contracts/interfaces/IUnitPricesGovernance.sol\":{\"keccak256\":\"0x300050e0de7d02134592f130cdb90752dc8fcea6cab2e58eb9dafd3a7e3f4e5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1065d39058393c0da9550a424a34e2832882a530e4ddce33f5ddd17bd2d56a72\",\"dweb:/ipfs/QmX1zjA1as8jxrvZCwTyGPVAkCyh7Gg6G89757aJLoGC47\"]},\"contracts/interfaces/IVaultRegistry.sol\":{\"keccak256\":\"0x66ba86bbbe472a039ab45b556eb235c9ed64ea0d43de4f22fdf64b9b41e3f4ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8fb21d42fb95e7f8df33c227ae1b2363c7d86288f8d88a076c0163f28c2687e\",\"dweb:/ipfs/QmQboWcs8qDG1kqjoKr5QAVa6oWCHagGoYxcsmNbgYhka3\"]},\"contracts/interfaces/utils/IDefaultAccessControl.sol\":{\"keccak256\":\"0x847c664c3e293a19109ec872e341f254a86c6f93548cea827f4e8a485cf994cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95fc19492725d54c1792afc736ec501a1f3a46975ecf584bfd3c0bfd83b140eb\",\"dweb:/ipfs/QmXnawUkM3xxj2ytaTaekvj8FB3JeoiTrrBazhYg47wjSc\"]},\"contracts/interfaces/vaults/IVault.sol\":{\"keccak256\":\"0x9e74850f8f3ecd6eab0f6b1adaad960c443b14c128007a77260d2bb6bcb686d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87c2e0bdacc0a3fe9825f07a2de8ece41a6cc477872b10bd2b083400a13f4b8e\",\"dweb:/ipfs/QmWWvR4uQY7rXboGbVBEnDH9QvTRJW9pSmSoPq8f9p8JgT\"]},\"contracts/interfaces/vaults/IVaultGovernance.sol\":{\"keccak256\":\"0xa5b24cd080393cb094d7887bbdc04fb4361fde90280e8bf9856428b6b6ebd90d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6ce19e4c8a5b788963f895c6ebde1c84a294a284e76d9733d9bf89f75d2eca2\",\"dweb:/ipfs/QmWFXkhuaaCr3VaRaKSe12hs6DKeebQhDUqAd4z6TeByJq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"commitInternalParams()": {
								"notice": "Commit staged Internal Params."
							},
							"delayedProtocolParamsTimestamp()": {
								"notice": "Timestamp in unix time seconds after which staged Delayed Protocol Params could be committed."
							},
							"delayedProtocolPerVaultParamsTimestamp(uint256)": {
								"notice": "Timestamp in unix time seconds after which staged Delayed Protocol Params Per Vault could be committed."
							},
							"delayedStrategyParamsTimestamp(uint256)": {
								"notice": "Timestamp in unix time seconds after which staged Delayed Strategy Params could be committed."
							},
							"internalParams()": {
								"notice": "Internal Params of the contract."
							},
							"internalParamsTimestamp()": {
								"notice": "Timestamp in unix time seconds after which staged Internal Params could be committed."
							},
							"stageInternalParams((address,address,address))": {
								"notice": "Stage new Internal Params."
							},
							"stagedInternalParams()": {
								"notice": "Staged new Internal Params."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/libraries/ExceptionsLibrary.sol": {
				"ExceptionsLibrary": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/ExceptionsLibrary.sol\":127:1086  library ExceptionsLibrary {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/ExceptionsLibrary.sol\":127:1086  library ExceptionsLibrary {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220df51d4d0798842b2c878b44a334e4791391a9889e299482c1c0d8b2aadfe0b3d64736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220df51d4d0798842b2c878b44a334e4791391a9889e299482c1c0d8b2aadfe0b3d64736f6c63430008090033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF MLOAD 0xD4 0xD0 PUSH26 0x8842B2C878B44A334E4791391A9889E299482C1C0D8B2AADFE0B RETURNDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
							"sourceMap": "127:959:26:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;127:959:26;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220df51d4d0798842b2c878b44a334e4791391a9889e299482c1c0d8b2aadfe0b3d64736f6c63430008090033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF MLOAD 0xD4 0xD0 PUSH26 0x8842B2C878B44A334E4791391A9889E299482C1C0D8B2AADFE0B RETURNDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
							"sourceMap": "127:959:26:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 127,
									"end": 1086,
									"name": "PUSH #[$]",
									"source": 26,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 127,
									"end": 1086,
									"name": "PUSH [$]",
									"source": 26,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 127,
									"end": 1086,
									"name": "PUSH",
									"source": 26,
									"value": "B"
								},
								{
									"begin": 127,
									"end": 1086,
									"name": "DUP3",
									"source": 26
								},
								{
									"begin": 127,
									"end": 1086,
									"name": "DUP3",
									"source": 26
								},
								{
									"begin": 127,
									"end": 1086,
									"name": "DUP3",
									"source": 26
								},
								{
									"begin": 127,
									"end": 1086,
									"name": "CODECOPY",
									"source": 26
								},
								{
									"begin": 127,
									"end": 1086,
									"name": "DUP1",
									"source": 26
								},
								{
									"begin": 127,
									"end": 1086,
									"name": "MLOAD",
									"source": 26
								},
								{
									"begin": 127,
									"end": 1086,
									"name": "PUSH",
									"source": 26,
									"value": "0"
								},
								{
									"begin": 127,
									"end": 1086,
									"name": "BYTE",
									"source": 26
								},
								{
									"begin": 127,
									"end": 1086,
									"name": "PUSH",
									"source": 26,
									"value": "73"
								},
								{
									"begin": 127,
									"end": 1086,
									"name": "EQ",
									"source": 26
								},
								{
									"begin": 127,
									"end": 1086,
									"name": "PUSH [tag]",
									"source": 26,
									"value": "1"
								},
								{
									"begin": 127,
									"end": 1086,
									"name": "JUMPI",
									"source": 26
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 127,
									"end": 1086,
									"name": "PUSH",
									"source": 26,
									"value": "0"
								},
								{
									"begin": 127,
									"end": 1086,
									"name": "MSTORE",
									"source": 26
								},
								{
									"begin": 127,
									"end": 1086,
									"name": "PUSH",
									"source": 26,
									"value": "0"
								},
								{
									"begin": 127,
									"end": 1086,
									"name": "PUSH",
									"source": 26,
									"value": "4"
								},
								{
									"begin": 127,
									"end": 1086,
									"name": "MSTORE",
									"source": 26
								},
								{
									"begin": 127,
									"end": 1086,
									"name": "PUSH",
									"source": 26,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 1086,
									"name": "PUSH",
									"source": 26,
									"value": "0"
								},
								{
									"begin": 127,
									"end": 1086,
									"name": "REVERT",
									"source": 26
								},
								{
									"begin": 127,
									"end": 1086,
									"name": "tag",
									"source": 26,
									"value": "1"
								},
								{
									"begin": 127,
									"end": 1086,
									"name": "JUMPDEST",
									"source": 26
								},
								{
									"begin": 127,
									"end": 1086,
									"name": "ADDRESS",
									"source": 26
								},
								{
									"begin": 127,
									"end": 1086,
									"name": "PUSH",
									"source": 26,
									"value": "0"
								},
								{
									"begin": 127,
									"end": 1086,
									"name": "MSTORE",
									"source": 26
								},
								{
									"begin": 127,
									"end": 1086,
									"name": "PUSH",
									"source": 26,
									"value": "73"
								},
								{
									"begin": 127,
									"end": 1086,
									"name": "DUP2",
									"source": 26
								},
								{
									"begin": 127,
									"end": 1086,
									"name": "MSTORE8",
									"source": 26
								},
								{
									"begin": 127,
									"end": 1086,
									"name": "DUP3",
									"source": 26
								},
								{
									"begin": 127,
									"end": 1086,
									"name": "DUP2",
									"source": 26
								},
								{
									"begin": 127,
									"end": 1086,
									"name": "RETURN",
									"source": 26
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220df51d4d0798842b2c878b44a334e4791391a9889e299482c1c0d8b2aadfe0b3d64736f6c63430008090033",
									".code": [
										{
											"begin": 127,
											"end": 1086,
											"name": "PUSHDEPLOYADDRESS",
											"source": 26
										},
										{
											"begin": 127,
											"end": 1086,
											"name": "ADDRESS",
											"source": 26
										},
										{
											"begin": 127,
											"end": 1086,
											"name": "EQ",
											"source": 26
										},
										{
											"begin": 127,
											"end": 1086,
											"name": "PUSH",
											"source": 26,
											"value": "80"
										},
										{
											"begin": 127,
											"end": 1086,
											"name": "PUSH",
											"source": 26,
											"value": "40"
										},
										{
											"begin": 127,
											"end": 1086,
											"name": "MSTORE",
											"source": 26
										},
										{
											"begin": 127,
											"end": 1086,
											"name": "PUSH",
											"source": 26,
											"value": "0"
										},
										{
											"begin": 127,
											"end": 1086,
											"name": "DUP1",
											"source": 26
										},
										{
											"begin": 127,
											"end": 1086,
											"name": "REVERT",
											"source": 26
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Exceptions stores project`s smart-contracts exceptions\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/ExceptionsLibrary.sol\":\"ExceptionsLibrary\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/ExceptionsLibrary.sol\":{\"keccak256\":\"0x9d3c5dbb4f630168c4c2dc8954dfefd3160632c3253ac7d9fab740db83a8debe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0f1054e7ebc130cb46db7da57a16a350699020ab2e31b453677be318aaab72\",\"dweb:/ipfs/QmbNiK1uTZmhvaN9KeCvEXiKnERcaU6fxAnKPGMbUmqk9r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Exceptions stores project`s smart-contracts exceptions",
						"version": 1
					}
				}
			},
			"contracts/libraries/PermissionIdsLibrary.sol": {
				"PermissionIdsLibrary": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/PermissionIdsLibrary.sol\":107:882  library PermissionIdsLibrary {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/PermissionIdsLibrary.sol\":107:882  library PermissionIdsLibrary {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122017b16bac1a43a13206c42b84861c45529ffdde5b6af32a412a8ea5a966f2e7e264736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122017b16bac1a43a13206c42b84861c45529ffdde5b6af32a412a8ea5a966f2e7e264736f6c63430008090033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR 0xB1 PUSH12 0xAC1A43A13206C42B84861C45 MSTORE SWAP16 REVERT 0xDE JUMPDEST PUSH11 0xF32A412A8EA5A966F2E7E2 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
							"sourceMap": "107:775:27:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;107:775:27;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122017b16bac1a43a13206c42b84861c45529ffdde5b6af32a412a8ea5a966f2e7e264736f6c63430008090033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR 0xB1 PUSH12 0xAC1A43A13206C42B84861C45 MSTORE SWAP16 REVERT 0xDE JUMPDEST PUSH11 0xF32A412A8EA5A966F2E7E2 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
							"sourceMap": "107:775:27:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 107,
									"end": 882,
									"name": "PUSH #[$]",
									"source": 27,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 107,
									"end": 882,
									"name": "PUSH [$]",
									"source": 27,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 107,
									"end": 882,
									"name": "PUSH",
									"source": 27,
									"value": "B"
								},
								{
									"begin": 107,
									"end": 882,
									"name": "DUP3",
									"source": 27
								},
								{
									"begin": 107,
									"end": 882,
									"name": "DUP3",
									"source": 27
								},
								{
									"begin": 107,
									"end": 882,
									"name": "DUP3",
									"source": 27
								},
								{
									"begin": 107,
									"end": 882,
									"name": "CODECOPY",
									"source": 27
								},
								{
									"begin": 107,
									"end": 882,
									"name": "DUP1",
									"source": 27
								},
								{
									"begin": 107,
									"end": 882,
									"name": "MLOAD",
									"source": 27
								},
								{
									"begin": 107,
									"end": 882,
									"name": "PUSH",
									"source": 27,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 882,
									"name": "BYTE",
									"source": 27
								},
								{
									"begin": 107,
									"end": 882,
									"name": "PUSH",
									"source": 27,
									"value": "73"
								},
								{
									"begin": 107,
									"end": 882,
									"name": "EQ",
									"source": 27
								},
								{
									"begin": 107,
									"end": 882,
									"name": "PUSH [tag]",
									"source": 27,
									"value": "1"
								},
								{
									"begin": 107,
									"end": 882,
									"name": "JUMPI",
									"source": 27
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 107,
									"end": 882,
									"name": "PUSH",
									"source": 27,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 882,
									"name": "MSTORE",
									"source": 27
								},
								{
									"begin": 107,
									"end": 882,
									"name": "PUSH",
									"source": 27,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 882,
									"name": "PUSH",
									"source": 27,
									"value": "4"
								},
								{
									"begin": 107,
									"end": 882,
									"name": "MSTORE",
									"source": 27
								},
								{
									"begin": 107,
									"end": 882,
									"name": "PUSH",
									"source": 27,
									"value": "24"
								},
								{
									"begin": 107,
									"end": 882,
									"name": "PUSH",
									"source": 27,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 882,
									"name": "REVERT",
									"source": 27
								},
								{
									"begin": 107,
									"end": 882,
									"name": "tag",
									"source": 27,
									"value": "1"
								},
								{
									"begin": 107,
									"end": 882,
									"name": "JUMPDEST",
									"source": 27
								},
								{
									"begin": 107,
									"end": 882,
									"name": "ADDRESS",
									"source": 27
								},
								{
									"begin": 107,
									"end": 882,
									"name": "PUSH",
									"source": 27,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 882,
									"name": "MSTORE",
									"source": 27
								},
								{
									"begin": 107,
									"end": 882,
									"name": "PUSH",
									"source": 27,
									"value": "73"
								},
								{
									"begin": 107,
									"end": 882,
									"name": "DUP2",
									"source": 27
								},
								{
									"begin": 107,
									"end": 882,
									"name": "MSTORE8",
									"source": 27
								},
								{
									"begin": 107,
									"end": 882,
									"name": "DUP3",
									"source": 27
								},
								{
									"begin": 107,
									"end": 882,
									"name": "DUP2",
									"source": 27
								},
								{
									"begin": 107,
									"end": 882,
									"name": "RETURN",
									"source": 27
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122017b16bac1a43a13206c42b84861c45529ffdde5b6af32a412a8ea5a966f2e7e264736f6c63430008090033",
									".code": [
										{
											"begin": 107,
											"end": 882,
											"name": "PUSHDEPLOYADDRESS",
											"source": 27
										},
										{
											"begin": 107,
											"end": 882,
											"name": "ADDRESS",
											"source": 27
										},
										{
											"begin": 107,
											"end": 882,
											"name": "EQ",
											"source": 27
										},
										{
											"begin": 107,
											"end": 882,
											"name": "PUSH",
											"source": 27,
											"value": "80"
										},
										{
											"begin": 107,
											"end": 882,
											"name": "PUSH",
											"source": 27,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 882,
											"name": "MSTORE",
											"source": 27
										},
										{
											"begin": 107,
											"end": 882,
											"name": "PUSH",
											"source": 27,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 882,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 107,
											"end": 882,
											"name": "REVERT",
											"source": 27
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Stores permission ids for addresses\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/PermissionIdsLibrary.sol\":\"PermissionIdsLibrary\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/PermissionIdsLibrary.sol\":{\"keccak256\":\"0x8f78667de19682976b7b5f2f13eac15d2344a0387164e819895d363e19c6058c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e94cb83c512a6dce844323b3b448fc129ae12f80305567193d472d26e852c9de\",\"dweb:/ipfs/QmUo5NYGfQPUGphL5LSTzfqtG4Gpn5JSH5SF8yy8hbv1Ha\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Stores permission ids for addresses",
						"version": 1
					}
				}
			},
			"contracts/utils/ContractMeta.sol": {
				"ContractMeta": {
					"abi": [
						{
							"inputs": [],
							"name": "contractName",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractNameBytes",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractVersion",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractVersionBytes",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"contractName()": "75d0c0dc",
							"contractNameBytes()": "0e3e80ac",
							"contractVersion()": "a0a8e460",
							"contractVersionBytes()": "06a46239"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"contractName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractNameBytes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersionBytes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/ContractMeta.sol\":\"ContractMeta\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/utils/IContractMeta.sol\":{\"keccak256\":\"0x71ab67daf730f37610ce5964dda62744edb347fa5b12210f9bb7c9239ff66e2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6f38640781fbb7476777544c34457723765be302d0b208a7e841a6361967812\",\"dweb:/ipfs/QmRKa7A3FZJvjrJwZnhKUuddfdH7J7HuRTQBbdfBwiU4rU\"]},\"contracts/utils/ContractMeta.sol\":{\"keccak256\":\"0x4fbcc859f5a0e284485afbd6dd6ec95010dfa08cc278f50c884f5d8f8add3682\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4c7adf6e64fb38c9d1a19ad1c32e95358930f542b52ed02558b8fddc1440a45c\",\"dweb:/ipfs/QmZ8sj3pL6WCasw1evkHNNQu9bwCfBYzKhVy43XU6Qwqdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/vaults/UniV3VaultGovernance.sol": {
				"UniV3VaultGovernance": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "contract IProtocolGovernance",
											"name": "protocolGovernance",
											"type": "address"
										},
										{
											"internalType": "contract IVaultRegistry",
											"name": "registry",
											"type": "address"
										},
										{
											"internalType": "contract IVault",
											"name": "singleton",
											"type": "address"
										}
									],
									"internalType": "struct IVaultGovernance.InternalParams",
									"name": "internalParams_",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "contract INonfungiblePositionManager",
											"name": "positionManager",
											"type": "address"
										},
										{
											"internalType": "contract IOracle",
											"name": "oracle",
											"type": "address"
										}
									],
									"internalType": "struct IUniV3VaultGovernance.DelayedProtocolParams",
									"name": "delayedProtocolParams_",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "origin",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "contract INonfungiblePositionManager",
											"name": "positionManager",
											"type": "address"
										},
										{
											"internalType": "contract IOracle",
											"name": "oracle",
											"type": "address"
										}
									],
									"indexed": false,
									"internalType": "struct IUniV3VaultGovernance.DelayedProtocolParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "CommitDelayedProtocolParams",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "origin",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "nft",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "safetyIndicesSet",
											"type": "uint32"
										}
									],
									"indexed": false,
									"internalType": "struct IUniV3VaultGovernance.DelayedStrategyParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "CommitDelayedStrategyParams",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "origin",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "contract IProtocolGovernance",
											"name": "protocolGovernance",
											"type": "address"
										},
										{
											"internalType": "contract IVaultRegistry",
											"name": "registry",
											"type": "address"
										},
										{
											"internalType": "contract IVault",
											"name": "singleton",
											"type": "address"
										}
									],
									"indexed": false,
									"internalType": "struct IVaultGovernance.InternalParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "CommitedInternalParams",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "origin",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address[]",
									"name": "vaultTokens",
									"type": "address[]"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "options",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "vaultAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "vaultNft",
									"type": "uint256"
								}
							],
							"name": "DeployedVault",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "origin",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "contract INonfungiblePositionManager",
											"name": "positionManager",
											"type": "address"
										},
										{
											"internalType": "contract IOracle",
											"name": "oracle",
											"type": "address"
										}
									],
									"indexed": false,
									"internalType": "struct IUniV3VaultGovernance.DelayedProtocolParams",
									"name": "params",
									"type": "tuple"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "when",
									"type": "uint256"
								}
							],
							"name": "StageDelayedProtocolParams",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "origin",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "nft",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "safetyIndicesSet",
											"type": "uint32"
										}
									],
									"indexed": false,
									"internalType": "struct IUniV3VaultGovernance.DelayedStrategyParams",
									"name": "params",
									"type": "tuple"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "when",
									"type": "uint256"
								}
							],
							"name": "StageDelayedStrategyParams",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "origin",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "contract IProtocolGovernance",
											"name": "protocolGovernance",
											"type": "address"
										},
										{
											"internalType": "contract IVaultRegistry",
											"name": "registry",
											"type": "address"
										},
										{
											"internalType": "contract IVault",
											"name": "singleton",
											"type": "address"
										}
									],
									"indexed": false,
									"internalType": "struct IVaultGovernance.InternalParams",
									"name": "params",
									"type": "tuple"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "when",
									"type": "uint256"
								}
							],
							"name": "StagedInternalParams",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "commitDelayedProtocolParams",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nft",
									"type": "uint256"
								}
							],
							"name": "commitDelayedStrategyParams",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "commitInternalParams",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractName",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractNameBytes",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractVersion",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractVersionBytes",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "vaultTokens_",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "owner_",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee_",
									"type": "uint24"
								},
								{
									"internalType": "address",
									"name": "uniV3Helper_",
									"type": "address"
								}
							],
							"name": "createVault",
							"outputs": [
								{
									"internalType": "contract IUniV3Vault",
									"name": "vault",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nft",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "delayedProtocolParams",
							"outputs": [
								{
									"components": [
										{
											"internalType": "contract INonfungiblePositionManager",
											"name": "positionManager",
											"type": "address"
										},
										{
											"internalType": "contract IOracle",
											"name": "oracle",
											"type": "address"
										}
									],
									"internalType": "struct IUniV3VaultGovernance.DelayedProtocolParams",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "delayedProtocolParamsTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nft",
									"type": "uint256"
								}
							],
							"name": "delayedProtocolPerVaultParamsTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nft",
									"type": "uint256"
								}
							],
							"name": "delayedStrategyParams",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "safetyIndicesSet",
											"type": "uint32"
										}
									],
									"internalType": "struct IUniV3VaultGovernance.DelayedStrategyParams",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nft",
									"type": "uint256"
								}
							],
							"name": "delayedStrategyParamsTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "internalParams",
							"outputs": [
								{
									"components": [
										{
											"internalType": "contract IProtocolGovernance",
											"name": "protocolGovernance",
											"type": "address"
										},
										{
											"internalType": "contract IVaultRegistry",
											"name": "registry",
											"type": "address"
										},
										{
											"internalType": "contract IVault",
											"name": "singleton",
											"type": "address"
										}
									],
									"internalType": "struct IVaultGovernance.InternalParams",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "internalParamsTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "contract INonfungiblePositionManager",
											"name": "positionManager",
											"type": "address"
										},
										{
											"internalType": "contract IOracle",
											"name": "oracle",
											"type": "address"
										}
									],
									"internalType": "struct IUniV3VaultGovernance.DelayedProtocolParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "stageDelayedProtocolParams",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nft",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "safetyIndicesSet",
											"type": "uint32"
										}
									],
									"internalType": "struct IUniV3VaultGovernance.DelayedStrategyParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "stageDelayedStrategyParams",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "contract IProtocolGovernance",
											"name": "protocolGovernance",
											"type": "address"
										},
										{
											"internalType": "contract IVaultRegistry",
											"name": "registry",
											"type": "address"
										},
										{
											"internalType": "contract IVault",
											"name": "singleton",
											"type": "address"
										}
									],
									"internalType": "struct IVaultGovernance.InternalParams",
									"name": "newParams",
									"type": "tuple"
								}
							],
							"name": "stageInternalParams",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stagedDelayedProtocolParams",
							"outputs": [
								{
									"components": [
										{
											"internalType": "contract INonfungiblePositionManager",
											"name": "positionManager",
											"type": "address"
										},
										{
											"internalType": "contract IOracle",
											"name": "oracle",
											"type": "address"
										}
									],
									"internalType": "struct IUniV3VaultGovernance.DelayedProtocolParams",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nft",
									"type": "uint256"
								}
							],
							"name": "stagedDelayedStrategyParams",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "safetyIndicesSet",
											"type": "uint32"
										}
									],
									"internalType": "struct IUniV3VaultGovernance.DelayedStrategyParams",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stagedInternalParams",
							"outputs": [
								{
									"components": [
										{
											"internalType": "contract IProtocolGovernance",
											"name": "protocolGovernance",
											"type": "address"
										},
										{
											"internalType": "contract IVaultRegistry",
											"name": "registry",
											"type": "address"
										},
										{
											"internalType": "contract IVault",
											"name": "singleton",
											"type": "address"
										}
									],
									"internalType": "struct IVaultGovernance.InternalParams",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"CommitDelayedProtocolParams(address,address,(address,address))": {
								"params": {
									"origin": "Origin of the transaction (tx.origin)",
									"params": "New params that are committed",
									"sender": "Sender of the call (msg.sender)"
								}
							},
							"CommitDelayedStrategyParams(address,address,uint256,(uint32))": {
								"params": {
									"nft": "VaultRegistry NFT of the vault",
									"origin": "Origin of the transaction (tx.origin)",
									"params": "New params that are committed",
									"sender": "Sender of the call (msg.sender)"
								}
							},
							"StageDelayedProtocolParams(address,address,(address,address),uint256)": {
								"params": {
									"origin": "Origin of the transaction (tx.origin)",
									"params": "New params that were staged for commit",
									"sender": "Sender of the call (msg.sender)",
									"when": "When the params could be committed"
								}
							},
							"StageDelayedStrategyParams(address,address,uint256,(uint32),uint256)": {
								"params": {
									"nft": "VaultRegistry NFT of the vault",
									"origin": "Origin of the transaction (tx.origin)",
									"params": "New params that were staged for commit",
									"sender": "Sender of the call (msg.sender)",
									"when": "When the params could be committed"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"commitDelayedStrategyParams(uint256)": {
								"details": "Can only be called after delayedStrategyParamsTimestamp",
								"params": {
									"nft": "VaultRegistry NFT of the vault"
								}
							},
							"constructor": {
								"params": {
									"delayedProtocolParams_": "Initial Protocol Params",
									"internalParams_": "Initial Internal Params"
								}
							},
							"createVault(address[],address,uint24,address)": {
								"params": {
									"fee_": "Fee of the UniV3 pool",
									"owner_": "Owner of the vault NFT",
									"uniV3Helper_": "address of helper for UniV3 arithmetic with ticks",
									"vaultTokens_": "ERC20 tokens that will be managed by this Vault"
								}
							},
							"delayedProtocolPerVaultParamsTimestamp(uint256)": {
								"params": {
									"nft": "Nft of the vault"
								}
							},
							"delayedStrategyParams(uint256)": {
								"params": {
									"nft": "VaultRegistry NFT of the vault"
								}
							},
							"delayedStrategyParamsTimestamp(uint256)": {
								"params": {
									"nft": "Nft of the vault"
								}
							},
							"stageDelayedProtocolParams((address,address))": {
								"params": {
									"params": "New params"
								}
							},
							"stageDelayedStrategyParams(uint256,(uint32))": {
								"params": {
									"nft": "VaultRegistry NFT of the vault",
									"params": "New params"
								}
							},
							"stageInternalParams((address,address,address))": {
								"params": {
									"newParams": "New Internal Params"
								}
							},
							"stagedDelayedStrategyParams(uint256)": {
								"params": {
									"nft": "VaultRegistry NFT of the vault"
								}
							},
							"stagedInternalParams()": {
								"details": "The Internal Params could be committed after internalParamsTimestamp"
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/vaults/UniV3VaultGovernance.sol\":391:7446  contract UniV3VaultGovernance is ContractMeta, IUniV3VaultGovernance, VaultGovernance {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/vaults/UniV3VaultGovernance.sol\":644:1090  constructor(InternalParams memory internalParams_, DelayedProtocolParams memory delayedProtocolParams_)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/vaults/VaultGovernance.sol\":1799:1833  internalParams_.protocolGovernance */\n  dup2\n  mload\n    /* \"contracts/vaults/VaultGovernance.sol\":1850:1880  ExceptionsLibrary.ADDRESS_ZERO */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x02\n  dup2\n  mstore\n  shl(0xf1, 0x20ad)\n  0x20\n  dup3\n  add\n  mstore\n    /* \"contracts/vaults/UniV3VaultGovernance.sol\":773:788  internalParams_ */\n  dup4\n  swap2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/vaults/VaultGovernance.sol\":1791:1848  address(internalParams_.protocolGovernance) != address(0) */\n  and\n    /* \"contracts/vaults/VaultGovernance.sol\":1783:1881  require(address(internalParams_.protocolGovernance) != address(0), ExceptionsLibrary.ADDRESS_ZERO) */\n  tag_7\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_7:\n  pop\n    /* \"contracts/vaults/VaultGovernance.sol\":1945:1946  0 */\n  0x00\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/vaults/VaultGovernance.sol\":1900:1947  address(internalParams_.registry) != address(0) */\n  and\n    /* \"contracts/vaults/VaultGovernance.sol\":1908:1923  internalParams_ */\n  dup2\n    /* \"contracts/vaults/VaultGovernance.sol\":1908:1932  internalParams_.registry */\n  0x20\n  add\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/vaults/VaultGovernance.sol\":1900:1947  address(internalParams_.registry) != address(0) */\n  and\n  eq\n  iszero\n    /* \"contracts/vaults/VaultGovernance.sol\":1949:1979  ExceptionsLibrary.ADDRESS_ZERO */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x02\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xf1, 0x20ad)\n  dup2\n  mstore\n  pop\n    /* \"contracts/vaults/VaultGovernance.sol\":1892:1980  require(address(internalParams_.registry) != address(0), ExceptionsLibrary.ADDRESS_ZERO) */\n  swap1\n  tag_10\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/vaults/VaultGovernance.sol\":2007:2032  internalParams_.singleton */\n  0x40\n  dup1\n  dup3\n  add\n  mload\n    /* \"contracts/vaults/VaultGovernance.sol\":2049:2079  ExceptionsLibrary.ADDRESS_ZERO */\n  dup2\n  mload\n  dup1\n  dup4\n  add\n  swap1\n  swap3\n  mstore\n  0x02\n  dup3\n  mstore\n  shl(0xf1, 0x20ad)\n  0x20\n  dup4\n  add\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/vaults/VaultGovernance.sol\":1999:2047  address(internalParams_.singleton) != address(0) */\n  and\n    /* \"contracts/vaults/VaultGovernance.sol\":1991:2080  require(address(internalParams_.singleton) != address(0), ExceptionsLibrary.ADDRESS_ZERO) */\n  tag_12\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_12:\n  pop\n    /* \"contracts/vaults/VaultGovernance.sol\":2091:2124  _internalParams = internalParams_ */\n  dup1\n  mload\n    /* \"contracts/vaults/VaultGovernance.sol\":2091:2106  _internalParams */\n  0x00\n    /* \"contracts/vaults/VaultGovernance.sol\":2091:2124  _internalParams = internalParams_ */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap4\n  dup5\n  and\n  or\n  swap1\n  swap2\n  sstore\n  0x20\n  dup1\n  dup5\n  add\n  mload\n  0x01\n  dup1\n  sload\n  dup5\n  and\n  swap2\n  dup6\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  0x40\n  swap4\n  dup5\n  add\n  mload\n  0x02\n  dup1\n  sload\n  swap1\n  swap4\n  and\n  swap1\n  dup5\n  and\n  or\n  dup3\n  sstore\n    /* \"contracts/vaults/UniV3VaultGovernance.sol\":822:860  delayedProtocolParams_.positionManager */\n  dup5\n  mload\n    /* \"contracts/vaults/UniV3VaultGovernance.sol\":877:907  ExceptionsLibrary.ADDRESS_ZERO */\n  dup5\n  mload\n  dup1\n  dup7\n  add\n  swap1\n  swap6\n  mstore\n  swap2\n  dup5\n  mstore\n  shl(0xf1, 0x20ad)\n  swap1\n  dup5\n  add\n  mstore\n    /* \"contracts/vaults/UniV3VaultGovernance.sol\":814:875  address(delayedProtocolParams_.positionManager) != address(0) */\n  and\n    /* \"contracts/vaults/UniV3VaultGovernance.sol\":806:908  require(address(delayedProtocolParams_.positionManager) != address(0), ExceptionsLibrary.ADDRESS_ZERO) */\n  tag_15\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_15:\n  pop\n    /* \"contracts/vaults/UniV3VaultGovernance.sol\":977:978  0 */\n  0x00\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/vaults/UniV3VaultGovernance.sol\":927:979  address(delayedProtocolParams_.oracle) != address(0) */\n  and\n    /* \"contracts/vaults/UniV3VaultGovernance.sol\":935:957  delayedProtocolParams_ */\n  dup2\n    /* \"contracts/vaults/UniV3VaultGovernance.sol\":935:964  delayedProtocolParams_.oracle */\n  0x20\n  add\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/vaults/UniV3VaultGovernance.sol\":927:979  address(delayedProtocolParams_.oracle) != address(0) */\n  and\n  eq\n  iszero\n    /* \"contracts/vaults/UniV3VaultGovernance.sol\":981:1011  ExceptionsLibrary.ADDRESS_ZERO */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x02\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xf1, 0x20ad)\n  dup2\n  mstore\n  pop\n    /* \"contracts/vaults/UniV3VaultGovernance.sol\":919:1012  require(address(delayedProtocolParams_.oracle) != address(0), ExceptionsLibrary.ADDRESS_ZERO) */\n  swap1\n  tag_17\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_17:\n  pop\n    /* \"contracts/vaults/UniV3VaultGovernance.sol\":1048:1082  abi.encode(delayedProtocolParams_) */\n  0x40\n  dup1\n  mload\n    /* \"#utility.yul\":2895:2908   */\n  dup3\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":2891:2913   */\n  swap1\n  dup2\n  and\n    /* \"contracts/vaults/UniV3VaultGovernance.sol\":1048:1082  abi.encode(delayedProtocolParams_) */\n  0x20\n  dup1\n  dup5\n  add\n    /* \"#utility.yul\":2873:2914   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"#utility.yul\":2962:2979   */\n  dup1\n  dup6\n  add\n    /* \"#utility.yul\":2956:2980   */\n  mload\n    /* \"#utility.yul\":2952:2985   */\n  swap1\n  swap2\n  and\n    /* \"#utility.yul\":2930:2950   */\n  dup3\n  dup5\n  add\n    /* \"#utility.yul\":2923:2986   */\n  mstore\n    /* \"contracts/vaults/UniV3VaultGovernance.sol\":1048:1082  abi.encode(delayedProtocolParams_) */\n  dup3\n  mload\n  dup1\n  dup4\n  sub\n  dup5\n  add\n  dup2\n  mstore\n    /* \"#utility.yul\":2808:2826   */\n  0x60\n  swap1\n  swap3\n  add\n    /* \"contracts/vaults/UniV3VaultGovernance.sol\":1048:1082  abi.encode(delayedProtocolParams_) */\n  swap1\n  swap3\n  mstore\n    /* \"contracts/vaults/UniV3VaultGovernance.sol\":1023:1082  _delayedProtocolParams = abi.encode(delayedProtocolParams_) */\n  dup1\n  mload\n  tag_21\n  swap3\n    /* \"contracts/vaults/UniV3VaultGovernance.sol\":1023:1045  _delayedProtocolParams */\n  0x0d\n  swap3\n    /* \"contracts/vaults/UniV3VaultGovernance.sol\":1023:1082  _delayedProtocolParams = abi.encode(delayedProtocolParams_) */\n  add\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  pop\n    /* \"contracts/vaults/UniV3VaultGovernance.sol\":644:1090  constructor(InternalParams memory internalParams_, DelayedProtocolParams memory delayedProtocolParams_)... */\n  pop\n  pop\n    /* \"contracts/vaults/UniV3VaultGovernance.sol\":391:7446  contract UniV3VaultGovernance is ContractMeta, IUniV3VaultGovernance, VaultGovernance {... */\n  jump(tag_37)\ntag_22:\n  dup3\n  dup1\n  sload\n  tag_24\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_27\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_30)\ntag_27:\n  dup3\n  0x1f\n  lt\n  tag_28\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_30)\ntag_28:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_30\n  jumpi\n  swap2\n  dup3\n  add\ntag_29:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_30\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_29)\ntag_30:\n  pop\n  tag_31\n  swap3\n  swap2\n  pop\n  tag_32\n  jump\t// in\ntag_31:\n  pop\n  swap1\n  jump\t// out\ntag_32:\ntag_33:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_31\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_33)\n    /* \"#utility.yul\":14:357   */\ntag_35:\n    /* \"#utility.yul\":81:83   */\n  0x40\n    /* \"#utility.yul\":75:84   */\n  dup1\n  mload\n  swap1\n    /* \"#utility.yul\":111:126   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":141:175   */\n  dup2\n  gt\n    /* \"#utility.yul\":177:199   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":138:200   */\n  or\n    /* \"#utility.yul\":135:320   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":242:252   */\n  0x4e487b71\n    /* \"#utility.yul\":237:240   */\n  0xe0\n    /* \"#utility.yul\":233:253   */\n  shl\n    /* \"#utility.yul\":230:231   */\n  0x00\n    /* \"#utility.yul\":223:254   */\n  mstore\n    /* \"#utility.yul\":277:281   */\n  0x41\n    /* \"#utility.yul\":274:275   */\n  0x04\n    /* \"#utility.yul\":267:282   */\n  mstore\n    /* \"#utility.yul\":305:309   */\n  0x24\n    /* \"#utility.yul\":302:303   */\n  0x00\n    /* \"#utility.yul\":295:310   */\n  revert\n    /* \"#utility.yul\":135:320   */\ntag_39:\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":329:351   */\n  mstore\n    /* \"#utility.yul\":14:357   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":362:514   */\ntag_36:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":458:489   */\n  dup2\n  and\n    /* \"#utility.yul\":448:490   */\n  dup2\n  eq\n    /* \"#utility.yul\":438:508   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":504:505   */\n  0x00\n    /* \"#utility.yul\":501:502   */\n  dup1\n    /* \"#utility.yul\":494:506   */\n  revert\n    /* \"#utility.yul\":438:508   */\ntag_41:\n    /* \"#utility.yul\":362:514   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":519:2004   */\ntag_3:\n    /* \"#utility.yul\":669:675   */\n  0x00\n    /* \"#utility.yul\":677:683   */\n  dup1\n    /* \"#utility.yul\":721:730   */\n  dup3\n    /* \"#utility.yul\":712:719   */\n  dup5\n    /* \"#utility.yul\":708:731   */\n  sub\n    /* \"#utility.yul\":751:754   */\n  0xa0\n    /* \"#utility.yul\":747:749   */\n  dup2\n    /* \"#utility.yul\":743:755   */\n  slt\n    /* \"#utility.yul\":740:772   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":768:769   */\n  0x00\n    /* \"#utility.yul\":765:766   */\n  dup1\n    /* \"#utility.yul\":758:770   */\n  revert\n    /* \"#utility.yul\":740:772   */\ntag_43:\n    /* \"#utility.yul\":792:796   */\n  0x60\n    /* \"#utility.yul\":788:790   */\n  dup2\n    /* \"#utility.yul\":784:797   */\n  slt\n    /* \"#utility.yul\":781:814   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":810:811   */\n  0x00\n    /* \"#utility.yul\":807:808   */\n  dup1\n    /* \"#utility.yul\":800:812   */\n  revert\n    /* \"#utility.yul\":781:814   */\ntag_44:\n    /* \"#utility.yul\":843:845   */\n  0x40\n    /* \"#utility.yul\":837:846   */\n  mload\n    /* \"#utility.yul\":885:889   */\n  0x60\n    /* \"#utility.yul\":873:890   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":905:939   */\n  dup2\n  gt\n    /* \"#utility.yul\":941:963   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":902:964   */\n  or\n    /* \"#utility.yul\":899:1084   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1006:1016   */\n  0x4e487b71\n    /* \"#utility.yul\":1001:1004   */\n  0xe0\n    /* \"#utility.yul\":997:1017   */\n  shl\n    /* \"#utility.yul\":994:995   */\n  0x00\n    /* \"#utility.yul\":987:1018   */\n  mstore\n    /* \"#utility.yul\":1041:1045   */\n  0x41\n    /* \"#utility.yul\":1038:1039   */\n  0x04\n    /* \"#utility.yul\":1031:1046   */\n  mstore\n    /* \"#utility.yul\":1069:1073   */\n  0x24\n    /* \"#utility.yul\":1066:1067   */\n  0x00\n    /* \"#utility.yul\":1059:1074   */\n  revert\n    /* \"#utility.yul\":899:1084   */\ntag_45:\n    /* \"#utility.yul\":1100:1102   */\n  0x40\n    /* \"#utility.yul\":1093:1115   */\n  mstore\n    /* \"#utility.yul\":1137:1153   */\n  dup5\n  mload\n    /* \"#utility.yul\":1162:1214   */\n  tag_46\n    /* \"#utility.yul\":1137:1153   */\n  dup2\n    /* \"#utility.yul\":1162:1214   */\n  tag_36\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1223:1244   */\n  dup2\n  mstore\n    /* \"#utility.yul\":1289:1291   */\n  0x20\n    /* \"#utility.yul\":1274:1292   */\n  dup6\n  add\n    /* \"#utility.yul\":1268:1293   */\n  mload\n    /* \"#utility.yul\":1302:1356   */\n  tag_47\n    /* \"#utility.yul\":1268:1293   */\n  dup2\n    /* \"#utility.yul\":1302:1356   */\n  tag_36\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1384:1386   */\n  0x20\n    /* \"#utility.yul\":1372:1387   */\n  dup3\n  add\n    /* \"#utility.yul\":1365:1397   */\n  mstore\n    /* \"#utility.yul\":1442:1444   */\n  0x40\n    /* \"#utility.yul\":1427:1445   */\n  dup6\n  add\n    /* \"#utility.yul\":1421:1446   */\n  mload\n    /* \"#utility.yul\":1455:1509   */\n  tag_48\n    /* \"#utility.yul\":1421:1446   */\n  dup2\n    /* \"#utility.yul\":1455:1509   */\n  tag_36\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1537:1539   */\n  0x40\n    /* \"#utility.yul\":1525:1540   */\n  dup3\n  dup2\n  add\n    /* \"#utility.yul\":1518:1550   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"#utility.yul\":1529:1535   */\n  swap1\n  swap4\n  pop\n  not(0x5f)\n    /* \"#utility.yul\":1591:1607   */\n  dup3\n  add\n    /* \"#utility.yul\":1587:1612   */\n  slt\n    /* \"#utility.yul\":1584:1629   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":1625:1626   */\n  0x00\n    /* \"#utility.yul\":1622:1623   */\n  dup1\n    /* \"#utility.yul\":1615:1627   */\n  revert\n    /* \"#utility.yul\":1584:1629   */\ntag_49:\n  pop\n    /* \"#utility.yul\":1653:1670   */\n  tag_50\n  tag_35\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1715:1719   */\n  0x60\n    /* \"#utility.yul\":1704:1713   */\n  dup5\n    /* \"#utility.yul\":1700:1720   */\n  add\n    /* \"#utility.yul\":1694:1721   */\n  mload\n    /* \"#utility.yul\":1730:1784   */\n  tag_51\n    /* \"#utility.yul\":1776:1783   */\n  dup2\n    /* \"#utility.yul\":1730:1784   */\n  tag_36\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1793:1817   */\n  dup2\n  mstore\n    /* \"#utility.yul\":1862:1865   */\n  0x80\n    /* \"#utility.yul\":1847:1866   */\n  dup5\n  add\n    /* \"#utility.yul\":1841:1867   */\n  mload\n    /* \"#utility.yul\":1876:1930   */\n  tag_52\n    /* \"#utility.yul\":1841:1867   */\n  dup2\n    /* \"#utility.yul\":1876:1930   */\n  tag_36\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1959:1961   */\n  0x20\n    /* \"#utility.yul\":1946:1962   */\n  dup3\n  add\n    /* \"#utility.yul\":1939:1972   */\n  mstore\n    /* \"#utility.yul\":519:2004   */\n  swap2\n  swap5\n    /* \"#utility.yul\":1950:1957   */\n  swap2\n  swap4\n  pop\n    /* \"#utility.yul\":519:2004   */\n  swap1\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2009:2606   */\ntag_9:\n    /* \"#utility.yul\":2121:2125   */\n  0x00\n    /* \"#utility.yul\":2150:2152   */\n  0x20\n    /* \"#utility.yul\":2179:2181   */\n  dup1\n    /* \"#utility.yul\":2168:2177   */\n  dup4\n    /* \"#utility.yul\":2161:2182   */\n  mstore\n    /* \"#utility.yul\":2211:2217   */\n  dup4\n    /* \"#utility.yul\":2205:2218   */\n  mload\n    /* \"#utility.yul\":2254:2260   */\n  dup1\n    /* \"#utility.yul\":2249:2251   */\n  dup3\n    /* \"#utility.yul\":2238:2247   */\n  dup6\n    /* \"#utility.yul\":2234:2252   */\n  add\n    /* \"#utility.yul\":2227:2261   */\n  mstore\n    /* \"#utility.yul\":2279:2280   */\n  0x00\n    /* \"#utility.yul\":2289:2429   */\ntag_54:\n    /* \"#utility.yul\":2303:2309   */\n  dup2\n    /* \"#utility.yul\":2300:2301   */\n  dup2\n    /* \"#utility.yul\":2297:2310   */\n  lt\n    /* \"#utility.yul\":2289:2429   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":2398:2412   */\n  dup6\n  dup2\n  add\n    /* \"#utility.yul\":2394:2417   */\n  dup4\n  add\n    /* \"#utility.yul\":2388:2418   */\n  mload\n    /* \"#utility.yul\":2364:2381   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":2383:2385   */\n  0x40\n    /* \"#utility.yul\":2360:2386   */\n  add\n    /* \"#utility.yul\":2353:2419   */\n  mstore\n    /* \"#utility.yul\":2318:2328   */\n  dup3\n  add\n    /* \"#utility.yul\":2289:2429   */\n  jump(tag_54)\ntag_56:\n    /* \"#utility.yul\":2447:2453   */\n  dup2\n    /* \"#utility.yul\":2444:2445   */\n  dup2\n    /* \"#utility.yul\":2441:2454   */\n  gt\n    /* \"#utility.yul\":2438:2529   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":2517:2518   */\n  0x00\n    /* \"#utility.yul\":2512:2514   */\n  0x40\n    /* \"#utility.yul\":2503:2509   */\n  dup4\n    /* \"#utility.yul\":2492:2501   */\n  dup8\n    /* \"#utility.yul\":2488:2510   */\n  add\n    /* \"#utility.yul\":2484:2515   */\n  add\n    /* \"#utility.yul\":2477:2519   */\n  mstore\n    /* \"#utility.yul\":2438:2529   */\ntag_57:\n  pop\n    /* \"#utility.yul\":2590:2592   */\n  0x1f\n    /* \"#utility.yul\":2569:2584   */\n  add\n  not(0x1f)\n    /* \"#utility.yul\":2565:2594   */\n  and\n    /* \"#utility.yul\":2550:2595   */\n  swap3\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":2597:2599   */\n  0x40\n    /* \"#utility.yul\":2546:2600   */\n  add\n  swap4\n    /* \"#utility.yul\":2009:2606   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2997:3377   */\ntag_25:\n    /* \"#utility.yul\":3076:3077   */\n  0x01\n    /* \"#utility.yul\":3072:3084   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":3119:3131   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":3140:3201   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":3194:3198   */\n  0x7f\n    /* \"#utility.yul\":3186:3192   */\n  dup3\n    /* \"#utility.yul\":3182:3199   */\n  and\n    /* \"#utility.yul\":3172:3199   */\n  swap2\n  pop\n    /* \"#utility.yul\":3140:3201   */\ntag_60:\n    /* \"#utility.yul\":3247:3249   */\n  0x20\n    /* \"#utility.yul\":3239:3245   */\n  dup3\n    /* \"#utility.yul\":3236:3250   */\n  lt\n    /* \"#utility.yul\":3216:3234   */\n  dup2\n    /* \"#utility.yul\":3213:3251   */\n  eq\n    /* \"#utility.yul\":3210:3371   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":3293:3303   */\n  0x4e487b71\n    /* \"#utility.yul\":3288:3291   */\n  0xe0\n    /* \"#utility.yul\":3284:3304   */\n  shl\n    /* \"#utility.yul\":3281:3282   */\n  0x00\n    /* \"#utility.yul\":3274:3305   */\n  mstore\n    /* \"#utility.yul\":3328:3332   */\n  0x22\n    /* \"#utility.yul\":3325:3326   */\n  0x04\n    /* \"#utility.yul\":3318:3333   */\n  mstore\n    /* \"#utility.yul\":3356:3360   */\n  0x24\n    /* \"#utility.yul\":3353:3354   */\n  0x00\n    /* \"#utility.yul\":3346:3361   */\n  revert\n    /* \"#utility.yul\":3210:3371   */\ntag_61:\n  pop\n    /* \"#utility.yul\":2997:3377   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_37:\n    /* \"contracts/vaults/UniV3VaultGovernance.sol\":391:7446  contract UniV3VaultGovernance is ContractMeta, IUniV3VaultGovernance, VaultGovernance {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":391:7446  contract UniV3VaultGovernance is ContractMeta, IUniV3VaultGovernance, VaultGovernance {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x75d0c0dc\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xa0a8e460\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xa0a8e460\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb2fe31ad\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xc2cbdc67\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xd34cc380\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xd4a07d34\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xe4af6e79\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x75d0c0dc\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x7ac46fbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x86c6be3e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8860d248\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x98347a5d\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x1c7f4c73\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x1c7f4c73\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x25281714\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x511ce798\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x59f3dae7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x66c153e9\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6707acee\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06a46239\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x09946538\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0bdedd56\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x0e3e80ac\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2755:2966  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2755:2966  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/utils/ContractMeta.sol\":611:719  function contractVersionBytes() external pure returns (bytes32) {... */\n    tag_4:\n      shl(0xdc, 0x0312e312e3)\n    tag_34:\n      mload(0x40)\n        /* \"#utility.yul\":643:668   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":631:633   */\n      0x20\n        /* \"#utility.yul\":616:634   */\n      add\n        /* \"contracts/utils/ContractMeta.sol\":611:719  function contractVersionBytes() external pure returns (bytes32) {... */\n      tag_32\n        /* \"#utility.yul\":497:674   */\n      jump\n        /* \"contracts/vaults/VaultGovernance.sol\":3610:4261  function stageInternalParams(InternalParams memory newParams) external {... */\n    tag_5:\n      tag_38\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4322:4633  function commitDelayedStrategyParams(uint256 nft) external {... */\n    tag_6:\n      tag_38\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n        /* \"contracts/utils/ContractMeta.sol\":366:468  function contractNameBytes() external pure returns (bytes32) {... */\n    tag_7:\n      shl(0x60, 0x556e6956335661756c74476f7665726e616e6365)\n      tag_34\n        /* \"contracts/utils/ContractMeta.sol\":611:719  function contractVersionBytes() external pure returns (bytes32) {... */\n      jump\n        /* \"contracts/vaults/VaultGovernance.sol\":2824:2941  function internalParamsTimestamp() external view returns (uint256) {... */\n    tag_8:\n        /* \"contracts/vaults/VaultGovernance.sol\":2909:2933  _internalParamsTimestamp */\n      sload(0x06)\n        /* \"contracts/vaults/VaultGovernance.sol\":2824:2941  function internalParamsTimestamp() external view returns (uint256) {... */\n      jump(tag_34)\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3905:4271  function stageDelayedStrategyParams(uint256 nft, DelayedStrategyParams calldata params) external {... */\n    tag_9:\n      tag_38\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n        /* \"contracts/vaults/VaultGovernance.sol\":2438:2601  function delayedProtocolPerVaultParamsTimestamp(uint256 nft) external view returns (uint256) {... */\n    tag_10:\n      tag_34\n      tag_58\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_58:\n        /* \"contracts/vaults/VaultGovernance.sol\":2522:2529  uint256 */\n      0x00\n        /* \"contracts/vaults/VaultGovernance.sol\":2549:2593  _delayedProtocolPerVaultParamsTimestamp[nft] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/vaults/VaultGovernance.sol\":2549:2588  _delayedProtocolPerVaultParamsTimestamp */\n      0x0c\n        /* \"contracts/vaults/VaultGovernance.sol\":2549:2593  _delayedProtocolPerVaultParamsTimestamp[nft] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/vaults/VaultGovernance.sol\":2438:2601  function delayedProtocolPerVaultParamsTimestamp(uint256 nft) external view returns (uint256) {... */\n      jump\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2006:2344  function stagedDelayedStrategyParams(uint256 nft) external view returns (DelayedStrategyParams memory) {... */\n    tag_11:\n      tag_61\n      tag_62\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      mload(0x40)\n        /* \"#utility.yul\":3074:3087   */\n      swap1\n      mload\n        /* \"#utility.yul\":3089:3099   */\n      0xffffffff\n        /* \"#utility.yul\":3070:3100   */\n      and\n        /* \"#utility.yul\":3052:3101   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3040:3042   */\n      0x20\n        /* \"#utility.yul\":3025:3043   */\n      add\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2006:2344  function stagedDelayedStrategyParams(uint256 nft) external view returns (DelayedStrategyParams memory) {... */\n      tag_32\n        /* \"#utility.yul\":2828:3107   */\n      jump\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4684:5165  function createVault(... */\n    tag_12:\n      tag_66\n      tag_67\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4920:4952   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":4902:4953   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4984:4986   */\n      0x20\n        /* \"#utility.yul\":4969:4987   */\n      dup4\n      add\n        /* \"#utility.yul\":4962:4996   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4875:4893   */\n      add\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4684:5165  function createVault(... */\n      tag_32\n        /* \"#utility.yul\":4708:5002   */\n      jump\n        /* \"contracts/vaults/VaultGovernance.sol\":2245:2392  function delayedStrategyParamsTimestamp(uint256 nft) external view returns (uint256) {... */\n    tag_13:\n      tag_34\n      tag_73\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_73:\n        /* \"contracts/vaults/VaultGovernance.sol\":2321:2328  uint256 */\n      0x00\n        /* \"contracts/vaults/VaultGovernance.sol\":2348:2384  _delayedStrategyParamsTimestamp[nft] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/vaults/VaultGovernance.sol\":2348:2379  _delayedStrategyParamsTimestamp */\n      0x09\n        /* \"contracts/vaults/VaultGovernance.sol\":2348:2384  _delayedStrategyParamsTimestamp[nft] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/vaults/VaultGovernance.sol\":2245:2392  function delayedStrategyParamsTimestamp(uint256 nft) external view returns (uint256) {... */\n      jump\n        /* \"contracts/utils/ContractMeta.sol\":237:358  function contractName() external pure returns (string memory) {... */\n    tag_14:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n        /* \"contracts/vaults/VaultGovernance.sol\":2987:3100  function internalParams() external view returns (InternalParams memory) {... */\n    tag_15:\n      tag_80\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":3070:3092  return _internalParams */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n        /* \"contracts/vaults/VaultGovernance.sol\":3077:3092  _internalParams */\n      0x00\n        /* \"contracts/vaults/VaultGovernance.sol\":3070:3092  return _internalParams */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      sload(0x01)\n      dup2\n      and\n      0x20\n      dup4\n      add\n      mstore\n      sload(0x02)\n      and\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap1\n        /* \"contracts/vaults/VaultGovernance.sol\":2987:3100  function internalParams() external view returns (InternalParams memory) {... */\n      jump\n    tag_80:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n        /* \"contracts/vaults/VaultGovernance.sol\":3146:3271  function stagedInternalParams() external view returns (InternalParams memory) {... */\n    tag_16:\n      tag_80\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":3235:3263  return _stagedInternalParams */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n        /* \"contracts/vaults/VaultGovernance.sol\":3242:3263  _stagedInternalParams */\n      0x03\n        /* \"contracts/vaults/VaultGovernance.sol\":3235:3263  return _stagedInternalParams */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      sload(0x04)\n      dup2\n      and\n      0x20\n      dup4\n      add\n      mstore\n      sload(0x05)\n      and\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap1\n        /* \"contracts/vaults/VaultGovernance.sol\":3146:3271  function stagedInternalParams() external view returns (InternalParams memory) {... */\n      jump\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2395:2718  function delayedStrategyParams(uint256 nft) external view returns (DelayedStrategyParams memory) {... */\n    tag_17:\n      tag_61\n      tag_88\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3580:3854  function commitDelayedProtocolParams() external {... */\n    tag_18:\n      tag_38\n      tag_92\n      jump\t// in\n        /* \"contracts/utils/ContractMeta.sol\":476:603  function contractVersion() external pure returns (string memory) {... */\n    tag_19:\n      tag_76\n      tag_94\n      jump\t// in\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3088:3529  function stageDelayedProtocolParams(DelayedProtocolParams calldata params) external {... */\n    tag_20:\n      tag_38\n      tag_97\n      calldatasize\n      0x04\n      tag_98\n      jump\t// in\n    tag_97:\n      tag_99\n      jump\t// in\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":1494:1955  function stagedDelayedProtocolParams() external view returns (DelayedProtocolParams memory) {... */\n    tag_21:\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6758:6771   */\n      dup3\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6754:6776   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":6736:6777   */\n      dup3\n      mstore\n        /* \"#utility.yul\":6837:6841   */\n      0x20\n        /* \"#utility.yul\":6825:6842   */\n      swap4\n      dup5\n      add\n        /* \"#utility.yul\":6819:6843   */\n      mload\n        /* \"#utility.yul\":6815:6848   */\n      and\n        /* \"#utility.yul\":6793:6813   */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":6786:6849   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":6671:6689   */\n      add\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":1494:1955  function stagedDelayedProtocolParams() external view returns (DelayedProtocolParams memory) {... */\n      tag_32\n        /* \"#utility.yul\":6474:6855   */\n      jump\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":1208:1443  function delayedProtocolParams() public view returns (DelayedProtocolParams memory) {... */\n    tag_22:\n      tag_100\n      tag_105\n      jump\t// in\n        /* \"contracts/vaults/VaultGovernance.sol\":4307:4764  function commitInternalParams() external {... */\n    tag_23:\n      tag_38\n      tag_108\n      jump\t// in\n        /* \"contracts/vaults/VaultGovernance.sol\":2647:2778  function delayedProtocolParamsTimestamp() external view returns (uint256) {... */\n    tag_24:\n        /* \"contracts/vaults/VaultGovernance.sol\":2739:2770  _delayedProtocolParamsTimestamp */\n      sload(0x0f)\n        /* \"contracts/vaults/VaultGovernance.sol\":2647:2778  function delayedProtocolParamsTimestamp() external view returns (uint256) {... */\n      jump(tag_34)\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2755:2966  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_31:\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2840:2844  bool */\n      0x00\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2864:2900  super.supportsInterface(interfaceId) */\n      tag_113\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2888:2899  interfaceId */\n      dup3\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2864:2887  super.supportsInterface */\n      tag_114\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2864:2900  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_113:\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2864:2958  super.supportsInterface(interfaceId) || type(IUniV3VaultGovernance).interfaceId == interfaceId */\n      dup1\n      tag_115\n      jumpi\n      pop\n      shl(0xe0, 0xa2e9c513)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2904:2958  type(IUniV3VaultGovernance).interfaceId == interfaceId */\n      dup4\n      and\n      eq\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2864:2958  super.supportsInterface(interfaceId) || type(IUniV3VaultGovernance).interfaceId == interfaceId */\n    tag_115:\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2857:2958  return super.supportsInterface(interfaceId) || type(IUniV3VaultGovernance).interfaceId == interfaceId */\n      swap3\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2755:2966  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/ContractMeta.sol\":693:711  _contractVersion() */\n    tag_117:\n        /* \"contracts/utils/ContractMeta.sol\":686:711  return _contractVersion() */\n      swap1\n      pop\n        /* \"contracts/utils/ContractMeta.sol\":611:719  function contractVersionBytes() external pure returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/vaults/VaultGovernance.sol\":3610:4261  function stageInternalParams(InternalParams memory newParams) external {... */\n    tag_41:\n        /* \"contracts/vaults/VaultGovernance.sol\":3692:3715  _requireProtocolAdmin() */\n      tag_120\n        /* \"contracts/vaults/VaultGovernance.sol\":3692:3713  _requireProtocolAdmin */\n      tag_121\n        /* \"contracts/vaults/VaultGovernance.sol\":3692:3715  _requireProtocolAdmin() */\n      jump\t// in\n    tag_120:\n        /* \"contracts/vaults/VaultGovernance.sol\":3742:3770  newParams.protocolGovernance */\n      dup1\n      mload\n        /* \"contracts/vaults/VaultGovernance.sol\":3787:3817  ExceptionsLibrary.ADDRESS_ZERO */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x02\n      dup2\n      mstore\n      shl(0xf1, 0x20ad)\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/vaults/VaultGovernance.sol\":3734:3785  address(newParams.protocolGovernance) != address(0) */\n      and\n        /* \"contracts/vaults/VaultGovernance.sol\":3726:3818  require(address(newParams.protocolGovernance) != address(0), ExceptionsLibrary.ADDRESS_ZERO) */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":3876:3877  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/vaults/VaultGovernance.sol\":3837:3878  address(newParams.registry) != address(0) */\n      and\n        /* \"contracts/vaults/VaultGovernance.sol\":3845:3854  newParams */\n      dup2\n        /* \"contracts/vaults/VaultGovernance.sol\":3845:3863  newParams.registry */\n      0x20\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/vaults/VaultGovernance.sol\":3837:3878  address(newParams.registry) != address(0) */\n      and\n      eq\n      iszero\n        /* \"contracts/vaults/VaultGovernance.sol\":3880:3910  ExceptionsLibrary.ADDRESS_ZERO */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf1, 0x20ad)\n      dup2\n      mstore\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":3829:3911  require(address(newParams.registry) != address(0), ExceptionsLibrary.ADDRESS_ZERO) */\n      swap1\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_124:\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":3938:3957  newParams.singleton */\n      0x40\n      dup1\n      dup3\n      add\n      mload\n        /* \"contracts/vaults/VaultGovernance.sol\":3974:4004  ExceptionsLibrary.ADDRESS_ZERO */\n      dup2\n      mload\n      dup1\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n      0x02\n      dup3\n      mstore\n      shl(0xf1, 0x20ad)\n      0x20\n      dup4\n      add\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/vaults/VaultGovernance.sol\":3930:3972  address(newParams.singleton) != address(0) */\n      and\n        /* \"contracts/vaults/VaultGovernance.sol\":3922:4005  require(address(newParams.singleton) != address(0), ExceptionsLibrary.ADDRESS_ZERO) */\n      tag_126\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_126:\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":4016:4049  _stagedInternalParams = newParams */\n      dup1\n      mload\n        /* \"contracts/vaults/VaultGovernance.sol\":4016:4037  _stagedInternalParams */\n      0x03\n        /* \"contracts/vaults/VaultGovernance.sol\":4016:4049  _stagedInternalParams = newParams */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      or\n      swap1\n      swap2\n      sstore\n      0x20\n      dup1\n      dup5\n      add\n      mload\n      0x04\n      dup1\n      sload\n      dup5\n      and\n      swap2\n      dup6\n      and\n      swap2\n      swap1\n      swap2\n      or\n      dup2\n      sstore\n      0x40\n      dup1\n      dup7\n      add\n      mload\n      0x05\n      dup1\n      sload\n      swap1\n      swap6\n      and\n      swap1\n      dup7\n      and\n      or\n      swap1\n      swap4\n      sstore\n      0x00\n        /* \"contracts/vaults/VaultGovernance.sol\":4105:4139  _internalParams.protocolGovernance */\n      sload\n        /* \"contracts/vaults/VaultGovernance.sol\":4105:4157  _internalParams.protocolGovernance.governanceDelay() */\n      dup4\n      mload\n      shl(0xe0, 0xbba32939)\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"contracts/vaults/VaultGovernance.sol\":4105:4139  _internalParams.protocolGovernance */\n      swap5\n      and\n      swap4\n        /* \"contracts/vaults/VaultGovernance.sol\":4105:4155  _internalParams.protocolGovernance.governanceDelay */\n      0xbba32939\n      swap4\n        /* \"contracts/vaults/VaultGovernance.sol\":4105:4157  _internalParams.protocolGovernance.governanceDelay() */\n      dup1\n      dup4\n      add\n      swap4\n        /* \"contracts/vaults/VaultGovernance.sol\":4016:4049  _stagedInternalParams = newParams */\n      swap3\n        /* \"contracts/vaults/VaultGovernance.sol\":4105:4157  _internalParams.protocolGovernance.governanceDelay() */\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/vaults/VaultGovernance.sol\":4105:4139  _internalParams.protocolGovernance */\n      dup7\n        /* \"contracts/vaults/VaultGovernance.sol\":4105:4157  _internalParams.protocolGovernance.governanceDelay() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_130\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_131\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n        /* \"contracts/vaults/VaultGovernance.sol\":4087:4157  block.timestamp + _internalParams.protocolGovernance.governanceDelay() */\n      tag_133\n      swap1\n        /* \"contracts/vaults/VaultGovernance.sol\":4087:4102  block.timestamp */\n      timestamp\n        /* \"contracts/vaults/VaultGovernance.sol\":4087:4157  block.timestamp + _internalParams.protocolGovernance.governanceDelay() */\n      tag_134\n      jump\t// in\n    tag_133:\n        /* \"contracts/vaults/VaultGovernance.sol\":4060:4084  _internalParamsTimestamp */\n      0x06\n        /* \"contracts/vaults/VaultGovernance.sol\":4060:4157  _internalParamsTimestamp = block.timestamp + _internalParams.protocolGovernance.governanceDelay() */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/vaults/VaultGovernance.sol\":4173:4253  StagedInternalParams(tx.origin, msg.sender, newParams, _internalParamsTimestamp) */\n      mload(0x40)\n        /* \"contracts/vaults/VaultGovernance.sol\":4205:4215  msg.sender */\n      caller\n      swap2\n        /* \"contracts/vaults/VaultGovernance.sol\":4194:4203  tx.origin */\n      origin\n      swap2\n        /* \"contracts/vaults/VaultGovernance.sol\":4173:4253  StagedInternalParams(tx.origin, msg.sender, newParams, _internalParamsTimestamp) */\n      0x0887cab3184f7c02b16978ab31f8acee05979f59fc3da6abe5bf71105ec3179d\n      swap2\n      tag_135\n      swap2\n        /* \"contracts/vaults/VaultGovernance.sol\":4217:4226  newParams */\n      dup7\n      swap2\n        /* \"contracts/vaults/VaultGovernance.sol\":4060:4157  _internalParamsTimestamp = block.timestamp + _internalParams.protocolGovernance.governanceDelay() */\n      swap1\n        /* \"contracts/vaults/VaultGovernance.sol\":4173:4253  StagedInternalParams(tx.origin, msg.sender, newParams, _internalParamsTimestamp) */\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/vaults/VaultGovernance.sol\":3610:4261  function stageInternalParams(InternalParams memory newParams) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4322:4633  function commitDelayedStrategyParams(uint256 nft) external {... */\n    tag_45:\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4392:4425  _commitDelayedStrategyParams(nft) */\n      tag_138\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4421:4424  nft */\n      dup2\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4392:4420  _commitDelayedStrategyParams */\n      tag_139\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4392:4425  _commitDelayedStrategyParams(nft) */\n      jump\t// in\n    tag_138:\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4561:4588  _delayedStrategyParams[nft] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4561:4583  _delayedStrategyParams */\n      0x07\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4561:4588  _delayedStrategyParams[nft] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4550:4614  abi.decode(_delayedStrategyParams[nft], (DelayedStrategyParams)) */\n      dup1\n      sload\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4532:4535  nft */\n      dup3\n      swap2\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4507:4517  msg.sender */\n      caller\n      swap2\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4483:4492  tx.origin */\n      origin\n      swap2\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4441:4625  CommitDelayedStrategyParams(... */\n      0xa363920f84c4a3e8f1fbb02a2f8b5f0d7438886cb05a7d98882af9bd66d16426\n      swap2\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4550:4614  abi.decode(_delayedStrategyParams[nft], (DelayedStrategyParams)) */\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_142\n      swap1\n      tag_141\n      jump\t// in\n    tag_142:\n      dup1\n      iszero\n      tag_143\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_144\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_143)\n    tag_144:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_145:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_145\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_143:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_146\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4441:4625  CommitDelayedStrategyParams(... */\n      mload(0x40)\n        /* \"#utility.yul\":3074:3087   */\n      swap1\n      mload\n        /* \"#utility.yul\":3089:3099   */\n      0xffffffff\n        /* \"#utility.yul\":3070:3100   */\n      and\n        /* \"#utility.yul\":3052:3101   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3040:3042   */\n      0x20\n        /* \"#utility.yul\":3025:3043   */\n      add\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4441:4625  CommitDelayedStrategyParams(... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4322:4633  function commitDelayedStrategyParams(uint256 nft) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3905:4271  function stageDelayedStrategyParams(uint256 nft, DelayedStrategyParams calldata params) external {... */\n    tag_56:\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4047:4048  1 */\n      0x01\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4021:4044  params.safetyIndicesSet */\n      tag_154\n      0x20\n      dup4\n      add\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4021:4027  params */\n      dup4\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4021:4044  params.safetyIndicesSet */\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4021:4048  params.safetyIndicesSet > 1 */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4050:4083  ExceptionsLibrary.LIMIT_UNDERFLOW */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xe0, 0x4c494d55)\n      dup2\n      mstore\n      pop\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4013:4084  require(params.safetyIndicesSet > 1, ExceptionsLibrary.LIMIT_UNDERFLOW) */\n      swap1\n      tag_156\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_156:\n      pop\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4095:4147  _stageDelayedStrategyParams(nft, abi.encode(params)) */\n      tag_158\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4123:4126  nft */\n      dup3\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4139:4145  params */\n      dup3\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4128:4146  abi.encode(params) */\n      add(0x20, mload(0x40))\n      tag_159\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4095:4122  _stageDelayedStrategyParams */\n      tag_161\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4095:4147  _stageDelayedStrategyParams(nft, abi.encode(params)) */\n      jump\t// in\n    tag_158:\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4226:4262  _delayedStrategyParamsTimestamp[nft] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4226:4257  _delayedStrategyParamsTimestamp */\n      0x09\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4226:4262  _delayedStrategyParamsTimestamp[nft] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n      sload\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4163:4263  StageDelayedStrategyParams(tx.origin, msg.sender, nft, params, _delayedStrategyParamsTimestamp[nft]) */\n      swap1\n      mload\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4213:4216  nft */\n      dup4\n      swap2\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4201:4211  msg.sender */\n      caller\n      swap2\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4190:4199  tx.origin */\n      origin\n      swap2\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4163:4263  StageDelayedStrategyParams(tx.origin, msg.sender, nft, params, _delayedStrategyParamsTimestamp[nft]) */\n      0x4cceb02b6b172e9c19155fccc4d799437a0d50ad922ea9f0f41b1cb3a17b12e8\n      swap2\n      tag_162\n      swap2\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4218:4224  params */\n      dup8\n      swap2\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4163:4263  StageDelayedStrategyParams(tx.origin, msg.sender, nft, params, _delayedStrategyParamsTimestamp[nft]) */\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3905:4271  function stageDelayedStrategyParams(uint256 nft, DelayedStrategyParams calldata params) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2006:2344  function stagedDelayedStrategyParams(uint256 nft) external view returns (DelayedStrategyParams memory) {... */\n    tag_63:\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2124:2157  _stagedDelayedStrategyParams[nft] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2124:2152  _stagedDelayedStrategyParams */\n      0x08\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2124:2157  _stagedDelayedStrategyParams[nft] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2124:2164  _stagedDelayedStrategyParams[nft].length */\n      dup1\n      sload\n      tag_168\n      swap1\n      tag_141\n      jump\t// in\n    tag_168:\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2124:2169  _stagedDelayedStrategyParams[nft].length == 0 */\n      iszero\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2120:2249  if (_stagedDelayedStrategyParams[nft].length == 0) {... */\n      iszero\n      swap1\n      pop\n      tag_169\n      jumpi\n      pop\n      pop\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2193:2237  DelayedStrategyParams({safetyIndicesSet: 0}) */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2006:2344  function stagedDelayedStrategyParams(uint256 nft) external view returns (DelayedStrategyParams memory) {... */\n      jump\t// out\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2120:2249  if (_stagedDelayedStrategyParams[nft].length == 0) {... */\n    tag_169:\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2277:2310  _stagedDelayedStrategyParams[nft] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2277:2305  _stagedDelayedStrategyParams */\n      0x08\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2277:2310  _stagedDelayedStrategyParams[nft] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2266:2336  abi.decode(_stagedDelayedStrategyParams[nft], (DelayedStrategyParams)) */\n      dup1\n      sload\n      tag_170\n      swap1\n      tag_141\n      jump\t// in\n    tag_170:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_171\n      swap1\n      tag_141\n      jump\t// in\n    tag_171:\n      dup1\n      iszero\n      tag_172\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_173\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_172)\n    tag_173:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_174:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_174\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_172:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4684:5165  function createVault(... */\n    tag_69:\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4848:4865  IUniV3Vault vault */\n      0x00\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4867:4878  uint256 nft */\n      dup1\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4891:4904  address vaddr */\n      0x00\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4930:4950  _createVault(owner_) */\n      tag_177\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4943:4949  owner_ */\n      dup7\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4930:4942  _createVault */\n      tag_178\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4930:4950  _createVault(owner_) */\n      jump\t// in\n    tag_177:\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4998:5053  vault.initialize(nft, vaultTokens_, fee_, uniV3Helper_) */\n      mload(0x40)\n      shl(0xe0, 0x1912128b)\n      dup2\n      mstore\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4915:4950  (vaddr, nft) = _createVault(owner_) */\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      dup4\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4998:5014  vault.initialize */\n      dup3\n      and\n      swap1\n      0x1912128b\n      swap1\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4998:5053  vault.initialize(nft, vaultTokens_, fee_, uniV3Helper_) */\n      tag_179\n      swap1\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4915:4950  (vaddr, nft) = _createVault(owner_) */\n      dup6\n      swap1\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":5020:5032  vaultTokens_ */\n      dup12\n      swap1\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":5034:5038  fee_ */\n      dup11\n      swap1\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":5040:5052  uniV3Helper_ */\n      dup11\n      swap1\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4998:5053  vault.initialize(nft, vaultTokens_, fee_, uniV3Helper_) */\n      0x04\n      add\n      tag_180\n      jump\t// in\n    tag_179:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_181\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_181:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_183\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_183:\n      pop\n      pop\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":5120:5136  abi.encode(fee_) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":10895:10903   */\n      0xffffff\n        /* \"#utility.yul\":10883:10904   */\n      dup10\n      and\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":5120:5136  abi.encode(fee_) */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":10865:10905   */\n      mstore\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":5094:5104  msg.sender */\n      caller\n      swap4\n      pop\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":5083:5092  tx.origin */\n      origin\n      swap3\n      pop\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":5069:5157  DeployedVault(tx.origin, msg.sender, vaultTokens_, abi.encode(fee_), owner_, vaddr, nft) */\n      0x8a4513c05d15df8ece912856923273e166e39f5c9c2b43d2b38594023494a0e0\n      swap2\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":5106:5118  vaultTokens_ */\n      dup12\n      swap2\n        /* \"#utility.yul\":10838:10856   */\n      add\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":5120:5136  abi.encode(fee_) */\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      mstore\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":5069:5157  DeployedVault(tx.origin, msg.sender, vaultTokens_, abi.encode(fee_), owner_, vaddr, nft) */\n      tag_186\n      swap3\n      swap2\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":5138:5144  owner_ */\n      dup13\n      swap1\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":5146:5151  vaddr */\n      dup9\n      swap1\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":5153:5156  nft */\n      dup11\n      swap1\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":5069:5157  DeployedVault(tx.origin, msg.sender, vaultTokens_, abi.encode(fee_), owner_, vaddr, nft) */\n      tag_187\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4880:5165  {... */\n      pop\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":4684:5165  function createVault(... */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/ContractMeta.sol\":237:358  function contractName() external pure returns (string memory) {... */\n    tag_77:\n        /* \"contracts/utils/ContractMeta.sol\":284:297  string memory */\n      0x60\n        /* \"contracts/utils/ContractMeta.sol\":317:350  _bytes32ToString(_contractName()) */\n      tag_117\n      shl(0x60, 0x556e6956335661756c74476f7665726e616e6365)\n        /* \"contracts/utils/ContractMeta.sol\":317:333  _bytes32ToString */\n      tag_192\n        /* \"contracts/utils/ContractMeta.sol\":317:350  _bytes32ToString(_contractName()) */\n      jump\t// in\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2395:2718  function delayedStrategyParams(uint256 nft) external view returns (DelayedStrategyParams memory) {... */\n    tag_89:\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2507:2534  _delayedStrategyParams[nft] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2507:2529  _delayedStrategyParams */\n      0x07\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2507:2534  _delayedStrategyParams[nft] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2507:2541  _delayedStrategyParams[nft].length */\n      dup1\n      sload\n      tag_200\n      swap1\n      tag_141\n      jump\t// in\n    tag_200:\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2507:2546  _delayedStrategyParams[nft].length == 0 */\n      iszero\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2503:2629  if (_delayedStrategyParams[nft].length == 0) {... */\n      iszero\n      swap1\n      pop\n      tag_201\n      jumpi\n      pop\n      pop\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2570:2617  DelayedStrategyParams({safetyIndicesSet: 0x2A}) */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2611:2615  0x2A */\n      0x2a\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2570:2617  DelayedStrategyParams({safetyIndicesSet: 0x2A}) */\n      dup2\n      mstore\n      swap1\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2395:2718  function delayedStrategyParams(uint256 nft) external view returns (DelayedStrategyParams memory) {... */\n      jump\t// out\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2503:2629  if (_delayedStrategyParams[nft].length == 0) {... */\n    tag_201:\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2657:2684  _delayedStrategyParams[nft] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2657:2679  _delayedStrategyParams */\n      0x07\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2657:2684  _delayedStrategyParams[nft] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":2646:2710  abi.decode(_delayedStrategyParams[nft], (DelayedStrategyParams)) */\n      dup1\n      sload\n      tag_170\n      swap1\n      tag_141\n      jump\t// in\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3580:3854  function commitDelayedProtocolParams() external {... */\n    tag_92:\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3639:3669  _commitDelayedProtocolParams() */\n      tag_209\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3639:3667  _commitDelayedProtocolParams */\n      tag_210\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3639:3669  _commitDelayedProtocolParams() */\n      jump\t// in\n    tag_209:\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3751:3761  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3685:3846  CommitDelayedProtocolParams(... */\n      and\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3727:3736  tx.origin */\n      origin\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3685:3846  CommitDelayedProtocolParams(... */\n      and\n      0xb57a42e9f64dfc9c6b9e412ea001a45c0e4d3f26c8d160381a418ff92269d052\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3787:3809  _delayedProtocolParams */\n      0x0d\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3776:3835  abi.decode(_delayedProtocolParams, (DelayedProtocolParams)) */\n      dup1\n      sload\n      tag_211\n      swap1\n      tag_141\n      jump\t// in\n    tag_211:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_212\n      swap1\n      tag_141\n      jump\t// in\n    tag_212:\n      dup1\n      iszero\n      tag_213\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_214\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_213)\n    tag_214:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_215:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_215\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_213:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_216\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_216:\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3685:3846  CommitDelayedProtocolParams(... */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6758:6771   */\n      dup3\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6754:6776   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":6736:6777   */\n      dup3\n      mstore\n        /* \"#utility.yul\":6837:6841   */\n      0x20\n        /* \"#utility.yul\":6825:6842   */\n      swap4\n      dup5\n      add\n        /* \"#utility.yul\":6819:6843   */\n      mload\n        /* \"#utility.yul\":6815:6848   */\n      and\n        /* \"#utility.yul\":6793:6813   */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":6786:6849   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":6671:6689   */\n      add\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3685:3846  CommitDelayedProtocolParams(... */\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3580:3854  function commitDelayedProtocolParams() external {... */\n      jump\t// out\n        /* \"contracts/utils/ContractMeta.sol\":476:603  function contractVersion() external pure returns (string memory) {... */\n    tag_94:\n        /* \"contracts/utils/ContractMeta.sol\":526:539  string memory */\n      0x60\n        /* \"contracts/utils/ContractMeta.sol\":559:595  _bytes32ToString(_contractVersion()) */\n      tag_117\n      shl(0xdc, 0x0312e312e3)\n        /* \"contracts/utils/ContractMeta.sol\":317:333  _bytes32ToString */\n      tag_192\n        /* \"contracts/utils/ContractMeta.sol\":317:350  _bytes32ToString(_contractName()) */\n      jump\t// in\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3088:3529  function stageDelayedProtocolParams(DelayedProtocolParams calldata params) external {... */\n    tag_99:\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3234:3235  0 */\n      0x00\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3199:3221  params.positionManager */\n      tag_223\n      0x20\n      dup4\n      add\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3199:3205  params */\n      dup4\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3199:3221  params.positionManager */\n      tag_224\n      jump\t// in\n    tag_223:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3191:3236  address(params.positionManager) != address(0) */\n      and\n      eq\n      iszero\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3238:3268  ExceptionsLibrary.ADDRESS_ZERO */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf1, 0x20ad)\n      dup2\n      mstore\n      pop\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3183:3269  require(address(params.positionManager) != address(0), ExceptionsLibrary.ADDRESS_ZERO) */\n      swap1\n      tag_225\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_225:\n      pop\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3322:3323  0 */\n      0x00\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3296:3309  params.oracle */\n      tag_227\n      0x40\n      dup4\n      add\n      0x20\n      dup5\n      add\n      tag_224\n      jump\t// in\n    tag_227:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3288:3324  address(params.oracle) != address(0) */\n      and\n      eq\n      iszero\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3326:3356  ExceptionsLibrary.ADDRESS_ZERO */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf1, 0x20ad)\n      dup2\n      mstore\n      pop\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3280:3357  require(address(params.oracle) != address(0), ExceptionsLibrary.ADDRESS_ZERO) */\n      swap1\n      tag_229\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_229:\n      pop\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3368:3415  _stageDelayedProtocolParams(abi.encode(params)) */\n      tag_231\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3407:3413  params */\n      dup2\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3396:3414  abi.encode(params) */\n      add(0x20, mload(0x40))\n      tag_232\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3368:3395  _stageDelayedProtocolParams */\n      tag_234\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3368:3415  _stageDelayedProtocolParams(abi.encode(params)) */\n      jump\t// in\n    tag_231:\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3489:3520  _delayedProtocolParamsTimestamp */\n      sload(0x0f)\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3431:3521  StageDelayedProtocolParams(tx.origin, msg.sender, params, _delayedProtocolParamsTimestamp) */\n      mload(0x40)\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3469:3479  msg.sender */\n      caller\n      swap2\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3458:3467  tx.origin */\n      origin\n      swap2\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3431:3521  StageDelayedProtocolParams(tx.origin, msg.sender, params, _delayedProtocolParamsTimestamp) */\n      0x88e619a5dce560314fdd4895b08c256978617047a99ffc847d45400df1f377a7\n      swap2\n      tag_135\n      swap2\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3481:3487  params */\n      dup7\n      swap2\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3489:3520  _delayedProtocolParamsTimestamp */\n      swap1\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":3431:3521  StageDelayedProtocolParams(tx.origin, msg.sender, params, _delayedProtocolParamsTimestamp) */\n      tag_236\n      jump\t// in\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":1494:1955  function stagedDelayedProtocolParams() external view returns (DelayedProtocolParams memory) {... */\n    tag_101:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":1601:1629  _stagedDelayedProtocolParams */\n      0x0e\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":1601:1636  _stagedDelayedProtocolParams.length */\n      dup1\n      sload\n      tag_240\n      swap1\n      tag_141\n      jump\t// in\n    tag_240:\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":1601:1641  _stagedDelayedProtocolParams.length == 0 */\n      iszero\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":1597:1865  if (_stagedDelayedProtocolParams.length == 0) {... */\n      iszero\n      swap1\n      pop\n      tag_241\n      jumpi\n      pop\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":1682:1853  DelayedProtocolParams({... */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":1494:1955  function stagedDelayedProtocolParams() external view returns (DelayedProtocolParams memory) {... */\n      jump\t// out\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":1597:1865  if (_stagedDelayedProtocolParams.length == 0) {... */\n    tag_241:\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":1893:1921  _stagedDelayedProtocolParams */\n      0x0e\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":1882:1947  abi.decode(_stagedDelayedProtocolParams, (DelayedProtocolParams)) */\n      dup1\n      sload\n      tag_242\n      swap1\n      tag_141\n      jump\t// in\n    tag_242:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_243\n      swap1\n      tag_141\n      jump\t// in\n    tag_243:\n      dup1\n      iszero\n      tag_244\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_245\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_244)\n    tag_245:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_246:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_246\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_244:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_117\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":1208:1443  function delayedProtocolParams() public view returns (DelayedProtocolParams memory) {... */\n    tag_105:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":1387:1409  _delayedProtocolParams */\n      0x0d\n        /* \"contracts/vaults/UniV3VaultGovernance.sol\":1376:1435  abi.decode(_delayedProtocolParams, (DelayedProtocolParams)) */\n      dup1\n      sload\n      tag_242\n      swap1\n      tag_141\n      jump\t// in\n        /* \"contracts/vaults/VaultGovernance.sol\":4307:4764  function commitInternalParams() external {... */\n    tag_108:\n        /* \"contracts/vaults/VaultGovernance.sol\":4359:4382  _requireProtocolAdmin() */\n      tag_257\n        /* \"contracts/vaults/VaultGovernance.sol\":4359:4380  _requireProtocolAdmin */\n      tag_121\n        /* \"contracts/vaults/VaultGovernance.sol\":4359:4382  _requireProtocolAdmin() */\n      jump\t// in\n    tag_257:\n        /* \"contracts/vaults/VaultGovernance.sol\":4401:4425  _internalParamsTimestamp */\n      sload(0x06)\n        /* \"contracts/vaults/VaultGovernance.sol\":4432:4454  ExceptionsLibrary.NULL */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x04\n      dup2\n      mstore\n      shl(0xe2, 0x13955313)\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n        /* \"contracts/vaults/VaultGovernance.sol\":4393:4455  require(_internalParamsTimestamp != 0, ExceptionsLibrary.NULL) */\n      tag_258\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_258:\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":4493:4517  _internalParamsTimestamp */\n      sload(0x06)\n        /* \"contracts/vaults/VaultGovernance.sol\":4474:4489  block.timestamp */\n      timestamp\n        /* \"contracts/vaults/VaultGovernance.sol\":4474:4517  block.timestamp >= _internalParamsTimestamp */\n      lt\n      iszero\n        /* \"contracts/vaults/VaultGovernance.sol\":4519:4546  ExceptionsLibrary.TIMESTAMP */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x5453)\n      dup2\n      mstore\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":4466:4547  require(block.timestamp >= _internalParamsTimestamp, ExceptionsLibrary.TIMESTAMP) */\n      swap1\n      tag_260\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_260:\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":4576:4597  _stagedInternalParams */\n      0x03\n        /* \"contracts/vaults/VaultGovernance.sol\":4558:4597  _internalParams = _stagedInternalParams */\n      dup1\n      sload\n        /* \"contracts/vaults/VaultGovernance.sol\":4558:4573  _internalParams */\n      0x00\n        /* \"contracts/vaults/VaultGovernance.sol\":4558:4597  _internalParams = _stagedInternalParams */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup5\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n      0x04\n      dup1\n      sload\n      0x01\n      dup1\n      sload\n      dup3\n      dup7\n      and\n      swap1\n      dup8\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n      0x05\n      dup1\n      sload\n      0x02\n      dup1\n      sload\n      swap8\n      dup3\n      and\n      swap8\n      dup10\n      and\n      dup9\n      or\n      swap1\n      sstore\n        /* \"contracts/vaults/VaultGovernance.sol\":4615:4639  _internalParamsTimestamp */\n      0x06\n        /* \"contracts/vaults/VaultGovernance.sol\":4608:4639  delete _internalParamsTimestamp */\n      swap9\n      swap1\n      swap9\n      sstore\n        /* \"contracts/vaults/VaultGovernance.sol\":4650:4678  delete _stagedInternalParams */\n      swap8\n      dup7\n      and\n      swap1\n      swap9\n      sstore\n      dup5\n      and\n      swap1\n      sstore\n      swap3\n      swap1\n      swap2\n      and\n      swap1\n      swap3\n      sstore\n        /* \"contracts/vaults/VaultGovernance.sol\":4694:4756  CommitedInternalParams(tx.origin, msg.sender, _internalParams) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":14272:14313   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":14344:14348   */\n      0x20\n        /* \"#utility.yul\":14329:14349   */\n      dup3\n      add\n        /* \"#utility.yul\":14322:14385   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":14401:14421   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":14394:14457   */\n      mstore\n        /* \"contracts/vaults/VaultGovernance.sol\":4728:4738  msg.sender */\n      caller\n      swap1\n        /* \"contracts/vaults/VaultGovernance.sol\":4717:4726  tx.origin */\n      origin\n      swap1\n        /* \"contracts/vaults/VaultGovernance.sol\":4694:4756  CommitedInternalParams(tx.origin, msg.sender, _internalParams) */\n      0xef3e4bc9725fa684957d7de03c6dcd01078ee86cf78ceef25c5f8346df69cc99\n      swap1\n        /* \"#utility.yul\":14222:14224   */\n      0x60\n        /* \"#utility.yul\":14207:14225   */\n      add\n        /* \"contracts/vaults/VaultGovernance.sol\":4694:4756  CommitedInternalParams(tx.origin, msg.sender, _internalParams) */\n      tag_218\n        /* \"#utility.yul\":14027:14463   */\n      jump\n        /* \"contracts/vaults/VaultGovernance.sol\":3279:3493  function supportsInterface(bytes4 interfaceID) public view virtual override(ERC165) returns (bool) {... */\n    tag_114:\n        /* \"contracts/vaults/VaultGovernance.sol\":3372:3376  bool */\n      0x00\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"contracts/vaults/VaultGovernance.sol\":3396:3485  super.supportsInterface(interfaceID) || interfaceID == type(IVaultGovernance).interfaceId */\n      dup1\n      tag_115\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/vaults/VaultGovernance.sol\":3436:3485  interfaceID == type(IVaultGovernance).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0xeffda0f5)\n      eq\n        /* \"contracts/vaults/VaultGovernance.sol\":3389:3485  return super.supportsInterface(interfaceID) || interfaceID == type(IVaultGovernance).interfaceId */\n      swap3\n        /* \"contracts/vaults/VaultGovernance.sol\":3279:3493  function supportsInterface(bytes4 interfaceID) public view virtual override(ERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/vaults/VaultGovernance.sol\":5207:5365  function _requireProtocolAdmin() internal view {... */\n    tag_121:\n        /* \"contracts/vaults/VaultGovernance.sol\":5273:5288  _internalParams */\n      0x00\n        /* \"contracts/vaults/VaultGovernance.sol\":5273:5307  _internalParams.protocolGovernance */\n      sload\n        /* \"contracts/vaults/VaultGovernance.sol\":5273:5327  _internalParams.protocolGovernance.isAdmin(msg.sender) */\n      mload(0x40)\n      shl(0xe2, 0x0935e01b)\n      dup2\n      mstore\n        /* \"contracts/vaults/VaultGovernance.sol\":5316:5326  msg.sender */\n      caller\n        /* \"contracts/vaults/VaultGovernance.sol\":5273:5327  _internalParams.protocolGovernance.isAdmin(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14614:14665   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/vaults/VaultGovernance.sol\":5273:5307  _internalParams.protocolGovernance */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/vaults/VaultGovernance.sol\":5273:5315  _internalParams.protocolGovernance.isAdmin */\n      0x24d7806c\n      swap1\n        /* \"#utility.yul\":14587:14605   */\n      0x24\n      add\n        /* \"contracts/vaults/VaultGovernance.sol\":5273:5327  _internalParams.protocolGovernance.isAdmin(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_273\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_273:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_275\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_275:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_276\n      swap2\n      swap1\n      tag_277\n      jump\t// in\n    tag_276:\n        /* \"contracts/vaults/VaultGovernance.sol\":5329:5356  ExceptionsLibrary.FORBIDDEN */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xe9, 0x232921)\n      dup2\n      mstore\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":5265:5357  require(_internalParams.protocolGovernance.isAdmin(msg.sender), ExceptionsLibrary.FORBIDDEN) */\n      swap1\n      tag_278\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_278:\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":5207:5365  function _requireProtocolAdmin() internal view {... */\n      jump\t// out\n        /* \"contracts/vaults/VaultGovernance.sol\":6948:7511  function _commitDelayedStrategyParams(uint256 nft) internal {... */\n    tag_139:\n        /* \"contracts/vaults/VaultGovernance.sol\":7019:7047  _requireAtLeastStrategy(nft) */\n      tag_281\n        /* \"contracts/vaults/VaultGovernance.sol\":7043:7046  nft */\n      dup2\n        /* \"contracts/vaults/VaultGovernance.sol\":7019:7042  _requireAtLeastStrategy */\n      tag_282\n        /* \"contracts/vaults/VaultGovernance.sol\":7019:7047  _requireAtLeastStrategy(nft) */\n      jump\t// in\n    tag_281:\n        /* \"contracts/vaults/VaultGovernance.sol\":7058:7100  uint256 thisDelayedStrategyParamsTimestamp */\n      0x00\n        /* \"contracts/vaults/VaultGovernance.sol\":7103:7139  _delayedStrategyParamsTimestamp[nft] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/vaults/VaultGovernance.sol\":7103:7134  _delayedStrategyParamsTimestamp */\n      0x09\n        /* \"contracts/vaults/VaultGovernance.sol\":7103:7139  _delayedStrategyParamsTimestamp[nft] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n      sload\n        /* \"contracts/vaults/VaultGovernance.sol\":7199:7221  ExceptionsLibrary.NULL */\n      dup3\n      mload\n      dup1\n      dup5\n      add\n      swap1\n      swap4\n      mstore\n      0x04\n      dup4\n      mstore\n      shl(0xe2, 0x13955313)\n      swap2\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/vaults/VaultGovernance.sol\":7103:7139  _delayedStrategyParamsTimestamp[nft] */\n      swap1\n        /* \"contracts/vaults/VaultGovernance.sol\":7158:7197  thisDelayedStrategyParamsTimestamp != 0 */\n      dup2\n        /* \"contracts/vaults/VaultGovernance.sol\":7150:7222  require(thisDelayedStrategyParamsTimestamp != 0, ExceptionsLibrary.NULL) */\n      tag_283\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_283:\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":7260:7294  thisDelayedStrategyParamsTimestamp */\n      dup1\n        /* \"contracts/vaults/VaultGovernance.sol\":7241:7256  block.timestamp */\n      timestamp\n        /* \"contracts/vaults/VaultGovernance.sol\":7241:7294  block.timestamp >= thisDelayedStrategyParamsTimestamp */\n      lt\n      iszero\n        /* \"contracts/vaults/VaultGovernance.sol\":7296:7323  ExceptionsLibrary.TIMESTAMP */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x5453)\n      dup2\n      mstore\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":7233:7324  require(block.timestamp >= thisDelayedStrategyParamsTimestamp, ExceptionsLibrary.TIMESTAMP) */\n      swap1\n      tag_285\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_285:\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":7365:7398  _stagedDelayedStrategyParams[nft] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/vaults/VaultGovernance.sol\":7365:7393  _stagedDelayedStrategyParams */\n      0x08\n        /* \"contracts/vaults/VaultGovernance.sol\":7365:7398  _stagedDelayedStrategyParams[nft] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/vaults/VaultGovernance.sol\":7335:7357  _delayedStrategyParams */\n      0x07\n        /* \"contracts/vaults/VaultGovernance.sol\":7335:7362  _delayedStrategyParams[nft] */\n      swap1\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/vaults/VaultGovernance.sol\":7335:7398  _delayedStrategyParams[nft] = _stagedDelayedStrategyParams[nft] */\n      dup2\n      sload\n        /* \"contracts/vaults/VaultGovernance.sol\":7335:7362  _delayedStrategyParams[nft] */\n      swap1\n      swap2\n        /* \"contracts/vaults/VaultGovernance.sol\":7365:7398  _stagedDelayedStrategyParams[nft] */\n      swap1\n        /* \"contracts/vaults/VaultGovernance.sol\":7335:7398  _delayedStrategyParams[nft] = _stagedDelayedStrategyParams[nft] */\n      tag_287\n      swap1\n      tag_141\n      jump\t// in\n    tag_287:\n      tag_288\n      swap3\n      swap2\n      swap1\n      tag_289\n      jump\t// in\n    tag_288:\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":7416:7449  _stagedDelayedStrategyParams[nft] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/vaults/VaultGovernance.sol\":7416:7444  _stagedDelayedStrategyParams */\n      0x08\n        /* \"contracts/vaults/VaultGovernance.sol\":7416:7449  _stagedDelayedStrategyParams[nft] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/vaults/VaultGovernance.sol\":7409:7449  delete _stagedDelayedStrategyParams[nft] */\n      tag_290\n      swap2\n      tag_291\n      jump\t// in\n    tag_290:\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":7467:7503  _delayedStrategyParamsTimestamp[nft] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/vaults/VaultGovernance.sol\":7467:7498  _delayedStrategyParamsTimestamp */\n      0x09\n        /* \"contracts/vaults/VaultGovernance.sol\":7467:7503  _delayedStrategyParamsTimestamp[nft] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/vaults/VaultGovernance.sol\":7460:7503  delete _delayedStrategyParamsTimestamp[nft] */\n      sstore\n        /* \"contracts/vaults/VaultGovernance.sol\":6948:7511  function _commitDelayedStrategyParams(uint256 nft) internal {... */\n      jump\t// out\n        /* \"contracts/vaults/VaultGovernance.sol\":6459:6892  function _stageDelayedStrategyParams(uint256 nft, bytes memory params) internal {... */\n    tag_161:\n        /* \"contracts/vaults/VaultGovernance.sol\":6550:6578  _requireAtLeastStrategy(nft) */\n      tag_294\n        /* \"contracts/vaults/VaultGovernance.sol\":6574:6577  nft */\n      dup3\n        /* \"contracts/vaults/VaultGovernance.sol\":6550:6573  _requireAtLeastStrategy */\n      tag_282\n        /* \"contracts/vaults/VaultGovernance.sol\":6550:6578  _requireAtLeastStrategy(nft) */\n      jump\t// in\n    tag_294:\n        /* \"contracts/vaults/VaultGovernance.sol\":6589:6622  _stagedDelayedStrategyParams[nft] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/vaults/VaultGovernance.sol\":6589:6617  _stagedDelayedStrategyParams */\n      0x08\n        /* \"contracts/vaults/VaultGovernance.sol\":6589:6622  _stagedDelayedStrategyParams[nft] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/vaults/VaultGovernance.sol\":6589:6631  _stagedDelayedStrategyParams[nft] = params */\n      dup3\n      mload\n      tag_295\n      swap3\n      dup5\n      add\n      swap1\n      tag_296\n      jump\t// in\n    tag_295:\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":6642:6661  uint256 delayFactor */\n      0x00\n        /* \"contracts/vaults/VaultGovernance.sol\":6664:6691  _delayedStrategyParams[nft] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/vaults/VaultGovernance.sol\":6664:6686  _delayedStrategyParams */\n      0x07\n        /* \"contracts/vaults/VaultGovernance.sol\":6664:6691  _delayedStrategyParams[nft] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/vaults/VaultGovernance.sol\":6664:6698  _delayedStrategyParams[nft].length */\n      dup1\n      sload\n      tag_297\n      swap1\n      tag_141\n      jump\t// in\n    tag_297:\n        /* \"contracts/vaults/VaultGovernance.sol\":6664:6703  _delayedStrategyParams[nft].length == 0 */\n      iszero\n      swap1\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":6664:6711  _delayedStrategyParams[nft].length == 0 ? 0 : 1 */\n      tag_298\n      jumpi\n        /* \"contracts/vaults/VaultGovernance.sol\":6710:6711  1 */\n      0x01\n        /* \"contracts/vaults/VaultGovernance.sol\":6664:6711  _delayedStrategyParams[nft].length == 0 ? 0 : 1 */\n      jump(tag_299)\n    tag_298:\n        /* \"contracts/vaults/VaultGovernance.sol\":6706:6707  0 */\n      0x00\n        /* \"contracts/vaults/VaultGovernance.sol\":6664:6711  _delayedStrategyParams[nft].length == 0 ? 0 : 1 */\n    tag_299:\n        /* \"contracts/vaults/VaultGovernance.sol\":6642:6711  uint256 delayFactor = _delayedStrategyParams[nft].length == 0 ? 0 : 1 */\n      0xff\n      and\n      swap1\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":6873:6884  delayFactor */\n      dup1\n        /* \"contracts/vaults/VaultGovernance.sol\":6805:6820  _internalParams */\n      0x00\n        /* \"contracts/vaults/VaultGovernance.sol\":6805:6839  _internalParams.protocolGovernance */\n      dup1\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/vaults/VaultGovernance.sol\":6805:6855  _internalParams.protocolGovernance.governanceDelay */\n      and\n      0xbba32939\n        /* \"contracts/vaults/VaultGovernance.sol\":6805:6857  _internalParams.protocolGovernance.governanceDelay() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_300\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_300:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_302\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_302:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_303\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_303:\n        /* \"contracts/vaults/VaultGovernance.sol\":6805:6884  _internalParams.protocolGovernance.governanceDelay() *... */\n      tag_304\n      swap2\n      swap1\n      tag_305\n      jump\t// in\n    tag_304:\n        /* \"contracts/vaults/VaultGovernance.sol\":6774:6884  block.timestamp +... */\n      tag_306\n      swap1\n        /* \"contracts/vaults/VaultGovernance.sol\":6774:6789  block.timestamp */\n      timestamp\n        /* \"contracts/vaults/VaultGovernance.sol\":6774:6884  block.timestamp +... */\n      tag_134\n      jump\t// in\n    tag_306:\n        /* \"contracts/vaults/VaultGovernance.sol\":6722:6758  _delayedStrategyParamsTimestamp[nft] */\n      0x00\n      swap4\n      dup5\n      mstore\n        /* \"contracts/vaults/VaultGovernance.sol\":6722:6753  _delayedStrategyParamsTimestamp */\n      0x09\n        /* \"contracts/vaults/VaultGovernance.sol\":6722:6758  _delayedStrategyParamsTimestamp[nft] */\n      0x20\n      mstore\n      0x40\n      swap1\n      swap4\n      keccak256\n        /* \"contracts/vaults/VaultGovernance.sol\":6722:6884  _delayedStrategyParamsTimestamp[nft] =... */\n      swap3\n      swap1\n      swap3\n      sstore\n      pop\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":6459:6892  function _stageDelayedStrategyParams(uint256 nft, bytes memory params) internal {... */\n      jump\t// out\n        /* \"contracts/vaults/VaultGovernance.sol\":5703:6335  function _createVault(address owner) internal returns (address vault, uint256 nft) {... */\n    tag_178:\n        /* \"contracts/vaults/VaultGovernance.sol\":5758:5771  address vault */\n      0x00\n        /* \"contracts/vaults/VaultGovernance.sol\":5858:5892  _internalParams.protocolGovernance */\n      dup1\n      sload\n        /* \"contracts/vaults/VaultGovernance.sol\":5926:6005  protocolGovernance.hasPermission(msg.sender, PermissionIdsLibrary.CREATE_VAULT) */\n      mload(0x40)\n      shl(0xe0, 0x63e85d2d)\n      dup2\n      mstore\n        /* \"contracts/vaults/VaultGovernance.sol\":5959:5969  msg.sender */\n      caller\n        /* \"contracts/vaults/VaultGovernance.sol\":5926:6005  protocolGovernance.hasPermission(msg.sender, PermissionIdsLibrary.CREATE_VAULT) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15301:15352   */\n      mstore\n        /* \"contracts/vaults/VaultGovernance.sol\":5858:5892  _internalParams.protocolGovernance */\n      0x01\n        /* \"#utility.yul\":15368:15386   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15361:15406   */\n      mstore\n        /* \"contracts/vaults/VaultGovernance.sol\":5758:5771  address vault */\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/vaults/VaultGovernance.sol\":5858:5892  _internalParams.protocolGovernance */\n      and\n      swap1\n      dup2\n      swap1\n        /* \"contracts/vaults/VaultGovernance.sol\":5926:5958  protocolGovernance.hasPermission */\n      0x63e85d2d\n      swap1\n        /* \"#utility.yul\":15274:15292   */\n      0x44\n      add\n        /* \"contracts/vaults/VaultGovernance.sol\":5926:6005  protocolGovernance.hasPermission(msg.sender, PermissionIdsLibrary.CREATE_VAULT) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_310\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_310:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_312\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_312:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_313\n      swap2\n      swap1\n      tag_277\n      jump\t// in\n    tag_313:\n        /* \"contracts/vaults/VaultGovernance.sol\":6020:6047  ExceptionsLibrary.FORBIDDEN */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xe9, 0x232921)\n      dup2\n      mstore\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":5904:6058  require(... */\n      swap1\n      tag_314\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_314:\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":6100:6124  _internalParams.registry */\n      sload(0x01)\n        /* \"contracts/vaults/VaultGovernance.sol\":6141:6168  vaultRegistry.vaultsCount() */\n      0x40\n      dup1\n      mload\n      shl(0xe3, 0x1112eee7)\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/vaults/VaultGovernance.sol\":6100:6124  _internalParams.registry */\n      swap1\n      swap3\n      and\n      swap2\n      dup3\n      swap2\n        /* \"contracts/vaults/VaultGovernance.sol\":6141:6166  vaultRegistry.vaultsCount */\n      0x88977738\n      swap2\n        /* \"contracts/vaults/VaultGovernance.sol\":6141:6168  vaultRegistry.vaultsCount() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/vaults/VaultGovernance.sol\":6100:6124  _internalParams.registry */\n      dup7\n        /* \"contracts/vaults/VaultGovernance.sol\":6141:6168  vaultRegistry.vaultsCount() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_316\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_316:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_318\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_318:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_319\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_319:\n        /* \"contracts/vaults/VaultGovernance.sol\":6141:6172  vaultRegistry.vaultsCount() + 1 */\n      tag_320\n      swap1\n        /* \"contracts/vaults/VaultGovernance.sol\":6171:6172  1 */\n      0x01\n        /* \"contracts/vaults/VaultGovernance.sol\":6141:6172  vaultRegistry.vaultsCount() + 1 */\n      tag_134\n      jump\t// in\n    tag_320:\n        /* \"contracts/vaults/VaultGovernance.sol\":6225:6250  _internalParams.singleton */\n      sload(0x02)\n        /* \"contracts/vaults/VaultGovernance.sol\":6135:6172  nft = vaultRegistry.vaultsCount() + 1 */\n      swap1\n      swap4\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":6191:6266  Clones.cloneDeterministic(address(_internalParams.singleton), bytes32(nft)) */\n      tag_321\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/vaults/VaultGovernance.sol\":6225:6250  _internalParams.singleton */\n      and\n        /* \"contracts/vaults/VaultGovernance.sol\":6135:6172  nft = vaultRegistry.vaultsCount() + 1 */\n      dup5\n        /* \"contracts/vaults/VaultGovernance.sol\":6191:6216  Clones.cloneDeterministic */\n      tag_322\n        /* \"contracts/vaults/VaultGovernance.sol\":6191:6266  Clones.cloneDeterministic(address(_internalParams.singleton), bytes32(nft)) */\n      jump\t// in\n    tag_321:\n        /* \"contracts/vaults/VaultGovernance.sol\":6277:6327  vaultRegistry.registerVault(address(vault), owner) */\n      mload(0x40)\n      shl(0xe0, 0x05c4fdf9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":15647:15662   */\n      dup1\n      dup4\n      and\n        /* \"contracts/vaults/VaultGovernance.sol\":6277:6327  vaultRegistry.registerVault(address(vault), owner) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":15629:15663   */\n      mstore\n        /* \"#utility.yul\":15699:15714   */\n      dup8\n      dup2\n      and\n        /* \"#utility.yul\":15679:15697   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":15672:15715   */\n      mstore\n        /* \"contracts/vaults/VaultGovernance.sol\":6183:6266  vault = Clones.cloneDeterministic(address(_internalParams.singleton), bytes32(nft)) */\n      swap2\n      swap6\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":6277:6304  vaultRegistry.registerVault */\n      swap1\n      dup3\n      and\n      swap1\n      0x05c4fdf9\n      swap1\n        /* \"#utility.yul\":15564:15582   */\n      0x44\n      add\n        /* \"contracts/vaults/VaultGovernance.sol\":6277:6327  vaultRegistry.registerVault(address(vault), owner) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_325\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_325:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_327\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_327:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_328\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_328:\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":5786:6335  {... */\n      pop\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":5703:6335  function _createVault(address owner) internal returns (address vault, uint256 nft) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/utils/ContractMeta.sol\":943:1337  function _bytes32ToString(bytes32 b) internal pure returns (string memory s) {... */\n    tag_192:\n        /* \"contracts/utils/ContractMeta.sol\":1035:1049  new string(32) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/utils/ContractMeta.sol\":1046:1048  32 */\n      0x20\n        /* \"contracts/utils/ContractMeta.sol\":1035:1049  new string(32) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"contracts/utils/ContractMeta.sol\":1003:1018  string memory s */\n      0x60\n      swap2\n        /* \"contracts/utils/ContractMeta.sol\":1035:1049  new string(32) */\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"contracts/utils/ContractMeta.sol\":1031:1049  s = new string(32) */\n      swap1\n      pop\n        /* \"contracts/utils/ContractMeta.sol\":1074:1076  32 */\n      0x20\n        /* \"contracts/utils/ContractMeta.sol\":1060:1071  uint256 len */\n      0x00\n        /* \"contracts/utils/ContractMeta.sol\":1087:1234  for (uint256 i = 0; i < 32; ++i) {... */\n    tag_334:\n        /* \"contracts/utils/ContractMeta.sol\":1111:1113  32 */\n      0x20\n        /* \"contracts/utils/ContractMeta.sol\":1107:1108  i */\n      dup2\n        /* \"contracts/utils/ContractMeta.sol\":1107:1113  i < 32 */\n      lt\n        /* \"contracts/utils/ContractMeta.sol\":1087:1234  for (uint256 i = 0; i < 32; ++i) {... */\n      iszero\n      tag_335\n      jumpi\n        /* \"contracts/utils/ContractMeta.sol\":1145:1146  b */\n      dup4\n        /* \"contracts/utils/ContractMeta.sol\":1147:1148  i */\n      dup2\n        /* \"contracts/utils/ContractMeta.sol\":1145:1149  b[i] */\n      0x20\n      dup2\n      lt\n      tag_338\n      jumpi\n      tag_338\n      tag_339\n      jump\t// in\n    tag_338:\n      byte\n        /* \"contracts/utils/ContractMeta.sol\":1135:1223  if (uint8(b[i]) == 0) {... */\n      tag_340\n      jumpi\n        /* \"contracts/utils/ContractMeta.sol\":1182:1183  i */\n      dup1\n        /* \"contracts/utils/ContractMeta.sol\":1176:1183  len = i */\n      swap2\n      pop\n        /* \"contracts/utils/ContractMeta.sol\":1202:1207  break */\n      jump(tag_335)\n        /* \"contracts/utils/ContractMeta.sol\":1135:1223  if (uint8(b[i]) == 0) {... */\n    tag_340:\n        /* \"contracts/utils/ContractMeta.sol\":1115:1118  ++i */\n      tag_341\n      dup2\n      tag_342\n      jump\t// in\n    tag_341:\n      swap1\n      pop\n        /* \"contracts/utils/ContractMeta.sol\":1087:1234  for (uint256 i = 0; i < 32; ++i) {... */\n      jump(tag_334)\n    tag_335:\n      pop\n        /* \"contracts/utils/ContractMeta.sol\":1268:1282  mstore(s, len) */\n      dup2\n      mstore\n        /* \"contracts/utils/ContractMeta.sol\":1310:1314  0x20 */\n      0x20\n        /* \"contracts/utils/ContractMeta.sol\":1303:1315  add(s, 0x20) */\n      dup2\n      add\n        /* \"contracts/utils/ContractMeta.sol\":1296:1319  mstore(add(s, 0x20), b) */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/utils/ContractMeta.sol\":1275:1276  s */\n      swap1\n        /* \"contracts/utils/ContractMeta.sol\":943:1337  function _bytes32ToString(bytes32 b) internal pure returns (string memory s) {... */\n      jump\t// out\n        /* \"contracts/vaults/VaultGovernance.sol\":9344:9773  function _commitDelayedProtocolParams() internal {... */\n    tag_210:\n        /* \"contracts/vaults/VaultGovernance.sol\":9404:9427  _requireProtocolAdmin() */\n      tag_344\n        /* \"contracts/vaults/VaultGovernance.sol\":9404:9425  _requireProtocolAdmin */\n      tag_121\n        /* \"contracts/vaults/VaultGovernance.sol\":9404:9427  _requireProtocolAdmin() */\n      jump\t// in\n    tag_344:\n        /* \"contracts/vaults/VaultGovernance.sol\":9446:9477  _delayedProtocolParamsTimestamp */\n      sload(0x0f)\n        /* \"contracts/vaults/VaultGovernance.sol\":9484:9506  ExceptionsLibrary.NULL */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x04\n      dup2\n      mstore\n      shl(0xe2, 0x13955313)\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n        /* \"contracts/vaults/VaultGovernance.sol\":9438:9507  require(_delayedProtocolParamsTimestamp != 0, ExceptionsLibrary.NULL) */\n      tag_345\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_345:\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":9545:9576  _delayedProtocolParamsTimestamp */\n      sload(0x0f)\n        /* \"contracts/vaults/VaultGovernance.sol\":9526:9541  block.timestamp */\n      timestamp\n        /* \"contracts/vaults/VaultGovernance.sol\":9526:9576  block.timestamp >= _delayedProtocolParamsTimestamp */\n      lt\n      iszero\n        /* \"contracts/vaults/VaultGovernance.sol\":9578:9605  ExceptionsLibrary.TIMESTAMP */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xf0, 0x5453)\n      dup2\n      mstore\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":9518:9606  require(block.timestamp >= _delayedProtocolParamsTimestamp, ExceptionsLibrary.TIMESTAMP) */\n      swap1\n      tag_347\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_347:\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":9642:9670  _stagedDelayedProtocolParams */\n      0x0e\n        /* \"contracts/vaults/VaultGovernance.sol\":9617:9639  _delayedProtocolParams */\n      0x0d\n        /* \"contracts/vaults/VaultGovernance.sol\":9617:9670  _delayedProtocolParams = _stagedDelayedProtocolParams */\n      swap1\n      dup1\n      sload\n      tag_349\n      swap1\n      tag_141\n      jump\t// in\n    tag_349:\n      tag_350\n      swap3\n      swap2\n      swap1\n      tag_289\n      jump\t// in\n    tag_350:\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":9681:9716  delete _stagedDelayedProtocolParams */\n      tag_351\n        /* \"contracts/vaults/VaultGovernance.sol\":9688:9716  _stagedDelayedProtocolParams */\n      0x0e\n      0x00\n        /* \"contracts/vaults/VaultGovernance.sol\":9681:9716  delete _stagedDelayedProtocolParams */\n      tag_291\n      jump\t// in\n    tag_351:\n        /* \"contracts/vaults/VaultGovernance.sol\":9727:9765  delete _delayedProtocolParamsTimestamp */\n      0x00\n        /* \"contracts/vaults/VaultGovernance.sol\":9734:9765  _delayedProtocolParamsTimestamp */\n      0x0f\n        /* \"contracts/vaults/VaultGovernance.sol\":9727:9765  delete _delayedProtocolParamsTimestamp */\n      sstore\n        /* \"contracts/vaults/VaultGovernance.sol\":9344:9773  function _commitDelayedProtocolParams() internal {... */\n      jump\t// out\n        /* \"contracts/vaults/VaultGovernance.sol\":8888:9288  function _stageDelayedProtocolParams(bytes memory params) internal {... */\n    tag_234:\n        /* \"contracts/vaults/VaultGovernance.sol\":8966:8989  _requireProtocolAdmin() */\n      tag_353\n        /* \"contracts/vaults/VaultGovernance.sol\":8966:8987  _requireProtocolAdmin */\n      tag_121\n        /* \"contracts/vaults/VaultGovernance.sol\":8966:8989  _requireProtocolAdmin() */\n      jump\t// in\n    tag_353:\n        /* \"contracts/vaults/VaultGovernance.sol\":9000:9019  uint256 delayFactor */\n      0x00\n        /* \"contracts/vaults/VaultGovernance.sol\":9022:9044  _delayedProtocolParams */\n      0x0d\n        /* \"contracts/vaults/VaultGovernance.sol\":9022:9051  _delayedProtocolParams.length */\n      dup1\n      sload\n      tag_354\n      swap1\n      tag_141\n      jump\t// in\n    tag_354:\n        /* \"contracts/vaults/VaultGovernance.sol\":9022:9056  _delayedProtocolParams.length == 0 */\n      iszero\n      swap1\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":9022:9064  _delayedProtocolParams.length == 0 ? 0 : 1 */\n      tag_355\n      jumpi\n        /* \"contracts/vaults/VaultGovernance.sol\":9063:9064  1 */\n      0x01\n        /* \"contracts/vaults/VaultGovernance.sol\":9022:9064  _delayedProtocolParams.length == 0 ? 0 : 1 */\n      jump(tag_356)\n    tag_355:\n        /* \"contracts/vaults/VaultGovernance.sol\":9059:9060  0 */\n      0x00\n        /* \"contracts/vaults/VaultGovernance.sol\":9022:9064  _delayedProtocolParams.length == 0 ? 0 : 1 */\n    tag_356:\n        /* \"contracts/vaults/VaultGovernance.sol\":9000:9064  uint256 delayFactor = _delayedProtocolParams.length == 0 ? 0 : 1 */\n      0xff\n      and\n      swap1\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":9106:9112  params */\n      dup2\n        /* \"contracts/vaults/VaultGovernance.sol\":9075:9103  _stagedDelayedProtocolParams */\n      0x0e\n        /* \"contracts/vaults/VaultGovernance.sol\":9075:9112  _stagedDelayedProtocolParams = params */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_357\n      swap3\n      swap2\n      swap1\n      tag_296\n      jump\t// in\n    tag_357:\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":9201:9216  _internalParams */\n      0x00\n        /* \"contracts/vaults/VaultGovernance.sol\":9201:9235  _internalParams.protocolGovernance */\n      sload\n        /* \"contracts/vaults/VaultGovernance.sol\":9201:9253  _internalParams.protocolGovernance.governanceDelay() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0xbba32939)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/vaults/VaultGovernance.sol\":9269:9280  delayFactor */\n      dup4\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/vaults/VaultGovernance.sol\":9201:9235  _internalParams.protocolGovernance */\n      and\n      swap2\n        /* \"contracts/vaults/VaultGovernance.sol\":9201:9251  _internalParams.protocolGovernance.governanceDelay */\n      0xbba32939\n      swap2\n        /* \"contracts/vaults/VaultGovernance.sol\":9201:9253  _internalParams.protocolGovernance.governanceDelay() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/vaults/VaultGovernance.sol\":9201:9235  _internalParams.protocolGovernance */\n      dup7\n        /* \"contracts/vaults/VaultGovernance.sol\":9201:9253  _internalParams.protocolGovernance.governanceDelay() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_358\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_358:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_360\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_360:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_361\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_361:\n        /* \"contracts/vaults/VaultGovernance.sol\":9201:9280  _internalParams.protocolGovernance.governanceDelay() *... */\n      tag_362\n      swap2\n      swap1\n      tag_305\n      jump\t// in\n    tag_362:\n        /* \"contracts/vaults/VaultGovernance.sol\":9170:9280  block.timestamp +... */\n      tag_363\n      swap1\n        /* \"contracts/vaults/VaultGovernance.sol\":9170:9185  block.timestamp */\n      timestamp\n        /* \"contracts/vaults/VaultGovernance.sol\":9170:9280  block.timestamp +... */\n      tag_134\n      jump\t// in\n    tag_363:\n        /* \"contracts/vaults/VaultGovernance.sol\":9123:9154  _delayedProtocolParamsTimestamp */\n      0x0f\n        /* \"contracts/vaults/VaultGovernance.sol\":9123:9280  _delayedProtocolParamsTimestamp =... */\n      sstore\n      pop\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":8888:9288  function _stageDelayedProtocolParams(bytes memory params) internal {... */\n      jump\t// out\n        /* \"contracts/vaults/VaultGovernance.sol\":4839:5199  function _requireAtLeastStrategy(uint256 nft) internal view {... */\n    tag_282:\n        /* \"contracts/vaults/VaultGovernance.sol\":4933:4948  _internalParams */\n      0x00\n        /* \"contracts/vaults/VaultGovernance.sol\":4933:4967  _internalParams.protocolGovernance */\n      sload\n        /* \"contracts/vaults/VaultGovernance.sol\":4933:4987  _internalParams.protocolGovernance.isAdmin(msg.sender) */\n      mload(0x40)\n      shl(0xe2, 0x0935e01b)\n      dup2\n      mstore\n        /* \"contracts/vaults/VaultGovernance.sol\":4976:4986  msg.sender */\n      caller\n        /* \"contracts/vaults/VaultGovernance.sol\":4933:4987  _internalParams.protocolGovernance.isAdmin(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14614:14665   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/vaults/VaultGovernance.sol\":4933:4967  _internalParams.protocolGovernance */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/vaults/VaultGovernance.sol\":4933:4975  _internalParams.protocolGovernance.isAdmin */\n      0x24d7806c\n      swap1\n        /* \"#utility.yul\":14587:14605   */\n      0x24\n      add\n        /* \"contracts/vaults/VaultGovernance.sol\":4933:4987  _internalParams.protocolGovernance.isAdmin(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_367\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_367:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_369\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_369:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_370\n      swap2\n      swap1\n      tag_277\n      jump\t// in\n    tag_370:\n        /* \"contracts/vaults/VaultGovernance.sol\":4933:5063  _internalParams.protocolGovernance.isAdmin(msg.sender) ||... */\n      dup1\n      tag_371\n      jumpi\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":5008:5032  _internalParams.registry */\n      sload(0x01)\n        /* \"contracts/vaults/VaultGovernance.sol\":5008:5049  _internalParams.registry.getApproved(nft) */\n      mload(0x40)\n      shl(0xe2, 0x020604bf)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":643:668   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/vaults/VaultGovernance.sol\":5053:5063  msg.sender */\n      caller\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/vaults/VaultGovernance.sol\":5008:5032  _internalParams.registry */\n      and\n      swap1\n        /* \"contracts/vaults/VaultGovernance.sol\":5008:5044  _internalParams.registry.getApproved */\n      0x081812fc\n      swap1\n        /* \"#utility.yul\":616:634   */\n      0x24\n      add\n        /* \"contracts/vaults/VaultGovernance.sol\":5008:5049  _internalParams.registry.getApproved(nft) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_373\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_373:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_375\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_375:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_376\n      swap2\n      swap1\n      tag_377\n      jump\t// in\n    tag_376:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/vaults/VaultGovernance.sol\":5008:5063  _internalParams.registry.getApproved(nft) == msg.sender */\n      and\n      eq\n        /* \"contracts/vaults/VaultGovernance.sol\":4933:5063  _internalParams.protocolGovernance.isAdmin(msg.sender) ||... */\n    tag_371:\n        /* \"contracts/vaults/VaultGovernance.sol\":4933:5137  _internalParams.protocolGovernance.isAdmin(msg.sender) ||... */\n      dup1\n      tag_378\n      jumpi\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":5085:5109  _internalParams.registry */\n      sload(0x01)\n        /* \"contracts/vaults/VaultGovernance.sol\":5085:5122  _internalParams.registry.ownerOf(nft) */\n      mload(0x40)\n      shl(0xe1, 0x31a9108f)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":643:668   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/vaults/VaultGovernance.sol\":5126:5136  msg.sender */\n      caller\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/vaults/VaultGovernance.sol\":5085:5109  _internalParams.registry */\n      and\n      swap1\n        /* \"contracts/vaults/VaultGovernance.sol\":5085:5117  _internalParams.registry.ownerOf */\n      0x6352211e\n      swap1\n        /* \"#utility.yul\":616:634   */\n      0x24\n      add\n        /* \"contracts/vaults/VaultGovernance.sol\":5085:5122  _internalParams.registry.ownerOf(nft) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_380\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_380:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_382\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_382:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_383\n      swap2\n      swap1\n      tag_377\n      jump\t// in\n    tag_383:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/vaults/VaultGovernance.sol\":5085:5136  _internalParams.registry.ownerOf(nft) == msg.sender */\n      and\n      eq\n        /* \"contracts/vaults/VaultGovernance.sol\":4933:5137  _internalParams.protocolGovernance.isAdmin(msg.sender) ||... */\n    tag_378:\n        /* \"contracts/vaults/VaultGovernance.sol\":5153:5180  ExceptionsLibrary.FORBIDDEN */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xe9, 0x232921)\n      dup2\n      mstore\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":4910:5191  require(... */\n      swap1\n      tag_384\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_384:\n      pop\n        /* \"contracts/vaults/VaultGovernance.sol\":4839:5199  function _requireAtLeastStrategy(uint256 nft) internal view {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1848:2398  function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {... */\n    tag_322:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1932:1948  address instance */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2000:2004  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1994:2005  mload(0x40) */\n      mload\n      shl(0x60, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2025:2028  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2018:2097  mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000) */\n      mstore\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2143:2157  implementation */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2137:2141  0x60 */\n      0x60\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2133:2158  shl(0x60, implementation) */\n      shl\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2126:2130  0x14 */\n      0x14\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2121:2124  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2117:2131  add(ptr, 0x14) */\n      add\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2110:2159  mstore(add(ptr, 0x14), shl(0x60, implementation)) */\n      mstore\n      shl(0x88, 0x5af43d82803e903d91602b57fd5bf3)\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2188:2192  0x28 */\n      0x28\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2183:2186  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2179:2193  add(ptr, 0x28) */\n      add\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2172:2262  mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000) */\n      mstore\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2309:2313  salt */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2303:2307  0x37 */\n      0x37\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2298:2301  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2295:2296  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2287:2314  create2(0, ptr, 0x37, salt) */\n      create2\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2275:2314  instance := create2(0, ptr, 0x37, salt) */\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2341:2363  instance != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2333:2391  require(instance != address(0), \"ERC1167: create2 failed\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16477:16479   */\n      0x20\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2333:2391  require(instance != address(0), \"ERC1167: create2 failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16459:16480   */\n      mstore\n        /* \"#utility.yul\":16516:16518   */\n      0x17\n        /* \"#utility.yul\":16496:16514   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16489:16519   */\n      mstore\n        /* \"#utility.yul\":16555:16580   */\n      0x455243313136373a2063726561746532206661696c6564000000000000000000\n        /* \"#utility.yul\":16535:16553   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16528:16581   */\n      mstore\n        /* \"#utility.yul\":16598:16616   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2333:2391  require(instance != address(0), \"ERC1167: create2 failed\") */\n      tag_123\n        /* \"#utility.yul\":16275:16622   */\n      jump\n    tag_289:\n      dup3\n      dup1\n      sload\n      tag_390\n      swap1\n      tag_141\n      jump\t// in\n    tag_390:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_392\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_395)\n    tag_392:\n      dup3\n      0x1f\n      lt\n      tag_393\n      jumpi\n      dup1\n      sload\n      dup6\n      sstore\n      jump(tag_395)\n    tag_393:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_395\n      jumpi\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap2\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup3\n      add\n    tag_394:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_395\n      jumpi\n      dup3\n      sload\n      dup3\n      sstore\n      swap2\n      0x01\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_394)\n    tag_395:\n      pop\n      tag_396\n      swap3\n      swap2\n      pop\n      tag_397\n      jump\t// in\n    tag_396:\n      pop\n      swap1\n      jump\t// out\n    tag_291:\n      pop\n      dup1\n      sload\n      tag_398\n      swap1\n      tag_141\n      jump\t// in\n    tag_398:\n      0x00\n      dup3\n      sstore\n      dup1\n      0x1f\n      lt\n      tag_400\n      jumpi\n      pop\n      pop\n      jump\t// out\n    tag_400:\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_278\n      swap2\n      swap1\n      tag_397\n      jump\t// in\n    tag_296:\n      dup3\n      dup1\n      sload\n      tag_402\n      swap1\n      tag_141\n      jump\t// in\n    tag_402:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_404\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_395)\n    tag_404:\n      dup3\n      0x1f\n      lt\n      tag_405\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_395)\n    tag_405:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_395\n      jumpi\n      swap2\n      dup3\n      add\n    tag_406:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_395\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_406)\n    tag_397:\n    tag_409:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_396\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_409)\n        /* \"#utility.yul\":14:300   */\n    tag_30:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      dup1\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_423:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_424\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":199:270   */\n    tag_424:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":679:806   */\n    tag_332:\n        /* \"#utility.yul\":740:750   */\n      0x4e487b71\n        /* \"#utility.yul\":735:738   */\n      0xe0\n        /* \"#utility.yul\":731:751   */\n      shl\n        /* \"#utility.yul\":728:729   */\n      0x00\n        /* \"#utility.yul\":721:752   */\n      mstore\n        /* \"#utility.yul\":771:775   */\n      0x41\n        /* \"#utility.yul\":768:769   */\n      0x04\n        /* \"#utility.yul\":761:776   */\n      mstore\n        /* \"#utility.yul\":795:799   */\n      0x24\n        /* \"#utility.yul\":792:793   */\n      0x00\n        /* \"#utility.yul\":785:800   */\n      revert\n        /* \"#utility.yul\":811:1086   */\n    tag_411:\n        /* \"#utility.yul\":882:884   */\n      0x40\n        /* \"#utility.yul\":876:885   */\n      mload\n        /* \"#utility.yul\":947:949   */\n      0x1f\n        /* \"#utility.yul\":928:941   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":924:951   */\n      and\n        /* \"#utility.yul\":912:952   */\n      dup2\n      add\n        /* \"#utility.yul\":982:1000   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":967:1001   */\n      dup2\n      gt\n        /* \"#utility.yul\":1003:1025   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":964:1026   */\n      or\n        /* \"#utility.yul\":961:1049   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":1029:1047   */\n      tag_430\n      tag_332\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":1065:1067   */\n      0x40\n        /* \"#utility.yul\":1058:1080   */\n      mstore\n        /* \"#utility.yul\":811:1086   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1243   */\n    tag_412:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1187:1218   */\n      dup2\n      and\n        /* \"#utility.yul\":1177:1219   */\n      dup2\n      eq\n        /* \"#utility.yul\":1167:1237   */\n      tag_278\n      jumpi\n        /* \"#utility.yul\":1233:1234   */\n      0x00\n        /* \"#utility.yul\":1230:1231   */\n      dup1\n        /* \"#utility.yul\":1223:1235   */\n      revert\n        /* \"#utility.yul\":1248:2101   */\n    tag_40:\n        /* \"#utility.yul\":1339:1345   */\n      0x00\n        /* \"#utility.yul\":1392:1394   */\n      0x60\n        /* \"#utility.yul\":1380:1389   */\n      dup3\n        /* \"#utility.yul\":1371:1378   */\n      dup5\n        /* \"#utility.yul\":1367:1390   */\n      sub\n        /* \"#utility.yul\":1363:1395   */\n      slt\n        /* \"#utility.yul\":1360:1412   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":1408:1409   */\n      0x00\n        /* \"#utility.yul\":1405:1406   */\n      dup1\n        /* \"#utility.yul\":1398:1410   */\n      revert\n        /* \"#utility.yul\":1360:1412   */\n    tag_434:\n        /* \"#utility.yul\":1441:1443   */\n      0x40\n        /* \"#utility.yul\":1435:1444   */\n      mload\n        /* \"#utility.yul\":1483:1485   */\n      0x60\n        /* \"#utility.yul\":1475:1481   */\n      dup2\n        /* \"#utility.yul\":1471:1486   */\n      add\n        /* \"#utility.yul\":1552:1558   */\n      dup2\n        /* \"#utility.yul\":1540:1550   */\n      dup2\n        /* \"#utility.yul\":1537:1559   */\n      lt\n        /* \"#utility.yul\":1516:1534   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1504:1514   */\n      dup3\n        /* \"#utility.yul\":1501:1535   */\n      gt\n        /* \"#utility.yul\":1498:1560   */\n      or\n        /* \"#utility.yul\":1495:1583   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":1563:1581   */\n      tag_436\n      tag_332\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":1599:1601   */\n      0x40\n        /* \"#utility.yul\":1592:1614   */\n      mstore\n        /* \"#utility.yul\":1636:1659   */\n      dup3\n      calldataload\n        /* \"#utility.yul\":1668:1720   */\n      tag_437\n        /* \"#utility.yul\":1636:1659   */\n      dup2\n        /* \"#utility.yul\":1668:1720   */\n      tag_412\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":1729:1750   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1802:1804   */\n      0x20\n        /* \"#utility.yul\":1787:1805   */\n      dup4\n      add\n        /* \"#utility.yul\":1774:1806   */\n      calldataload\n        /* \"#utility.yul\":1815:1869   */\n      tag_438\n        /* \"#utility.yul\":1774:1806   */\n      dup2\n        /* \"#utility.yul\":1815:1869   */\n      tag_412\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":1897:1899   */\n      0x20\n        /* \"#utility.yul\":1885:1900   */\n      dup3\n      add\n        /* \"#utility.yul\":1878:1910   */\n      mstore\n        /* \"#utility.yul\":1962:1964   */\n      0x40\n        /* \"#utility.yul\":1947:1965   */\n      dup4\n      add\n        /* \"#utility.yul\":1934:1966   */\n      calldataload\n        /* \"#utility.yul\":1975:2029   */\n      tag_439\n        /* \"#utility.yul\":1934:1966   */\n      dup2\n        /* \"#utility.yul\":1975:2029   */\n      tag_412\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":2057:2059   */\n      0x40\n        /* \"#utility.yul\":2045:2060   */\n      dup3\n      add\n        /* \"#utility.yul\":2038:2070   */\n      mstore\n        /* \"#utility.yul\":2049:2055   */\n      swap4\n        /* \"#utility.yul\":1248:2101   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2106:2286   */\n    tag_44:\n        /* \"#utility.yul\":2165:2171   */\n      0x00\n        /* \"#utility.yul\":2218:2220   */\n      0x20\n        /* \"#utility.yul\":2206:2215   */\n      dup3\n        /* \"#utility.yul\":2197:2204   */\n      dup5\n        /* \"#utility.yul\":2193:2216   */\n      sub\n        /* \"#utility.yul\":2189:2221   */\n      slt\n        /* \"#utility.yul\":2186:2238   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":2234:2235   */\n      0x00\n        /* \"#utility.yul\":2231:2232   */\n      dup1\n        /* \"#utility.yul\":2224:2236   */\n      revert\n        /* \"#utility.yul\":2186:2238   */\n    tag_441:\n      pop\n        /* \"#utility.yul\":2257:2280   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2106:2286   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2473:2823   */\n    tag_55:\n        /* \"#utility.yul\":2582:2588   */\n      0x00\n        /* \"#utility.yul\":2590:2596   */\n      dup1\n        /* \"#utility.yul\":2634:2643   */\n      dup3\n        /* \"#utility.yul\":2625:2632   */\n      dup5\n        /* \"#utility.yul\":2621:2644   */\n      sub\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2660:2662   */\n      dup2\n        /* \"#utility.yul\":2656:2667   */\n      slt\n        /* \"#utility.yul\":2653:2684   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":2680:2681   */\n      0x00\n        /* \"#utility.yul\":2677:2678   */\n      dup1\n        /* \"#utility.yul\":2670:2682   */\n      revert\n        /* \"#utility.yul\":2653:2684   */\n    tag_444:\n        /* \"#utility.yul\":2703:2726   */\n      dup4\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":2760:2762   */\n      0x20\n      not(0x1f)\n        /* \"#utility.yul\":2742:2758   */\n      dup3\n      add\n        /* \"#utility.yul\":2738:2763   */\n      slt\n        /* \"#utility.yul\":2735:2780   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":2776:2777   */\n      0x00\n        /* \"#utility.yul\":2773:2774   */\n      dup1\n        /* \"#utility.yul\":2766:2778   */\n      revert\n        /* \"#utility.yul\":2735:2780   */\n    tag_445:\n      pop\n        /* \"#utility.yul\":2814:2816   */\n      0x20\n        /* \"#utility.yul\":2803:2812   */\n      dup4\n        /* \"#utility.yul\":2799:2817   */\n      add\n        /* \"#utility.yul\":2789:2817   */\n      swap1\n      pop\n        /* \"#utility.yul\":2473:2823   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3112:3267   */\n    tag_413:\n        /* \"#utility.yul\":3180:3200   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":3209:3261   */\n      tag_448\n        /* \"#utility.yul\":3180:3200   */\n      dup2\n        /* \"#utility.yul\":3209:3261   */\n      tag_412\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":3112:3267   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3272:3433   */\n    tag_414:\n        /* \"#utility.yul\":3339:3359   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":3399:3407   */\n      0xffffff\n        /* \"#utility.yul\":3388:3408   */\n      dup2\n      and\n        /* \"#utility.yul\":3378:3409   */\n      dup2\n      eq\n        /* \"#utility.yul\":3368:3427   */\n      tag_448\n      jumpi\n        /* \"#utility.yul\":3423:3424   */\n      0x00\n        /* \"#utility.yul\":3420:3421   */\n      dup1\n        /* \"#utility.yul\":3413:3425   */\n      revert\n        /* \"#utility.yul\":3438:4703   */\n    tag_68:\n        /* \"#utility.yul\":3548:3554   */\n      0x00\n        /* \"#utility.yul\":3556:3562   */\n      dup1\n        /* \"#utility.yul\":3564:3570   */\n      0x00\n        /* \"#utility.yul\":3572:3578   */\n      dup1\n        /* \"#utility.yul\":3625:3628   */\n      0x80\n        /* \"#utility.yul\":3613:3622   */\n      dup6\n        /* \"#utility.yul\":3604:3611   */\n      dup8\n        /* \"#utility.yul\":3600:3623   */\n      sub\n        /* \"#utility.yul\":3596:3629   */\n      slt\n        /* \"#utility.yul\":3593:3646   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":3642:3643   */\n      0x00\n        /* \"#utility.yul\":3639:3640   */\n      dup1\n        /* \"#utility.yul\":3632:3644   */\n      revert\n        /* \"#utility.yul\":3593:3646   */\n    tag_452:\n        /* \"#utility.yul\":3682:3691   */\n      dup5\n        /* \"#utility.yul\":3669:3692   */\n      calldataload\n        /* \"#utility.yul\":3711:3729   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3752:3754   */\n      dup1\n        /* \"#utility.yul\":3744:3750   */\n      dup3\n        /* \"#utility.yul\":3741:3755   */\n      gt\n        /* \"#utility.yul\":3738:3772   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":3768:3769   */\n      0x00\n        /* \"#utility.yul\":3765:3766   */\n      dup1\n        /* \"#utility.yul\":3758:3770   */\n      revert\n        /* \"#utility.yul\":3738:3772   */\n    tag_453:\n        /* \"#utility.yul\":3806:3812   */\n      dup2\n        /* \"#utility.yul\":3795:3804   */\n      dup8\n        /* \"#utility.yul\":3791:3813   */\n      add\n        /* \"#utility.yul\":3781:3813   */\n      swap2\n      pop\n        /* \"#utility.yul\":3851:3858   */\n      dup8\n        /* \"#utility.yul\":3844:3848   */\n      0x1f\n        /* \"#utility.yul\":3840:3842   */\n      dup4\n        /* \"#utility.yul\":3836:3849   */\n      add\n        /* \"#utility.yul\":3832:3859   */\n      slt\n        /* \"#utility.yul\":3822:3877   */\n      tag_454\n      jumpi\n        /* \"#utility.yul\":3873:3874   */\n      0x00\n        /* \"#utility.yul\":3870:3871   */\n      dup1\n        /* \"#utility.yul\":3863:3875   */\n      revert\n        /* \"#utility.yul\":3822:3877   */\n    tag_454:\n        /* \"#utility.yul\":3909:3911   */\n      dup2\n        /* \"#utility.yul\":3896:3912   */\n      calldataload\n        /* \"#utility.yul\":3931:3935   */\n      0x20\n        /* \"#utility.yul\":3954:3956   */\n      dup3\n        /* \"#utility.yul\":3950:3952   */\n      dup3\n        /* \"#utility.yul\":3947:3957   */\n      gt\n        /* \"#utility.yul\":3944:3980   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":3960:3978   */\n      tag_456\n      tag_332\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":4006:4008   */\n      dup2\n        /* \"#utility.yul\":4003:4004   */\n      0x05\n        /* \"#utility.yul\":3999:4009   */\n      shl\n        /* \"#utility.yul\":3989:4009   */\n      swap3\n      pop\n        /* \"#utility.yul\":4029:4057   */\n      tag_457\n        /* \"#utility.yul\":4053:4055   */\n      dup2\n        /* \"#utility.yul\":4049:4051   */\n      dup5\n        /* \"#utility.yul\":4045:4056   */\n      add\n        /* \"#utility.yul\":4029:4057   */\n      tag_411\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":4091:4106   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":4161:4172   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":4157:4177   */\n      dup2\n      add\n      swap3\n        /* \"#utility.yul\":4122:4134   */\n      dup2\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4189:4208   */\n      dup12\n      dup6\n      gt\n        /* \"#utility.yul\":4186:4225   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":4221:4222   */\n      0x00\n        /* \"#utility.yul\":4218:4219   */\n      dup1\n        /* \"#utility.yul\":4211:4223   */\n      revert\n        /* \"#utility.yul\":4186:4225   */\n    tag_458:\n        /* \"#utility.yul\":4245:4256   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":4265:4503   */\n    tag_459:\n        /* \"#utility.yul\":4281:4287   */\n      dup5\n        /* \"#utility.yul\":4276:4279   */\n      dup7\n        /* \"#utility.yul\":4273:4288   */\n      lt\n        /* \"#utility.yul\":4265:4503   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":4361:4364   */\n      dup6\n        /* \"#utility.yul\":4348:4365   */\n      calldataload\n        /* \"#utility.yul\":4335:4365   */\n      swap4\n      pop\n        /* \"#utility.yul\":4378:4430   */\n      tag_462\n        /* \"#utility.yul\":4424:4429   */\n      dup5\n        /* \"#utility.yul\":4378:4430   */\n      tag_412\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":4443:4461   */\n      dup4\n      dup3\n      mstore\n        /* \"#utility.yul\":4298:4310   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":4481:4493   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":4265:4503   */\n      jump(tag_459)\n    tag_461:\n        /* \"#utility.yul\":4522:4527   */\n      swap9\n      pop\n        /* \"#utility.yul\":4546:4584   */\n      tag_463\n      swap1\n      pop\n        /* \"#utility.yul\":4565:4583   */\n      dup10\n      dup3\n      add\n        /* \"#utility.yul\":4546:4584   */\n      tag_413\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":4536:4584   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4603:4640   */\n      tag_464\n        /* \"#utility.yul\":4636:4638   */\n      0x40\n        /* \"#utility.yul\":4625:4634   */\n      dup7\n        /* \"#utility.yul\":4621:4639   */\n      add\n        /* \"#utility.yul\":4603:4640   */\n      tag_414\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":4593:4640   */\n      swap2\n      pop\n        /* \"#utility.yul\":4659:4697   */\n      tag_465\n        /* \"#utility.yul\":4693:4695   */\n      0x60\n        /* \"#utility.yul\":4682:4691   */\n      dup7\n        /* \"#utility.yul\":4678:4696   */\n      add\n        /* \"#utility.yul\":4659:4697   */\n      tag_413\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":4649:4697   */\n      swap1\n      pop\n        /* \"#utility.yul\":3438:4703   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5007:5479   */\n    tag_415:\n        /* \"#utility.yul\":5049:5052   */\n      0x00\n        /* \"#utility.yul\":5087:5092   */\n      dup2\n        /* \"#utility.yul\":5081:5093   */\n      mload\n        /* \"#utility.yul\":5114:5120   */\n      dup1\n        /* \"#utility.yul\":5109:5112   */\n      dup5\n        /* \"#utility.yul\":5102:5121   */\n      mstore\n        /* \"#utility.yul\":5139:5140   */\n      0x00\n        /* \"#utility.yul\":5149:5311   */\n    tag_468:\n        /* \"#utility.yul\":5163:5169   */\n      dup2\n        /* \"#utility.yul\":5160:5161   */\n      dup2\n        /* \"#utility.yul\":5157:5170   */\n      lt\n        /* \"#utility.yul\":5149:5311   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":5225:5229   */\n      0x20\n        /* \"#utility.yul\":5281:5294   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":5277:5299   */\n      dup2\n      add\n        /* \"#utility.yul\":5271:5300   */\n      mload\n        /* \"#utility.yul\":5253:5264   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":5249:5269   */\n      dup3\n      add\n        /* \"#utility.yul\":5242:5301   */\n      mstore\n        /* \"#utility.yul\":5178:5190   */\n      add\n        /* \"#utility.yul\":5149:5311   */\n      jump(tag_468)\n    tag_470:\n        /* \"#utility.yul\":5329:5335   */\n      dup2\n        /* \"#utility.yul\":5326:5327   */\n      dup2\n        /* \"#utility.yul\":5323:5336   */\n      gt\n        /* \"#utility.yul\":5320:5407   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":5395:5396   */\n      0x00\n        /* \"#utility.yul\":5388:5392   */\n      0x20\n        /* \"#utility.yul\":5379:5385   */\n      dup4\n        /* \"#utility.yul\":5374:5377   */\n      dup8\n        /* \"#utility.yul\":5370:5386   */\n      add\n        /* \"#utility.yul\":5366:5393   */\n      add\n        /* \"#utility.yul\":5359:5397   */\n      mstore\n        /* \"#utility.yul\":5320:5407   */\n    tag_471:\n      pop\n        /* \"#utility.yul\":5461:5463   */\n      0x1f\n        /* \"#utility.yul\":5440:5455   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":5436:5465   */\n      and\n        /* \"#utility.yul\":5427:5466   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":5468:5472   */\n      0x20\n        /* \"#utility.yul\":5423:5473   */\n      add\n      swap3\n        /* \"#utility.yul\":5007:5479   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5484:5704   */\n    tag_79:\n        /* \"#utility.yul\":5633:5635   */\n      0x20\n        /* \"#utility.yul\":5622:5631   */\n      dup2\n        /* \"#utility.yul\":5615:5636   */\n      mstore\n        /* \"#utility.yul\":5596:5600   */\n      0x00\n        /* \"#utility.yul\":5653:5698   */\n      tag_424\n        /* \"#utility.yul\":5694:5696   */\n      0x20\n        /* \"#utility.yul\":5683:5692   */\n      dup4\n        /* \"#utility.yul\":5679:5697   */\n      add\n        /* \"#utility.yul\":5671:5677   */\n      dup5\n        /* \"#utility.yul\":5653:5698   */\n      tag_415\n      jump\t// in\n        /* \"#utility.yul\":5990:6257   */\n    tag_83:\n        /* \"#utility.yul\":6188:6190   */\n      0x60\n        /* \"#utility.yul\":6173:6191   */\n      dup2\n      add\n        /* \"#utility.yul\":6200:6251   */\n      tag_115\n        /* \"#utility.yul\":6177:6186   */\n      dup3\n        /* \"#utility.yul\":6233:6239   */\n      dup5\n        /* \"#utility.yul\":5831:5843   */\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5827:5848   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":5815:5849   */\n      dup4\n      mstore\n        /* \"#utility.yul\":5902:5906   */\n      0x20\n        /* \"#utility.yul\":5891:5907   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":5885:5908   */\n      mload\n        /* \"#utility.yul\":5881:5913   */\n      dup3\n      and\n        /* \"#utility.yul\":5865:5879   */\n      swap1\n      dup5\n      add\n        /* \"#utility.yul\":5858:5914   */\n      mstore\n        /* \"#utility.yul\":5967:5971   */\n      0x40\n        /* \"#utility.yul\":5956:5972   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":5950:5973   */\n      mload\n        /* \"#utility.yul\":5946:5978   */\n      and\n        /* \"#utility.yul\":5930:5944   */\n      swap2\n      add\n        /* \"#utility.yul\":5923:5979   */\n      mstore\n        /* \"#utility.yul\":5709:5985   */\n      jump\n        /* \"#utility.yul\":6262:6469   */\n    tag_98:\n        /* \"#utility.yul\":6362:6368   */\n      0x00\n        /* \"#utility.yul\":6415:6417   */\n      0x40\n        /* \"#utility.yul\":6403:6412   */\n      dup3\n        /* \"#utility.yul\":6394:6401   */\n      dup5\n        /* \"#utility.yul\":6390:6413   */\n      sub\n        /* \"#utility.yul\":6386:6418   */\n      slt\n        /* \"#utility.yul\":6383:6435   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":6431:6432   */\n      0x00\n        /* \"#utility.yul\":6428:6429   */\n      dup1\n        /* \"#utility.yul\":6421:6433   */\n      revert\n        /* \"#utility.yul\":6383:6435   */\n    tag_478:\n      pop\n        /* \"#utility.yul\":6454:6463   */\n      swap2\n        /* \"#utility.yul\":6262:6469   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6860:7044   */\n    tag_132:\n        /* \"#utility.yul\":6930:6936   */\n      0x00\n        /* \"#utility.yul\":6983:6985   */\n      0x20\n        /* \"#utility.yul\":6971:6980   */\n      dup3\n        /* \"#utility.yul\":6962:6969   */\n      dup5\n        /* \"#utility.yul\":6958:6981   */\n      sub\n        /* \"#utility.yul\":6954:6986   */\n      slt\n        /* \"#utility.yul\":6951:7003   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":6999:7000   */\n      0x00\n        /* \"#utility.yul\":6996:6997   */\n      dup1\n        /* \"#utility.yul\":6989:7001   */\n      revert\n        /* \"#utility.yul\":6951:7003   */\n    tag_481:\n      pop\n        /* \"#utility.yul\":7022:7038   */\n      mload\n      swap2\n        /* \"#utility.yul\":6860:7044   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7049:7176   */\n    tag_417:\n        /* \"#utility.yul\":7110:7120   */\n      0x4e487b71\n        /* \"#utility.yul\":7105:7108   */\n      0xe0\n        /* \"#utility.yul\":7101:7121   */\n      shl\n        /* \"#utility.yul\":7098:7099   */\n      0x00\n        /* \"#utility.yul\":7091:7122   */\n      mstore\n        /* \"#utility.yul\":7141:7145   */\n      0x11\n        /* \"#utility.yul\":7138:7139   */\n      0x04\n        /* \"#utility.yul\":7131:7146   */\n      mstore\n        /* \"#utility.yul\":7165:7169   */\n      0x24\n        /* \"#utility.yul\":7162:7163   */\n      0x00\n        /* \"#utility.yul\":7155:7170   */\n      revert\n        /* \"#utility.yul\":7181:7309   */\n    tag_134:\n        /* \"#utility.yul\":7221:7224   */\n      0x00\n        /* \"#utility.yul\":7252:7253   */\n      dup3\n        /* \"#utility.yul\":7248:7254   */\n      not\n        /* \"#utility.yul\":7245:7246   */\n      dup3\n        /* \"#utility.yul\":7242:7255   */\n      gt\n        /* \"#utility.yul\":7239:7278   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":7258:7276   */\n      tag_485\n      tag_417\n      jump\t// in\n    tag_485:\n      pop\n        /* \"#utility.yul\":7294:7303   */\n      add\n      swap1\n        /* \"#utility.yul\":7181:7309   */\n      jump\t// out\n        /* \"#utility.yul\":7314:7653   */\n    tag_136:\n        /* \"#utility.yul\":7540:7543   */\n      0x80\n        /* \"#utility.yul\":7525:7544   */\n      dup2\n      add\n        /* \"#utility.yul\":7553:7604   */\n      tag_487\n        /* \"#utility.yul\":7529:7538   */\n      dup3\n        /* \"#utility.yul\":7586:7592   */\n      dup6\n        /* \"#utility.yul\":5831:5843   */\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5827:5848   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":5815:5849   */\n      dup4\n      mstore\n        /* \"#utility.yul\":5902:5906   */\n      0x20\n        /* \"#utility.yul\":5891:5907   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":5885:5908   */\n      mload\n        /* \"#utility.yul\":5881:5913   */\n      dup3\n      and\n        /* \"#utility.yul\":5865:5879   */\n      swap1\n      dup5\n      add\n        /* \"#utility.yul\":5858:5914   */\n      mstore\n        /* \"#utility.yul\":5967:5971   */\n      0x40\n        /* \"#utility.yul\":5956:5972   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":5950:5973   */\n      mload\n        /* \"#utility.yul\":5946:5978   */\n      and\n        /* \"#utility.yul\":5930:5944   */\n      swap2\n      add\n        /* \"#utility.yul\":5923:5979   */\n      mstore\n        /* \"#utility.yul\":5709:5985   */\n      jump\n        /* \"#utility.yul\":7553:7604   */\n    tag_487:\n        /* \"#utility.yul\":7640:7646   */\n      dup3\n        /* \"#utility.yul\":7635:7637   */\n      0x60\n        /* \"#utility.yul\":7624:7633   */\n      dup4\n        /* \"#utility.yul\":7620:7638   */\n      add\n        /* \"#utility.yul\":7613:7647   */\n      mstore\n        /* \"#utility.yul\":7314:7653   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7658:8038   */\n    tag_141:\n        /* \"#utility.yul\":7737:7738   */\n      0x01\n        /* \"#utility.yul\":7733:7745   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":7780:7792   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":7801:7862   */\n      tag_489\n      jumpi\n        /* \"#utility.yul\":7855:7859   */\n      0x7f\n        /* \"#utility.yul\":7847:7853   */\n      dup3\n        /* \"#utility.yul\":7843:7860   */\n      and\n        /* \"#utility.yul\":7833:7860   */\n      swap2\n      pop\n        /* \"#utility.yul\":7801:7862   */\n    tag_489:\n        /* \"#utility.yul\":7908:7910   */\n      0x20\n        /* \"#utility.yul\":7900:7906   */\n      dup3\n        /* \"#utility.yul\":7897:7911   */\n      lt\n        /* \"#utility.yul\":7877:7895   */\n      dup2\n        /* \"#utility.yul\":7874:7912   */\n      eq\n        /* \"#utility.yul\":7871:8032   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":7954:7964   */\n      0x4e487b71\n        /* \"#utility.yul\":7949:7952   */\n      0xe0\n        /* \"#utility.yul\":7945:7965   */\n      shl\n        /* \"#utility.yul\":7942:7943   */\n      0x00\n        /* \"#utility.yul\":7935:7966   */\n      mstore\n        /* \"#utility.yul\":7989:7993   */\n      0x22\n        /* \"#utility.yul\":7986:7987   */\n      0x04\n        /* \"#utility.yul\":7979:7994   */\n      mstore\n        /* \"#utility.yul\":8017:8021   */\n      0x24\n        /* \"#utility.yul\":8014:8015   */\n      0x00\n        /* \"#utility.yul\":8007:8022   */\n      revert\n        /* \"#utility.yul\":8043:8164   */\n    tag_418:\n        /* \"#utility.yul\":8128:8138   */\n      0xffffffff\n        /* \"#utility.yul\":8121:8126   */\n      dup2\n        /* \"#utility.yul\":8117:8139   */\n      and\n        /* \"#utility.yul\":8110:8115   */\n      dup2\n        /* \"#utility.yul\":8107:8140   */\n      eq\n        /* \"#utility.yul\":8097:8158   */\n      tag_278\n      jumpi\n        /* \"#utility.yul\":8154:8155   */\n      0x00\n        /* \"#utility.yul\":8151:8152   */\n      dup1\n        /* \"#utility.yul\":8144:8156   */\n      revert\n        /* \"#utility.yul\":8169:8691   */\n    tag_147:\n        /* \"#utility.yul\":8278:8284   */\n      0x00\n        /* \"#utility.yul\":8331:8333   */\n      0x20\n        /* \"#utility.yul\":8319:8328   */\n      dup3\n        /* \"#utility.yul\":8310:8317   */\n      dup5\n        /* \"#utility.yul\":8306:8329   */\n      sub\n        /* \"#utility.yul\":8302:8334   */\n      slt\n        /* \"#utility.yul\":8299:8351   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":8347:8348   */\n      0x00\n        /* \"#utility.yul\":8344:8345   */\n      dup1\n        /* \"#utility.yul\":8337:8349   */\n      revert\n        /* \"#utility.yul\":8299:8351   */\n    tag_494:\n        /* \"#utility.yul\":8380:8382   */\n      0x40\n        /* \"#utility.yul\":8374:8383   */\n      mload\n        /* \"#utility.yul\":8422:8424   */\n      0x20\n        /* \"#utility.yul\":8414:8420   */\n      dup2\n        /* \"#utility.yul\":8410:8425   */\n      add\n        /* \"#utility.yul\":8491:8497   */\n      dup2\n        /* \"#utility.yul\":8479:8489   */\n      dup2\n        /* \"#utility.yul\":8476:8498   */\n      lt\n        /* \"#utility.yul\":8455:8473   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8443:8453   */\n      dup3\n        /* \"#utility.yul\":8440:8474   */\n      gt\n        /* \"#utility.yul\":8437:8499   */\n      or\n        /* \"#utility.yul\":8434:8522   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":8502:8520   */\n      tag_496\n      tag_332\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":8538:8540   */\n      0x40\n        /* \"#utility.yul\":8531:8553   */\n      mstore\n        /* \"#utility.yul\":8575:8591   */\n      dup3\n      mload\n        /* \"#utility.yul\":8600:8630   */\n      tag_497\n        /* \"#utility.yul\":8575:8591   */\n      dup2\n        /* \"#utility.yul\":8600:8630   */\n      tag_418\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":8639:8660   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8646:8652   */\n      swap4\n        /* \"#utility.yul\":8169:8691   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8696:8941   */\n    tag_155:\n        /* \"#utility.yul\":8754:8760   */\n      0x00\n        /* \"#utility.yul\":8807:8809   */\n      0x20\n        /* \"#utility.yul\":8795:8804   */\n      dup3\n        /* \"#utility.yul\":8786:8793   */\n      dup5\n        /* \"#utility.yul\":8782:8805   */\n      sub\n        /* \"#utility.yul\":8778:8810   */\n      slt\n        /* \"#utility.yul\":8775:8827   */\n      iszero\n      tag_499\n      jumpi\n        /* \"#utility.yul\":8823:8824   */\n      0x00\n        /* \"#utility.yul\":8820:8821   */\n      dup1\n        /* \"#utility.yul\":8813:8825   */\n      revert\n        /* \"#utility.yul\":8775:8827   */\n    tag_499:\n        /* \"#utility.yul\":8862:8871   */\n      dup2\n        /* \"#utility.yul\":8849:8872   */\n      calldataload\n        /* \"#utility.yul\":8881:8911   */\n      tag_424\n        /* \"#utility.yul\":8905:8910   */\n      dup2\n        /* \"#utility.yul\":8881:8911   */\n      tag_418\n      jump\t// in\n        /* \"#utility.yul\":8946:9300   */\n    tag_160:\n        /* \"#utility.yul\":9160:9162   */\n      0x20\n        /* \"#utility.yul\":9145:9163   */\n      dup2\n      add\n        /* \"#utility.yul\":9185:9205   */\n      dup3\n      calldataload\n        /* \"#utility.yul\":9214:9244   */\n      tag_502\n        /* \"#utility.yul\":9185:9205   */\n      dup2\n        /* \"#utility.yul\":9214:9244   */\n      tag_418\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":9282:9292   */\n      0xffffffff\n        /* \"#utility.yul\":9271:9293   */\n      and\n        /* \"#utility.yul\":9253:9294   */\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":8946:9300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9305:9730   */\n    tag_163:\n        /* \"#utility.yul\":9547:9549   */\n      0x40\n        /* \"#utility.yul\":9532:9550   */\n      dup2\n      add\n        /* \"#utility.yul\":9572:9592   */\n      dup4\n      calldataload\n        /* \"#utility.yul\":9601:9631   */\n      tag_504\n        /* \"#utility.yul\":9572:9592   */\n      dup2\n        /* \"#utility.yul\":9601:9631   */\n      tag_418\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":9669:9679   */\n      0xffffffff\n        /* \"#utility.yul\":9658:9680   */\n      and\n        /* \"#utility.yul\":9640:9681   */\n      dup3\n      mstore\n        /* \"#utility.yul\":9712:9714   */\n      0x20\n        /* \"#utility.yul\":9697:9715   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":9690:9724   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":9305:9730   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9735:10196   */\n    tag_419:\n        /* \"#utility.yul\":9788:9791   */\n      0x00\n        /* \"#utility.yul\":9826:9831   */\n      dup2\n        /* \"#utility.yul\":9820:9832   */\n      mload\n        /* \"#utility.yul\":9853:9859   */\n      dup1\n        /* \"#utility.yul\":9848:9851   */\n      dup5\n        /* \"#utility.yul\":9841:9860   */\n      mstore\n        /* \"#utility.yul\":9879:9883   */\n      0x20\n        /* \"#utility.yul\":9908:9910   */\n      dup1\n        /* \"#utility.yul\":9903:9906   */\n      dup6\n        /* \"#utility.yul\":9899:9911   */\n      add\n        /* \"#utility.yul\":9892:9911   */\n      swap5\n      pop\n        /* \"#utility.yul\":9945:9947   */\n      dup1\n        /* \"#utility.yul\":9938:9943   */\n      dup5\n        /* \"#utility.yul\":9934:9948   */\n      add\n        /* \"#utility.yul\":9966:9967   */\n      0x00\n        /* \"#utility.yul\":9976:10171   */\n    tag_506:\n        /* \"#utility.yul\":9990:9996   */\n      dup4\n        /* \"#utility.yul\":9987:9988   */\n      dup2\n        /* \"#utility.yul\":9984:9997   */\n      lt\n        /* \"#utility.yul\":9976:10171   */\n      iszero\n      tag_508\n      jumpi\n        /* \"#utility.yul\":10055:10068   */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10051:10090   */\n      and\n        /* \"#utility.yul\":10039:10091   */\n      dup8\n      mstore\n        /* \"#utility.yul\":10111:10123   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":10146:10161   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":10087:10088   */\n      0x01\n        /* \"#utility.yul\":10005:10014   */\n      add\n        /* \"#utility.yul\":9976:10171   */\n      jump(tag_506)\n    tag_508:\n      pop\n        /* \"#utility.yul\":10187:10190   */\n      swap5\n      swap6\n        /* \"#utility.yul\":9735:10196   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10201:10716   */\n    tag_180:\n        /* \"#utility.yul\":10462:10468   */\n      dup5\n        /* \"#utility.yul\":10451:10460   */\n      dup2\n        /* \"#utility.yul\":10444:10469   */\n      mstore\n        /* \"#utility.yul\":10505:10508   */\n      0x80\n        /* \"#utility.yul\":10500:10502   */\n      0x20\n        /* \"#utility.yul\":10489:10498   */\n      dup3\n        /* \"#utility.yul\":10485:10503   */\n      add\n        /* \"#utility.yul\":10478:10509   */\n      mstore\n        /* \"#utility.yul\":10425:10429   */\n      0x00\n        /* \"#utility.yul\":10526:10583   */\n      tag_510\n        /* \"#utility.yul\":10578:10581   */\n      0x80\n        /* \"#utility.yul\":10567:10576   */\n      dup4\n        /* \"#utility.yul\":10563:10582   */\n      add\n        /* \"#utility.yul\":10555:10561   */\n      dup7\n        /* \"#utility.yul\":10526:10583   */\n      tag_419\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":10631:10639   */\n      0xffffff\n        /* \"#utility.yul\":10619:10640   */\n      swap5\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":10614:10616   */\n      0x40\n        /* \"#utility.yul\":10599:10617   */\n      dup4\n      add\n        /* \"#utility.yul\":10592:10641   */\n      mstore\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10677:10709   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":10672:10674   */\n      0x60\n        /* \"#utility.yul\":10657:10675   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":10650:10710   */\n      mstore\n        /* \"#utility.yul\":10518:10583   */\n      swap3\n        /* \"#utility.yul\":10201:10716   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10916:11610   */\n    tag_187:\n        /* \"#utility.yul\":11225:11228   */\n      0xa0\n        /* \"#utility.yul\":11214:11223   */\n      dup2\n        /* \"#utility.yul\":11207:11229   */\n      mstore\n        /* \"#utility.yul\":11188:11192   */\n      0x00\n        /* \"#utility.yul\":11252:11309   */\n      tag_513\n        /* \"#utility.yul\":11304:11307   */\n      0xa0\n        /* \"#utility.yul\":11293:11302   */\n      dup4\n        /* \"#utility.yul\":11289:11308   */\n      add\n        /* \"#utility.yul\":11281:11287   */\n      dup9\n        /* \"#utility.yul\":11252:11309   */\n      tag_419\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":11357:11366   */\n      dup3\n        /* \"#utility.yul\":11349:11355   */\n      dup2\n        /* \"#utility.yul\":11345:11367   */\n      sub\n        /* \"#utility.yul\":11340:11342   */\n      0x20\n        /* \"#utility.yul\":11329:11338   */\n      dup5\n        /* \"#utility.yul\":11325:11343   */\n      add\n        /* \"#utility.yul\":11318:11368   */\n      mstore\n        /* \"#utility.yul\":11385:11418   */\n      tag_514\n        /* \"#utility.yul\":11411:11417   */\n      dup2\n        /* \"#utility.yul\":11403:11409   */\n      dup9\n        /* \"#utility.yul\":11385:11418   */\n      tag_415\n      jump\t// in\n    tag_514:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11492:11507   */\n      swap7\n      dup8\n      and\n        /* \"#utility.yul\":11487:11489   */\n      0x40\n        /* \"#utility.yul\":11472:11490   */\n      dup6\n      add\n        /* \"#utility.yul\":11465:11508   */\n      mstore\n        /* \"#utility.yul\":11544:11559   */\n      swap5\n      swap1\n      swap6\n      and\n        /* \"#utility.yul\":11539:11541   */\n      0x60\n        /* \"#utility.yul\":11524:11542   */\n      dup4\n      add\n        /* \"#utility.yul\":11517:11560   */\n      mstore\n      pop\n        /* \"#utility.yul\":11591:11594   */\n      0x80\n        /* \"#utility.yul\":11576:11595   */\n      add\n        /* \"#utility.yul\":11569:11604   */\n      mstore\n        /* \"#utility.yul\":11377:11418   */\n      swap4\n        /* \"#utility.yul\":10916:11610   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11615:12312   */\n    tag_217:\n        /* \"#utility.yul\":11724:11730   */\n      0x00\n        /* \"#utility.yul\":11777:11779   */\n      0x40\n        /* \"#utility.yul\":11765:11774   */\n      dup3\n        /* \"#utility.yul\":11756:11763   */\n      dup5\n        /* \"#utility.yul\":11752:11775   */\n      sub\n        /* \"#utility.yul\":11748:11780   */\n      slt\n        /* \"#utility.yul\":11745:11797   */\n      iszero\n      tag_516\n      jumpi\n        /* \"#utility.yul\":11793:11794   */\n      0x00\n        /* \"#utility.yul\":11790:11791   */\n      dup1\n        /* \"#utility.yul\":11783:11795   */\n      revert\n        /* \"#utility.yul\":11745:11797   */\n    tag_516:\n        /* \"#utility.yul\":11826:11828   */\n      0x40\n        /* \"#utility.yul\":11820:11829   */\n      mload\n        /* \"#utility.yul\":11868:11870   */\n      0x40\n        /* \"#utility.yul\":11860:11866   */\n      dup2\n        /* \"#utility.yul\":11856:11871   */\n      add\n        /* \"#utility.yul\":11937:11943   */\n      dup2\n        /* \"#utility.yul\":11925:11935   */\n      dup2\n        /* \"#utility.yul\":11922:11944   */\n      lt\n        /* \"#utility.yul\":11901:11919   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11889:11899   */\n      dup3\n        /* \"#utility.yul\":11886:11920   */\n      gt\n        /* \"#utility.yul\":11883:11945   */\n      or\n        /* \"#utility.yul\":11880:11968   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":11948:11966   */\n      tag_518\n      tag_332\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":11984:11986   */\n      0x40\n        /* \"#utility.yul\":11977:11999   */\n      mstore\n        /* \"#utility.yul\":12021:12037   */\n      dup3\n      mload\n        /* \"#utility.yul\":12046:12098   */\n      tag_519\n        /* \"#utility.yul\":12021:12037   */\n      dup2\n        /* \"#utility.yul\":12046:12098   */\n      tag_412\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":12107:12128   */\n      dup2\n      mstore\n        /* \"#utility.yul\":12173:12175   */\n      0x20\n        /* \"#utility.yul\":12158:12176   */\n      dup4\n      add\n        /* \"#utility.yul\":12152:12177   */\n      mload\n        /* \"#utility.yul\":12186:12240   */\n      tag_520\n        /* \"#utility.yul\":12152:12177   */\n      dup2\n        /* \"#utility.yul\":12186:12240   */\n      tag_412\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":12268:12270   */\n      0x20\n        /* \"#utility.yul\":12256:12271   */\n      dup3\n      add\n        /* \"#utility.yul\":12249:12281   */\n      mstore\n        /* \"#utility.yul\":12260:12266   */\n      swap4\n        /* \"#utility.yul\":11615:12312   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12317:12620   */\n    tag_224:\n        /* \"#utility.yul\":12411:12417   */\n      0x00\n        /* \"#utility.yul\":12464:12466   */\n      0x20\n        /* \"#utility.yul\":12452:12461   */\n      dup3\n        /* \"#utility.yul\":12443:12450   */\n      dup5\n        /* \"#utility.yul\":12439:12462   */\n      sub\n        /* \"#utility.yul\":12435:12467   */\n      slt\n        /* \"#utility.yul\":12432:12484   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":12480:12481   */\n      0x00\n        /* \"#utility.yul\":12477:12478   */\n      dup1\n        /* \"#utility.yul\":12470:12482   */\n      revert\n        /* \"#utility.yul\":12432:12484   */\n    tag_522:\n        /* \"#utility.yul\":12519:12528   */\n      dup2\n        /* \"#utility.yul\":12506:12529   */\n      calldataload\n        /* \"#utility.yul\":12538:12590   */\n      tag_424\n        /* \"#utility.yul\":12584:12589   */\n      dup2\n        /* \"#utility.yul\":12538:12590   */\n      tag_412\n      jump\t// in\n        /* \"#utility.yul\":12914:13343   */\n    tag_420:\n        /* \"#utility.yul\":13026:13031   */\n      dup1\n        /* \"#utility.yul\":13013:13032   */\n      calldataload\n        /* \"#utility.yul\":13041:13095   */\n      tag_528\n        /* \"#utility.yul\":13087:13094   */\n      dup2\n        /* \"#utility.yul\":13041:13095   */\n      tag_412\n      jump\t// in\n    tag_528:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13154:13170   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":13142:13171   */\n      dup4\n      mstore\n        /* \"#utility.yul\":13219:13223   */\n      0x20\n        /* \"#utility.yul\":13208:13224   */\n      dup3\n      add\n        /* \"#utility.yul\":13195:13225   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":13234:13288   */\n      tag_529\n        /* \"#utility.yul\":13195:13225   */\n      dup3\n        /* \"#utility.yul\":13234:13288   */\n      tag_412\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":13333:13335   */\n      dup1\n        /* \"#utility.yul\":13324:13331   */\n      dup3\n        /* \"#utility.yul\":13320:13336   */\n      and\n        /* \"#utility.yul\":13313:13317   */\n      0x20\n        /* \"#utility.yul\":13308:13311   */\n      dup6\n        /* \"#utility.yul\":13304:13318   */\n      add\n        /* \"#utility.yul\":13297:13337   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":12914:13343   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13348:13647   */\n    tag_233:\n        /* \"#utility.yul\":13562:13564   */\n      0x40\n        /* \"#utility.yul\":13547:13565   */\n      dup2\n      add\n        /* \"#utility.yul\":13574:13641   */\n      tag_115\n        /* \"#utility.yul\":13551:13560   */\n      dup3\n        /* \"#utility.yul\":13623:13629   */\n      dup5\n        /* \"#utility.yul\":13574:13641   */\n      tag_420\n      jump\t// in\n        /* \"#utility.yul\":13652:14022   */\n    tag_236:\n        /* \"#utility.yul\":13894:13896   */\n      0x60\n        /* \"#utility.yul\":13879:13897   */\n      dup2\n      add\n        /* \"#utility.yul\":13906:13973   */\n      tag_533\n        /* \"#utility.yul\":13883:13892   */\n      dup3\n        /* \"#utility.yul\":13955:13961   */\n      dup6\n        /* \"#utility.yul\":13906:13973   */\n      tag_420\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":14009:14015   */\n      dup3\n        /* \"#utility.yul\":14004:14006   */\n      0x40\n        /* \"#utility.yul\":13993:14002   */\n      dup4\n        /* \"#utility.yul\":13989:14007   */\n      add\n        /* \"#utility.yul\":13982:14016   */\n      mstore\n        /* \"#utility.yul\":13652:14022   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14676:14953   */\n    tag_277:\n        /* \"#utility.yul\":14743:14749   */\n      0x00\n        /* \"#utility.yul\":14796:14798   */\n      0x20\n        /* \"#utility.yul\":14784:14793   */\n      dup3\n        /* \"#utility.yul\":14775:14782   */\n      dup5\n        /* \"#utility.yul\":14771:14794   */\n      sub\n        /* \"#utility.yul\":14767:14799   */\n      slt\n        /* \"#utility.yul\":14764:14816   */\n      iszero\n      tag_537\n      jumpi\n        /* \"#utility.yul\":14812:14813   */\n      0x00\n        /* \"#utility.yul\":14809:14810   */\n      dup1\n        /* \"#utility.yul\":14802:14814   */\n      revert\n        /* \"#utility.yul\":14764:14816   */\n    tag_537:\n        /* \"#utility.yul\":14844:14853   */\n      dup2\n        /* \"#utility.yul\":14838:14854   */\n      mload\n        /* \"#utility.yul\":14897:14902   */\n      dup1\n        /* \"#utility.yul\":14890:14903   */\n      iszero\n        /* \"#utility.yul\":14883:14904   */\n      iszero\n        /* \"#utility.yul\":14876:14881   */\n      dup2\n        /* \"#utility.yul\":14873:14905   */\n      eq\n        /* \"#utility.yul\":14863:14923   */\n      tag_424\n      jumpi\n        /* \"#utility.yul\":14919:14920   */\n      0x00\n        /* \"#utility.yul\":14916:14917   */\n      dup1\n        /* \"#utility.yul\":14909:14921   */\n      revert\n        /* \"#utility.yul\":14958:15126   */\n    tag_305:\n        /* \"#utility.yul\":14998:15005   */\n      0x00\n        /* \"#utility.yul\":15064:15065   */\n      dup2\n        /* \"#utility.yul\":15060:15061   */\n      0x00\n        /* \"#utility.yul\":15056:15062   */\n      not\n        /* \"#utility.yul\":15052:15066   */\n      div\n        /* \"#utility.yul\":15049:15050   */\n      dup4\n        /* \"#utility.yul\":15046:15067   */\n      gt\n        /* \"#utility.yul\":15041:15042   */\n      dup3\n        /* \"#utility.yul\":15034:15043   */\n      iszero\n        /* \"#utility.yul\":15027:15044   */\n      iszero\n        /* \"#utility.yul\":15023:15068   */\n      and\n        /* \"#utility.yul\":15020:15091   */\n      iszero\n      tag_541\n      jumpi\n        /* \"#utility.yul\":15071:15089   */\n      tag_541\n      tag_417\n      jump\t// in\n    tag_541:\n      pop\n        /* \"#utility.yul\":15111:15120   */\n      mul\n      swap1\n        /* \"#utility.yul\":14958:15126   */\n      jump\t// out\n        /* \"#utility.yul\":15726:15853   */\n    tag_339:\n        /* \"#utility.yul\":15787:15797   */\n      0x4e487b71\n        /* \"#utility.yul\":15782:15785   */\n      0xe0\n        /* \"#utility.yul\":15778:15798   */\n      shl\n        /* \"#utility.yul\":15775:15776   */\n      0x00\n        /* \"#utility.yul\":15768:15799   */\n      mstore\n        /* \"#utility.yul\":15818:15822   */\n      0x32\n        /* \"#utility.yul\":15815:15816   */\n      0x04\n        /* \"#utility.yul\":15808:15823   */\n      mstore\n        /* \"#utility.yul\":15842:15846   */\n      0x24\n        /* \"#utility.yul\":15839:15840   */\n      0x00\n        /* \"#utility.yul\":15832:15847   */\n      revert\n        /* \"#utility.yul\":15858:15993   */\n    tag_342:\n        /* \"#utility.yul\":15897:15900   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":15918:15935   */\n      dup3\n      eq\n        /* \"#utility.yul\":15915:15958   */\n      iszero\n      tag_547\n      jumpi\n        /* \"#utility.yul\":15938:15956   */\n      tag_547\n      tag_417\n      jump\t// in\n    tag_547:\n      pop\n        /* \"#utility.yul\":15985:15986   */\n      0x01\n        /* \"#utility.yul\":15974:15987   */\n      add\n      swap1\n        /* \"#utility.yul\":15858:15993   */\n      jump\t// out\n        /* \"#utility.yul\":15998:16270   */\n    tag_377:\n        /* \"#utility.yul\":16068:16074   */\n      0x00\n        /* \"#utility.yul\":16121:16123   */\n      0x20\n        /* \"#utility.yul\":16109:16118   */\n      dup3\n        /* \"#utility.yul\":16100:16107   */\n      dup5\n        /* \"#utility.yul\":16096:16119   */\n      sub\n        /* \"#utility.yul\":16092:16124   */\n      slt\n        /* \"#utility.yul\":16089:16141   */\n      iszero\n      tag_549\n      jumpi\n        /* \"#utility.yul\":16137:16138   */\n      0x00\n        /* \"#utility.yul\":16134:16135   */\n      dup1\n        /* \"#utility.yul\":16127:16139   */\n      revert\n        /* \"#utility.yul\":16089:16141   */\n    tag_549:\n        /* \"#utility.yul\":16169:16178   */\n      dup2\n        /* \"#utility.yul\":16163:16179   */\n      mload\n        /* \"#utility.yul\":16188:16240   */\n      tag_424\n        /* \"#utility.yul\":16234:16239   */\n      dup2\n        /* \"#utility.yul\":16188:16240   */\n      tag_412\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220c401cdfdb6c7319ff085bf05c218c39e58637c949e8770dc1a817d7c936d100b64736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1950": {
									"entryPoint": null,
									"id": 1950,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_2475": {
									"entryPoint": null,
									"id": 2475,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_struct$_InternalParams_$1633_memory_ptrt_struct$_DelayedProtocolParams_$1481_memory_ptr_fromMemory": {
									"entryPoint": 836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1066,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_DelayedProtocolParams_$1481_memory_ptr__to_t_struct$_DelayedProtocolParams_$1481_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 756,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_contract_IProtocolGovernance": {
									"entryPoint": 811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3379:31",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:31",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "55:302:31",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "65:19:31",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "81:2:31",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "75:5:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "75:9:31"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "65:6:31"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "93:33:31",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "115:6:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "123:2:31",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "111:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:15:31"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "97:10:31",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "209:111:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "230:1:31",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "237:3:31",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "242:10:31",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "233:3:31"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "233:20:31"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "223:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "223:31:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "223:31:31"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "274:1:31",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "277:4:31",
																					"type": "",
																					"value": "0x41"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "267:15:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "267:15:31"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "302:1:31",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "305:4:31",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "295:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "295:15:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "295:15:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "144:10:31"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "164:2:31",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "168:1:31",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "160:3:31"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "160:10:31"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "172:1:31",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "156:3:31"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "156:18:31"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "141:2:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "141:34:31"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "180:10:31"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "192:6:31"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "177:2:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:22:31"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "138:2:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "138:62:31"
															},
															"nodeType": "YulIf",
															"src": "135:185:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "336:2:31",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "340:10:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "329:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "329:22:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "329:22:31"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "44:6:31",
														"type": ""
													}
												],
												"src": "14:343:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "428:86:31",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "492:16:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "501:1:31",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "504:1:31",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "494:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "494:12:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "494:12:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "451:5:31"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:31"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "477:3:31",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "482:1:31",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "473:3:31"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "473:11:31"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "486:1:31",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "469:3:31"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "469:19:31"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "458:3:31"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "458:31:31"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "448:2:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "448:42:31"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "441:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "441:50:31"
															},
															"nodeType": "YulIf",
															"src": "438:70:31"
														}
													]
												},
												"name": "validator_revert_contract_IProtocolGovernance",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "417:5:31",
														"type": ""
													}
												],
												"src": "362:152:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "688:1316:31",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "698:33:31",
															"value": {
																"arguments": [
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "712:7:31"
																	},
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "721:9:31"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "708:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "708:23:31"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "702:2:31",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "756:16:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "765:1:31",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "768:1:31",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "758:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "758:12:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "758:12:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "747:2:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "751:3:31",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "743:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "743:12:31"
															},
															"nodeType": "YulIf",
															"src": "740:32:31"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:31",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:31",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "788:2:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "792:4:31",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "784:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "784:13:31"
															},
															"nodeType": "YulIf",
															"src": "781:33:31"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "823:23:31",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "843:2:31",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "837:5:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "837:9:31"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "827:6:31",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "855:35:31",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "877:6:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "885:4:31",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "873:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "873:17:31"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "859:10:31",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "973:111:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "994:1:31",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1001:3:31",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1006:10:31",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "997:3:31"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "997:20:31"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "987:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "987:31:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "987:31:31"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1038:1:31",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1041:4:31",
																					"type": "",
																					"value": "0x41"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1031:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1031:15:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1031:15:31"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1066:1:31",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1069:4:31",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1059:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1059:15:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1059:15:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "908:10:31"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "928:2:31",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "932:1:31",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "924:3:31"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "924:10:31"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "936:1:31",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "920:3:31"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "920:18:31"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "905:2:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "905:34:31"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "944:10:31"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "956:6:31"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "941:2:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "941:22:31"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "902:2:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "902:62:31"
															},
															"nodeType": "YulIf",
															"src": "899:185:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1100:2:31",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1104:10:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1093:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "1093:22:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1093:22:31"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1124:29:31",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1143:9:31"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1137:5:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "1137:16:31"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1128:5:31",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1208:5:31"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IProtocolGovernance",
																	"nodeType": "YulIdentifier",
																	"src": "1162:45:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "1162:52:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1162:52:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1230:6:31"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1238:5:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1223:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "1223:21:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1223:21:31"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1253:40:31",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1278:9:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1289:2:31",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1274:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1274:18:31"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1268:5:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "1268:25:31"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1257:7:31",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1348:7:31"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IProtocolGovernance",
																	"nodeType": "YulIdentifier",
																	"src": "1302:45:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "1302:54:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1302:54:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1376:6:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1384:2:31",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1372:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1372:15:31"
																	},
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1389:7:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1365:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "1365:32:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1365:32:31"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1406:40:31",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1431:9:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1442:2:31",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1427:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1427:18:31"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1421:5:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "1421:25:31"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "1410:7:31",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "1501:7:31"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IProtocolGovernance",
																	"nodeType": "YulIdentifier",
																	"src": "1455:45:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "1455:54:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1455:54:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1529:6:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1537:2:31",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1525:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1525:15:31"
																	},
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "1542:7:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1518:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "1518:32:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1518:32:31"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1559:16:31",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1569:6:31"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1559:6:31"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1613:16:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1622:1:31",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1625:1:31",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1615:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1615:12:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1615:12:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1595:2:31"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1603:2:31",
																						"type": "",
																						"value": "95"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1599:3:31"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1599:7:31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1591:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1591:16:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1609:2:31",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1587:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "1587:25:31"
															},
															"nodeType": "YulIf",
															"src": "1584:45:31"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1638:32:31",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1653:15:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "1653:17:31"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nodeType": "YulTypedName",
																	"src": "1642:7:31",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1679:42:31",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1704:9:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1715:4:31",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1700:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1700:20:31"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1694:5:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "1694:27:31"
															},
															"variables": [
																{
																	"name": "value_4",
																	"nodeType": "YulTypedName",
																	"src": "1683:7:31",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_4",
																		"nodeType": "YulIdentifier",
																		"src": "1776:7:31"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IProtocolGovernance",
																	"nodeType": "YulIdentifier",
																	"src": "1730:45:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "1730:54:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1730:54:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_3",
																		"nodeType": "YulIdentifier",
																		"src": "1800:7:31"
																	},
																	{
																		"name": "value_4",
																		"nodeType": "YulIdentifier",
																		"src": "1809:7:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1793:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "1793:24:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1793:24:31"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1826:41:31",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1851:9:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1862:3:31",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1847:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1847:19:31"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1841:5:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "1841:26:31"
															},
															"variables": [
																{
																	"name": "value_5",
																	"nodeType": "YulTypedName",
																	"src": "1830:7:31",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_5",
																		"nodeType": "YulIdentifier",
																		"src": "1922:7:31"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IProtocolGovernance",
																	"nodeType": "YulIdentifier",
																	"src": "1876:45:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "1876:54:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1876:54:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_3",
																				"nodeType": "YulIdentifier",
																				"src": "1950:7:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1959:2:31",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1946:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1946:16:31"
																	},
																	{
																		"name": "value_5",
																		"nodeType": "YulIdentifier",
																		"src": "1964:7:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1939:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "1939:33:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1939:33:31"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1981:17:31",
															"value": {
																"name": "value_3",
																"nodeType": "YulIdentifier",
																"src": "1991:7:31"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1981:6:31"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_InternalParams_$1633_memory_ptrt_struct$_DelayedProtocolParams_$1481_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "646:9:31",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "657:7:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "669:6:31",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "677:6:31",
														"type": ""
													}
												],
												"src": "519:1485:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2130:476:31",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2140:12:31",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2150:2:31",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2144:2:31",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2168:9:31"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2179:2:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2161:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "2161:21:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2161:21:31"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2191:27:31",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2211:6:31"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2205:5:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "2205:13:31"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2195:6:31",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2238:9:31"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2249:2:31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2234:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2234:18:31"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2254:6:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2227:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "2227:34:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2227:34:31"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2270:10:31",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2279:1:31",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2274:1:31",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2339:90:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2368:9:31"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2379:1:31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2364:3:31"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2364:17:31"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2383:2:31",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2360:3:31"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2360:26:31"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "2402:6:31"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "2410:1:31"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "2398:3:31"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2398:14:31"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "2414:2:31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2394:3:31"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2394:23:31"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2388:5:31"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2388:30:31"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2353:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2353:66:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2353:66:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2300:1:31"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2303:6:31"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2297:2:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "2297:13:31"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2311:19:31",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2313:15:31",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2322:1:31"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2325:2:31"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2318:3:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2318:10:31"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2313:1:31"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2293:3:31",
																"statements": []
															},
															"src": "2289:140:31"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2463:66:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2492:9:31"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "2503:6:31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2488:3:31"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2488:22:31"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2512:2:31",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2484:3:31"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2484:31:31"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:31",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2477:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2477:42:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2477:42:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2444:1:31"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2447:6:31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2441:2:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "2441:13:31"
															},
															"nodeType": "YulIf",
															"src": "2438:91:31"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2538:62:31",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2554:9:31"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2573:6:31"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2581:2:31",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2569:3:31"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2569:15:31"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2590:2:31",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2586:3:31"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2586:7:31"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2565:3:31"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2565:29:31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2550:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2550:45:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2597:2:31",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2546:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "2546:54:31"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2538:4:31"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2099:9:31",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2110:6:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2121:4:31",
														"type": ""
													}
												],
												"src": "2009:597:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2790:202:31",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2800:26:31",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2812:9:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2823:2:31",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2808:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "2808:18:31"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2800:4:31"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2835:29:31",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2853:3:31",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2858:1:31",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2849:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2849:11:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2862:1:31",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2845:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "2845:19:31"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2839:2:31",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2880:9:31"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2901:6:31"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "2895:5:31"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2895:13:31"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2910:2:31"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2891:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2891:22:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2873:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "2873:41:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2873:41:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2934:9:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2945:4:31",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2930:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2930:20:31"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value0",
																								"nodeType": "YulIdentifier",
																								"src": "2966:6:31"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2974:4:31",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2962:3:31"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2962:17:31"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "2956:5:31"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2956:24:31"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2982:2:31"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2952:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2952:33:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2923:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "2923:63:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2923:63:31"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_DelayedProtocolParams_$1481_memory_ptr__to_t_struct$_DelayedProtocolParams_$1481_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2759:9:31",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2770:6:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2781:4:31",
														"type": ""
													}
												],
												"src": "2611:381:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3052:325:31",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3062:22:31",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3076:1:31",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3079:4:31"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3072:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "3072:12:31"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3062:6:31"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3093:38:31",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3123:4:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3129:1:31",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3119:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "3119:12:31"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3097:18:31",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3170:31:31",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3172:27:31",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3186:6:31"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3194:4:31",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3182:3:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3182:17:31"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3172:6:31"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3150:18:31"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3143:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "3143:26:31"
															},
															"nodeType": "YulIf",
															"src": "3140:61:31"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3260:111:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3281:1:31",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3288:3:31",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3293:10:31",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3284:3:31"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3284:20:31"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3274:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3274:31:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3274:31:31"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3325:1:31",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3328:4:31",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3318:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3318:15:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3318:15:31"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3353:1:31",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3356:4:31",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3346:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3346:15:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3346:15:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3216:18:31"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3239:6:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3247:2:31",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3236:2:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3236:14:31"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3213:2:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "3213:38:31"
															},
															"nodeType": "YulIf",
															"src": "3210:161:31"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3032:4:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3041:6:31",
														"type": ""
													}
												],
												"src": "2997:380:31"
											}
										]
									},
									"contents": "{\n    { }\n    function allocate_memory() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 64)\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n    }\n    function validator_revert_contract_IProtocolGovernance(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_InternalParams_$1633_memory_ptrt_struct$_DelayedProtocolParams_$1481_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        let _1 := sub(dataEnd, headStart)\n        if slt(_1, 160) { revert(0, 0) }\n        if slt(_1, 0x60) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x60)\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n        let value := mload(headStart)\n        validator_revert_contract_IProtocolGovernance(value)\n        mstore(memPtr, value)\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_contract_IProtocolGovernance(value_1)\n        mstore(add(memPtr, 32), value_1)\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_contract_IProtocolGovernance(value_2)\n        mstore(add(memPtr, 64), value_2)\n        value0 := memPtr\n        if slt(add(_1, not(95)), 64) { revert(0, 0) }\n        let value_3 := allocate_memory()\n        let value_4 := mload(add(headStart, 0x60))\n        validator_revert_contract_IProtocolGovernance(value_4)\n        mstore(value_3, value_4)\n        let value_5 := mload(add(headStart, 128))\n        validator_revert_contract_IProtocolGovernance(value_5)\n        mstore(add(value_3, 32), value_5)\n        value1 := value_3\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_struct$_DelayedProtocolParams_$1481_memory_ptr__to_t_struct$_DelayedProtocolParams_$1481_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(mload(value0), _1))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), _1))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 31,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2492 CODESIZE SUB DUP1 PUSH3 0x2492 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x344 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x20AD PUSH1 0xF1 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x7A SWAP2 SWAP1 PUSH3 0x42A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20AD PUSH1 0xF1 SHL DUP2 MSTORE POP SWAP1 PUSH3 0xDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x7A SWAP2 SWAP1 PUSH3 0x42A JUMP JUMPDEST POP PUSH1 0x40 DUP1 DUP3 ADD MLOAD DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH2 0x20AD PUSH1 0xF1 SHL PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x122 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x7A SWAP2 SWAP1 PUSH3 0x42A JUMP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD PUSH1 0x1 DUP1 SLOAD DUP5 AND SWAP2 DUP6 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 SWAP4 DUP5 ADD MLOAD PUSH1 0x2 DUP1 SLOAD SWAP1 SWAP4 AND SWAP1 DUP5 AND OR DUP3 SSTORE DUP5 MLOAD DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE SWAP2 DUP5 MSTORE PUSH2 0x20AD PUSH1 0xF1 SHL SWAP1 DUP5 ADD MSTORE AND PUSH3 0x1A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x7A SWAP2 SWAP1 PUSH3 0x42A JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20AD PUSH1 0xF1 SHL DUP2 MSTORE POP SWAP1 PUSH3 0x1FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x7A SWAP2 SWAP1 PUSH3 0x42A JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 DUP6 ADD MLOAD SWAP1 SWAP2 AND DUP3 DUP5 ADD MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD PUSH3 0x245 SWAP3 PUSH1 0xD SWAP3 ADD SWAP1 PUSH3 0x24E JUMP JUMPDEST POP POP POP PUSH3 0x4BF JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x25C SWAP1 PUSH3 0x482 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x280 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x2CB JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x29B JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2CB JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2CB JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2CB JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2AE JUMP JUMPDEST POP PUSH3 0x2D9 SWAP3 SWAP2 POP PUSH3 0x2DD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2D9 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2DE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH3 0x325 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 SUB PUSH1 0xA0 DUP2 SLT ISZERO PUSH3 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 DUP2 SLT ISZERO PUSH3 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH3 0x399 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE DUP5 MLOAD PUSH3 0x3A9 DUP2 PUSH3 0x32B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP6 ADD MLOAD PUSH3 0x3BB DUP2 PUSH3 0x32B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP6 ADD MLOAD PUSH3 0x3D0 DUP2 PUSH3 0x32B JUMP JUMPDEST PUSH1 0x40 DUP3 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 POP PUSH1 0x5F NOT DUP3 ADD SLT ISZERO PUSH3 0x3ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x3F8 PUSH3 0x2F4 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MLOAD PUSH3 0x408 DUP2 PUSH3 0x32B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH3 0x41A DUP2 PUSH3 0x32B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP5 SWAP2 SWAP4 POP SWAP1 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x459 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH3 0x43B JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH3 0x46C JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x497 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x4B9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FC3 DUP1 PUSH3 0x4CF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75D0C0DC GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA0A8E460 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA0A8E460 EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0xB2FE31AD EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0xC2CBDC67 EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0xD34CC380 EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0xD4A07D34 EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0xE4AF6E79 EQ PUSH2 0x3BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x75D0C0DC EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x7AC46FBB EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x86C6BE3E EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x8860D248 EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x98347A5D EQ PUSH2 0x35C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1C7F4C73 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x1C7F4C73 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x25281714 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x511CE798 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x59F3DAE7 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x66C153E9 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x6707ACEE EQ PUSH2 0x261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x6A46239 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x9946538 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xBDEDD56 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0xE3E80AC EQ PUSH2 0x1AF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x18E1 JUMP JUMPDEST PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH5 0x312E312E3 PUSH1 0xDC SHL JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0x196E JUMP JUMPDEST PUSH2 0x3F7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19A PUSH2 0x1AA CALLDATASIZE PUSH1 0x4 PUSH2 0x19E0 JUMP JUMPDEST PUSH2 0x5E9 JUMP JUMPDEST PUSH20 0x556E6956335661756C74476F7665726E616E6365 PUSH1 0x60 SHL PUSH2 0x179 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x179 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x19F9 JUMP JUMPDEST PUSH2 0x6DF JUMP JUMPDEST PUSH2 0x179 PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x19E0 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x21A PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0x19E0 JUMP JUMPDEST PUSH2 0x7AC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 MLOAD PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x23D CALLDATASIZE PUSH1 0x4 PUSH2 0x1A54 JUMP JUMPDEST PUSH2 0x89A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x166 JUMP JUMPDEST PUSH2 0x179 PUSH2 0x26F CALLDATASIZE PUSH1 0x4 PUSH2 0x19E0 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x289 PUSH2 0x97F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST PUSH2 0x2E9 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 SLOAD DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 SLOAD AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST PUSH2 0x2E9 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x4 SLOAD DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x5 SLOAD AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x21A PUSH2 0x357 CALLDATASIZE PUSH1 0x4 PUSH2 0x19E0 JUMP JUMPDEST PUSH2 0x9A1 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x9FE JUMP JUMPDEST PUSH2 0x289 PUSH2 0xB06 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x37A CALLDATASIZE PUSH1 0x4 PUSH2 0x1BC9 JUMP JUMPDEST PUSH2 0xB19 JUMP JUMPDEST PUSH2 0x387 PUSH2 0xC24 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD MLOAD AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH2 0x166 JUMP JUMPDEST PUSH2 0x387 PUSH2 0xD03 JUMP JUMPDEST PUSH2 0x19A PUSH2 0xD24 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH2 0x179 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D1 DUP3 PUSH2 0xE49 JUMP JUMPDEST DUP1 PUSH2 0x3EC JUMPI POP PUSH4 0xA2E9C513 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3FF PUSH2 0xE7F JUMP JUMPDEST DUP1 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x20AD PUSH1 0xF1 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20AD PUSH1 0xF1 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x49F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST POP PUSH1 0x40 DUP1 DUP3 ADD MLOAD DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH2 0x20AD PUSH1 0xF1 SHL PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST POP DUP1 MLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD PUSH1 0x4 DUP1 SLOAD DUP5 AND SWAP2 DUP6 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE PUSH1 0x40 DUP1 DUP7 ADD MLOAD PUSH1 0x5 DUP1 SLOAD SWAP1 SWAP6 AND SWAP1 DUP7 AND OR SWAP1 SWAP4 SSTORE PUSH1 0x0 SLOAD DUP4 MLOAD PUSH4 0xBBA32939 PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 MLOAD SWAP5 AND SWAP4 PUSH4 0xBBA32939 SWAP4 DUP1 DUP4 ADD SWAP4 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x562 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x576 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x59A SWAP2 SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST PUSH2 0x5A4 SWAP1 TIMESTAMP PUSH2 0x1C10 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP2 ORIGIN SWAP2 PUSH32 0x887CAB3184F7C02B16978AB31F8ACEE05979F59FC3DA6ABE5BF71105EC3179D SWAP2 PUSH2 0x5DE SWAP2 DUP7 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x5F2 DUP2 PUSH2 0xF37 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 SWAP2 CALLER SWAP2 ORIGIN SWAP2 PUSH32 0xA363920F84C4A3E8F1FBB02A2F8B5F0D7438886CB05A7D98882AF9BD66D16426 SWAP2 PUSH2 0x633 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x65F SWAP1 PUSH2 0x1C65 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6AC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x681 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6AC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x68F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x6C4 SWAP2 SWAP1 PUSH2 0x1CAC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 MLOAD PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP JUMP JUMPDEST PUSH1 0x1 PUSH2 0x6EE PUSH1 0x20 DUP4 ADD DUP4 PUSH2 0x1CF8 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND GT PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x4C494D55 PUSH1 0xE0 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x730 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST POP PUSH2 0x75A DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x746 SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x1028 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD DUP4 SWAP2 CALLER SWAP2 ORIGIN SWAP2 PUSH32 0x4CCEB02B6B172E9C19155FCCC4D799437A0D50AD922EA9F0F41B1CB3A17B12E8 SWAP2 PUSH2 0x7A0 SWAP2 DUP8 SWAP2 PUSH2 0x1D32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x7D4 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST ISZERO ISZERO SWAP1 POP PUSH2 0x7F0 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x809 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x835 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x882 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x857 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x882 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x865 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0x1CAC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x8A8 DUP7 PUSH2 0x1134 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1912128B PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP5 POP SWAP3 POP DUP4 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x1912128B SWAP1 PUSH2 0x8E2 SWAP1 DUP6 SWAP1 DUP12 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x1D9B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x910 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH3 0xFFFFFF DUP10 AND PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP4 POP ORIGIN SWAP3 POP PUSH32 0x8A4513C05D15DF8ECE912856923273E166E39F5C9C2B43D2B38594023494A0E0 SWAP2 DUP12 SWAP2 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x96D SWAP3 SWAP2 DUP13 SWAP1 DUP9 SWAP1 DUP11 SWAP1 PUSH2 0x1DDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3F2 PUSH20 0x556E6956335661756C74476F7665726E616E6365 PUSH1 0x60 SHL PUSH2 0x1325 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x9C9 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST ISZERO ISZERO SWAP1 POP PUSH2 0x9E5 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2A DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x809 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST PUSH2 0xA06 PUSH2 0x1391 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ORIGIN PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xB57A42E9F64DFC9C6B9E412EA001A45C0E4D3F26C8D160381A418FF92269D052 PUSH1 0xD DUP1 SLOAD PUSH2 0xA48 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA74 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAC1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA96 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAC1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAA4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xAD9 SWAP2 SWAP1 PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD MLOAD AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3F2 PUSH5 0x312E312E3 PUSH1 0xDC SHL PUSH2 0x1325 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB28 PUSH1 0x20 DUP4 ADD DUP4 PUSH2 0x1E83 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20AD PUSH1 0xF1 SHL DUP2 MSTORE POP SWAP1 PUSH2 0xB6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xB7F PUSH1 0x40 DUP4 ADD PUSH1 0x20 DUP5 ADD PUSH2 0x1E83 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20AD PUSH1 0xF1 SHL DUP2 MSTORE POP SWAP1 PUSH2 0xBC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST POP PUSH2 0xBEC DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBD8 SWAP2 SWAP1 PUSH2 0x1ED5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x1445 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x40 MLOAD CALLER SWAP2 ORIGIN SWAP2 PUSH32 0x88E619A5DCE560314FDD4895B08C256978617047A99FFC847D45400DF1F377A7 SWAP2 PUSH2 0x5DE SWAP2 DUP7 SWAP2 SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xE DUP1 SLOAD PUSH2 0xC45 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST ISZERO ISZERO SWAP1 POP PUSH2 0xC65 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH2 0xC72 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC9E SWAP1 PUSH2 0x1C65 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCEB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCC0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCEB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCCE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xD DUP1 SLOAD PUSH2 0xC72 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST PUSH2 0xD2C PUSH2 0xE7F JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x13955313 PUSH1 0xE2 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH2 0xD68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST POP PUSH1 0x6 SLOAD TIMESTAMP LT ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5453 PUSH1 0xF0 SHL DUP2 MSTORE POP SWAP1 PUSH2 0xDA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP1 SLOAD DUP3 DUP7 AND SWAP1 DUP8 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x2 DUP1 SLOAD SWAP8 DUP3 AND SWAP8 DUP10 AND DUP9 OR SWAP1 SSTORE PUSH1 0x6 SWAP9 SWAP1 SWAP9 SSTORE SWAP8 DUP7 AND SWAP1 SWAP9 SSTORE DUP5 AND SWAP1 SSTORE SWAP3 SWAP1 SWAP2 AND SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP3 ADD MSTORE CALLER SWAP1 ORIGIN SWAP1 PUSH32 0xEF3E4BC9725FA684957D7DE03C6DCD01078EE86CF78CEEF25C5F8346DF69CC99 SWAP1 PUSH1 0x60 ADD PUSH2 0xAFC JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x3EC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xEFFDA0F5 PUSH1 0xE0 SHL EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x935E01B PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x24D7806C SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xED6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEFA SWAP2 SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x232921 PUSH1 0xE9 SHL DUP2 MSTORE POP SWAP1 PUSH2 0xF34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xF40 DUP2 PUSH2 0x1520 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE PUSH1 0x4 DUP4 MSTORE PUSH4 0x13955313 PUSH1 0xE2 SHL SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP2 PUSH2 0xF8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST POP DUP1 TIMESTAMP LT ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5453 PUSH1 0xF0 SHL DUP2 MSTORE POP SWAP1 PUSH2 0xFCB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP2 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0xFF3 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST PUSH2 0xFFE SWAP3 SWAP2 SWAP1 PUSH2 0x1793 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x1016 SWAP2 PUSH2 0x181E JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH2 0x1031 DUP3 PUSH2 0x1520 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD PUSH2 0x1050 SWAP3 DUP5 ADD SWAP1 PUSH2 0x1858 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x106A SWAP1 PUSH2 0x1C65 JUMP JUMPDEST ISZERO SWAP1 POP PUSH2 0x1078 JUMPI PUSH1 0x1 PUSH2 0x107B JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND SWAP1 POP DUP1 PUSH1 0x0 DUP1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBBA32939 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1109 SWAP2 SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST PUSH2 0x1113 SWAP2 SWAP1 PUSH2 0x1F20 JUMP JUMPDEST PUSH2 0x111D SWAP1 TIMESTAMP PUSH2 0x1C10 JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP4 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x63E85D2D PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 SWAP1 PUSH4 0x63E85D2D SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1195 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11B9 SWAP2 SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x232921 PUSH1 0xE9 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x11F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1112EEE7 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 SWAP2 PUSH4 0x88977738 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x123A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x124E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1272 SWAP2 SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST PUSH2 0x127D SWAP1 PUSH1 0x1 PUSH2 0x1C10 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP4 POP PUSH2 0x1296 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x16F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5C4FDF9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP6 POP SWAP1 DUP3 AND SWAP1 PUSH4 0x5C4FDF9 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x131D SWAP2 SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x20 PUSH1 0x0 JUMPDEST PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1383 JUMPI DUP4 DUP2 PUSH1 0x20 DUP2 LT PUSH2 0x1366 JUMPI PUSH2 0x1366 PUSH2 0x1F3F JUMP JUMPDEST BYTE PUSH2 0x1373 JUMPI DUP1 SWAP2 POP PUSH2 0x1383 JUMP JUMPDEST PUSH2 0x137C DUP2 PUSH2 0x1F55 JUMP JUMPDEST SWAP1 POP PUSH2 0x134B JUMP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x1399 PUSH2 0xE7F JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x13955313 PUSH1 0xE2 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH2 0x13D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST POP PUSH1 0xF SLOAD TIMESTAMP LT ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5453 PUSH1 0xF0 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x1415 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST POP PUSH1 0xE PUSH1 0xD SWAP1 DUP1 SLOAD PUSH2 0x1426 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST PUSH2 0x1431 SWAP3 SWAP2 SWAP1 PUSH2 0x1793 JUMP JUMPDEST POP PUSH2 0x143E PUSH1 0xE PUSH1 0x0 PUSH2 0x181E JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF SSTORE JUMP JUMPDEST PUSH2 0x144D PUSH2 0xE7F JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD DUP1 SLOAD PUSH2 0x145C SWAP1 PUSH2 0x1C65 JUMP JUMPDEST ISZERO SWAP1 POP PUSH2 0x146A JUMPI PUSH1 0x1 PUSH2 0x146D JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND SWAP1 POP DUP2 PUSH1 0xE SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1488 SWAP3 SWAP2 SWAP1 PUSH2 0x1858 JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xBBA32939 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD DUP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xBBA32939 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1505 SWAP2 SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST PUSH2 0x150F SWAP2 SWAP1 PUSH2 0x1F20 JUMP JUMPDEST PUSH2 0x1519 SWAP1 TIMESTAMP PUSH2 0x1C10 JUMP JUMPDEST PUSH1 0xF SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x935E01B PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x24D7806C SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1563 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1577 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x159B SWAP2 SWAP1 PUSH2 0x1EFE JUMP JUMPDEST DUP1 PUSH2 0x1628 JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x20604BF PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x81812FC SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x161D SWAP2 SWAP1 PUSH2 0x1F70 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x16B5 JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1672 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1686 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16AA SWAP2 SWAP1 PUSH2 0x1F70 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x232921 PUSH1 0xE9 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x16EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH20 0x3D602D80600A3D3981F3363D3D373D3D3D363D73 PUSH1 0x60 SHL DUP2 MSTORE DUP4 PUSH1 0x60 SHL PUSH1 0x14 DUP3 ADD MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x88 SHL PUSH1 0x28 DUP3 ADD MSTORE DUP3 PUSH1 0x37 DUP3 PUSH1 0x0 CREATE2 SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313136373A2063726561746532206661696C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x441 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x179F SWAP1 PUSH2 0x1C65 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x17C1 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x180E JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x17D2 JUMPI DUP1 SLOAD DUP6 SSTORE PUSH2 0x180E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x180E JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x180E JUMPI DUP3 SLOAD DUP3 SSTORE SWAP2 PUSH1 0x1 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x17F3 JUMP JUMPDEST POP PUSH2 0x181A SWAP3 SWAP2 POP PUSH2 0x18CC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x182A SWAP1 PUSH2 0x1C65 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x183A JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xF34 SWAP2 SWAP1 PUSH2 0x18CC JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1864 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1886 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x180E JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x189F JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x180E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x180E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x180E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x18B1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x181A JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x18CD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x190B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1951 JUMPI PUSH2 0x1951 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1980 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x19A3 JUMPI PUSH2 0x19A3 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 CALLDATALOAD PUSH2 0x19B1 DUP2 PUSH2 0x1959 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x19C1 DUP2 PUSH2 0x1959 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH2 0x19D4 DUP2 PUSH2 0x1959 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 SUB PUSH1 0x40 DUP2 SLT ISZERO PUSH2 0x1A0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 PUSH1 0x1F NOT DUP3 ADD SLT ISZERO PUSH2 0x1A23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1A3C DUP2 PUSH2 0x1959 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1A3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1A6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1A82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 DUP3 DUP3 GT ISZERO PUSH2 0x1AAA JUMPI PUSH2 0x1AAA PUSH2 0x1912 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL SWAP3 POP PUSH2 0x1ABB DUP2 DUP5 ADD PUSH2 0x1928 JUMP JUMPDEST DUP3 DUP2 MSTORE SWAP3 DUP5 ADD DUP2 ADD SWAP3 DUP2 DUP2 ADD SWAP1 DUP12 DUP6 GT ISZERO PUSH2 0x1AD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP5 DUP7 LT ISZERO PUSH2 0x1AFF JUMPI DUP6 CALLDATALOAD SWAP4 POP PUSH2 0x1AEF DUP5 PUSH2 0x1959 JUMP JUMPDEST DUP4 DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x1ADA JUMP JUMPDEST SWAP9 POP PUSH2 0x1B0E SWAP1 POP DUP10 DUP3 ADD PUSH2 0x1A31 JUMP JUMPDEST SWAP7 POP POP POP POP POP PUSH2 0x1B20 PUSH1 0x40 DUP7 ADD PUSH2 0x1A41 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B2E PUSH1 0x60 DUP7 ADD PUSH2 0x1A31 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B5F JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1B43 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1B71 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x190B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B39 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x3EC DUP3 DUP5 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD DUP3 AND SWAP1 DUP5 ADD MSTORE PUSH1 0x40 SWAP2 DUP3 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1C23 JUMPI PUSH2 0x1C23 PUSH2 0x1BFA JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x1C58 DUP3 DUP6 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD DUP3 AND SWAP1 DUP5 ADD MSTORE PUSH1 0x40 SWAP2 DUP3 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1C79 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1BDB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xF34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1CE1 JUMPI PUSH2 0x1CE1 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 MLOAD PUSH2 0x1CEF DUP2 PUSH2 0x1C9A JUMP JUMPDEST DUP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x190B DUP2 PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x20 DUP2 ADD DUP3 CALLDATALOAD PUSH2 0x1D24 DUP2 PUSH2 0x1C9A JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 SWAP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD DUP4 CALLDATALOAD PUSH2 0x1D41 DUP2 PUSH2 0x1C9A JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D90 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1D6B JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1DB4 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1D57 JUMP JUMPDEST PUSH3 0xFFFFFF SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1DED PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x1D57 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1DFF DUP2 DUP9 PUSH2 0x1B39 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND PUSH1 0x40 DUP6 ADD MSTORE SWAP5 SWAP1 SWAP6 AND PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1E59 JUMPI PUSH2 0x1E59 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 MLOAD PUSH2 0x1E67 DUP2 PUSH2 0x1959 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x1E77 DUP2 PUSH2 0x1959 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x190B DUP2 PUSH2 0x1959 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1EAB DUP2 PUSH2 0x1959 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE PUSH1 0x20 DUP3 ADD CALLDATALOAD SWAP1 PUSH2 0x1EC7 DUP3 PUSH2 0x1959 JUMP JUMPDEST DUP1 DUP3 AND PUSH1 0x20 DUP6 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x3EC DUP3 DUP5 PUSH2 0x1EA0 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x1EF1 DUP3 DUP6 PUSH2 0x1EA0 JUMP JUMPDEST DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x190B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1F3A JUMPI PUSH2 0x1F3A PUSH2 0x1BFA JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1F69 JUMPI PUSH2 0x1F69 PUSH2 0x1BFA JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x190B DUP2 PUSH2 0x1959 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 ADD 0xCD REVERT 0xB6 0xC7 BALANCE SWAP16 CREATE DUP6 0xBF SDIV 0xC2 XOR 0xC3 SWAP15 PC PUSH4 0x7C949E87 PUSH17 0xDC1A817D7C936D100B64736F6C63430008 MULMOD STOP CALLER ",
							"sourceMap": "391:7055:29:-:0;;;644:446;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1799:34:30;;1850:30;;;;;;;;;;;;-1:-1:-1;;;1850:30:30;;;;773:15:29;;-1:-1:-1;;;;;1791:57:30;1783:98;;;;-1:-1:-1;;;1783:98:30;;;;;;;;:::i;:::-;;;;;;;;;;1945:1;-1:-1:-1;;;;;1900:47:30;1908:15;:24;;;-1:-1:-1;;;;;1900:47:30;;;1949:30;;;;;;;;;;;;;-1:-1:-1;;;1949:30:30;;;1892:88;;;;;-1:-1:-1;;;1892:88:30;;;;;;;;:::i;:::-;-1:-1:-1;2007:25:30;;;;;2049:30;;;;;;;;;;;-1:-1:-1;;;2049:30:30;;;;-1:-1:-1;;;;;1999:48:30;1991:89;;;;-1:-1:-1;;;1991:89:30;;;;;;;;:::i;:::-;-1:-1:-1;2091:33:30;;:15;:33;;-1:-1:-1;;;;;;2091:33:30;;;-1:-1:-1;;;;;2091:33:30;;;;;;;;;;;;-1:-1:-1;2091:33:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;822:38:29;;877:30;;;;::::1;::::0;;;;;;-1:-1:-1;;;877:30:29;;::::1;::::0;814:61:::1;806:102;;;;-1:-1:-1::0;;;806:102:29::1;;;;;;;;:::i;:::-;;977:1;-1:-1:-1::0;;;;;927:52:29::1;935:22;:29;;;-1:-1:-1::0;;;;;927:52:29::1;;;981:30;;;;;;;;;;;;;-1:-1:-1::0;;;981:30:29::1;;::::0;919:93:::1;;;;;-1:-1:-1::0;;;919:93:29::1;;;;;;;;:::i;:::-;-1:-1:-1::0;1048:34:29::1;::::0;;2895:13:31;;-1:-1:-1;;;;;2891:22:31;;;1048:34:29::1;::::0;;::::1;2873:41:31::0;;;;2962:17;;;2956:24;2952:33;;;2930:20;;;2923:63;1048:34:29;;;;;;;;;2808:18:31;;;;1048:34:29;;;1023:59;;::::1;::::0;:22:::1;::::0;:59:::1;::::0;::::1;:::i;:::-;;644:446:::0;;391:7055;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;391:7055:29;;;-1:-1:-1;391:7055:29;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:343:31;81:2;75:9;;;111:15;;-1:-1:-1;;;;;141:34:31;;177:22;;;138:62;135:185;;;242:10;237:3;233:20;230:1;223:31;277:4;274:1;267:15;305:4;302:1;295:15;135:185;336:2;329:22;14:343;:::o;362:152::-;-1:-1:-1;;;;;458:31:31;;448:42;;438:70;;504:1;501;494:12;438:70;362:152;:::o;519:1485::-;669:6;677;721:9;712:7;708:23;751:3;747:2;743:12;740:32;;;768:1;765;758:12;740:32;792:4;788:2;784:13;781:33;;;810:1;807;800:12;781:33;843:2;837:9;885:4;873:17;;-1:-1:-1;;;;;905:34:31;;941:22;;;902:62;899:185;;;1006:10;1001:3;997:20;994:1;987:31;1041:4;1038:1;1031:15;1069:4;1066:1;1059:15;899:185;1100:2;1093:22;1137:16;;1162:52;1137:16;1162:52;:::i;:::-;1223:21;;1289:2;1274:18;;1268:25;1302:54;1268:25;1302:54;:::i;:::-;1384:2;1372:15;;1365:32;1442:2;1427:18;;1421:25;1455:54;1421:25;1455:54;:::i;:::-;1537:2;1525:15;;;1518:32;;;;1529:6;;-1:-1:-1;;;1591:16:31;;1587:25;1584:45;;;1625:1;1622;1615:12;1584:45;;1653:17;;:::i;:::-;1715:4;1704:9;1700:20;1694:27;1730:54;1776:7;1730:54;:::i;:::-;1793:24;;1862:3;1847:19;;1841:26;1876:54;1841:26;1876:54;:::i;:::-;1959:2;1946:16;;1939:33;519:1485;;1950:7;;-1:-1:-1;519:1485:31;;-1:-1:-1;;519:1485:31:o;2009:597::-;2121:4;2150:2;2179;2168:9;2161:21;2211:6;2205:13;2254:6;2249:2;2238:9;2234:18;2227:34;2279:1;2289:140;2303:6;2300:1;2297:13;2289:140;;;2398:14;;;2394:23;;2388:30;2364:17;;;2383:2;2360:26;2353:66;2318:10;;2289:140;;;2447:6;2444:1;2441:13;2438:91;;;2517:1;2512:2;2503:6;2492:9;2488:22;2484:31;2477:42;2438:91;-1:-1:-1;2590:2:31;2569:15;-1:-1:-1;;2565:29:31;2550:45;;;;2597:2;2546:54;;2009:597;-1:-1:-1;;;2009:597:31:o;2997:380::-;3076:1;3072:12;;;;3119;;;3140:61;;3194:4;3186:6;3182:17;3172:27;;3140:61;3247:2;3239:6;3236:14;3216:18;3213:38;3210:161;;;3293:10;3288:3;3284:20;3281:1;3274:31;3328:4;3325:1;3318:15;3356:4;3353:1;3346:15;3210:161;;2997:380;;;:::o;:::-;391:7055:29;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_bytes32ToString_1884": {
									"entryPoint": 4901,
									"id": 1884,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_commitDelayedProtocolParams_3093": {
									"entryPoint": 5009,
									"id": 3093,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_commitDelayedStrategyParams_2927": {
									"entryPoint": 3895,
									"id": 2927,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_contractName_2298": {
									"entryPoint": null,
									"id": 2298,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_contractVersion_2310": {
									"entryPoint": null,
									"id": 2310,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_createVault_2830": {
									"entryPoint": 4404,
									"id": 2830,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_requireAtLeastStrategy_2720": {
									"entryPoint": 5408,
									"id": 2720,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_requireProtocolAdmin_2735": {
									"entryPoint": 3711,
									"id": 2735,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_stageDelayedProtocolParams_3058": {
									"entryPoint": 5189,
									"id": 3058,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_stageDelayedStrategyParams_2875": {
									"entryPoint": 4136,
									"id": 2875,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@cloneDeterministic_142": {
									"entryPoint": 5875,
									"id": 142,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@commitDelayedProtocolParams_2160": {
									"entryPoint": 2558,
									"id": 2160,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@commitDelayedStrategyParams_2226": {
									"entryPoint": 1513,
									"id": 2226,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@commitInternalParams_2683": {
									"entryPoint": 3364,
									"id": 2683,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@contractNameBytes_1807": {
									"entryPoint": null,
									"id": 1807,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@contractName_1798": {
									"entryPoint": 2431,
									"id": 1798,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@contractVersionBytes_1827": {
									"entryPoint": null,
									"id": 1827,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@contractVersion_1818": {
									"entryPoint": 2822,
									"id": 1818,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@createVault_2286": {
									"entryPoint": 2202,
									"id": 2286,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"@delayedProtocolParamsTimestamp_2510": {
									"entryPoint": null,
									"id": 2510,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@delayedProtocolParams_1965": {
									"entryPoint": 3331,
									"id": 1965,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@delayedProtocolPerVaultParamsTimestamp_2501": {
									"entryPoint": null,
									"id": 2501,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@delayedStrategyParamsTimestamp_2488": {
									"entryPoint": null,
									"id": 2488,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@delayedStrategyParams_2063": {
									"entryPoint": 2465,
									"id": 2063,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@internalParamsTimestamp_2519": {
									"entryPoint": null,
									"id": 2519,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@internalParams_2529": {
									"entryPoint": null,
									"id": 2529,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@stageDelayedProtocolParams_2139": {
									"entryPoint": 2841,
									"id": 2139,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stageDelayedStrategyParams_2199": {
									"entryPoint": 1759,
									"id": 2199,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stageInternalParams_2640": {
									"entryPoint": 1015,
									"id": 2640,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stagedDelayedProtocolParams_2001": {
									"entryPoint": 3108,
									"id": 2001,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@stagedDelayedStrategyParams_2032": {
									"entryPoint": 1964,
									"id": 2032,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@stagedInternalParams_2539": {
									"entryPoint": null,
									"id": 2539,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@supportsInterface_2085": {
									"entryPoint": 966,
									"id": 2085,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2561": {
									"entryPoint": 3657,
									"id": 2561,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_334": {
									"entryPoint": null,
									"id": 334,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 6705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 8048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_addresst_uint24t_address": {
									"entryPoint": 6740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_INonfungiblePositionManager_$953": {
									"entryPoint": 7811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IOracle_$1265": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_DelayedProtocolParams_$1481_calldata_ptr": {
									"entryPoint": 7113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_DelayedProtocolParams_$1481_memory_ptr_fromMemory": {
									"entryPoint": 7716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_DelayedStrategyParams_$1484_memory_ptr_fromMemory": {
									"entryPoint": 7340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_InternalParams_$1633_memory_ptr": {
									"entryPoint": 6510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_struct$_DelayedStrategyParams_$1484_calldata_ptr": {
									"entryPoint": 6649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint32": {
									"entryPoint": 7416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_uint24": {
									"entryPoint": 6721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_array_address_dyn": {
									"entryPoint": 7511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 6969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_struct_DelayedProtocolParams_calldata": {
									"entryPoint": 7840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_struct_InternalParams": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint8__to_t_address_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_bytes_memory_ptr_t_address_t_address_t_uint256__to_t_array$_t_address_$dyn_memory_ptr_t_bytes_memory_ptr_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7642,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IUniV3Vault_$1466_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7046,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_DelayedProtocolParams_$1481_calldata_ptr__to_t_struct$_DelayedProtocolParams_$1481_memory_ptr__fromStack_reversed": {
									"entryPoint": 7893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_DelayedProtocolParams_$1481_calldata_ptr_t_uint256__to_t_struct$_DelayedProtocolParams_$1481_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 7907,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_DelayedProtocolParams_$1481_memory_ptr__to_t_struct$_DelayedProtocolParams_$1481_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_DelayedStrategyParams_$1484_calldata_ptr__to_t_struct$_DelayedStrategyParams_$1484_memory_ptr__fromStack_reversed": {
									"entryPoint": 7445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_DelayedStrategyParams_$1484_calldata_ptr_t_uint256__to_t_struct$_DelayedStrategyParams_$1484_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 7474,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_DelayedStrategyParams_$1484_memory_ptr__to_t_struct$_DelayedStrategyParams_$1484_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_InternalParams_$1633_memory_ptr__to_t_struct$_InternalParams_$1633_memory_ptr__fromStack_reversed": {
									"entryPoint": 7065,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_InternalParams_$1633_memory_ptr_t_uint256__to_t_struct$_InternalParams_$1633_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 7208,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_InternalParams_$1633_storage__to_t_struct$_InternalParams_$1633_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_uint24_t_address__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_uint24_t_address__fromStack_reversed": {
									"entryPoint": 7579,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 8021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7162,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7999,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6418,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_contract_IProtocolGovernance": {
									"entryPoint": 6489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_uint32": {
									"entryPoint": 7322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16624:31",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:31",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "83:217:31",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "129:16:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "138:1:31",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "141:1:31",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:31"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:31"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "125:2:31",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:32:31"
															},
															"nodeType": "YulIf",
															"src": "93:52:31"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:31",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:31"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "167:23:31"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "158:5:31",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:31",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:31",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:31"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:31"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "234:3:31",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "239:10:31",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:31"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:31"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:31"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:31"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:31"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "202:51:31"
															},
															"nodeType": "YulIf",
															"src": "199:71:31"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:31",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:31"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:31"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "49:9:31",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "60:7:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "72:6:31",
														"type": ""
													}
												],
												"src": "14:286:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "400:92:31",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "410:26:31",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "433:2:31",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "418:18:31"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:31"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:31"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:31"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:31"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:31"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "445:41:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "445:41:31"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "369:9:31",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "380:6:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "391:4:31",
														"type": ""
													}
												],
												"src": "305:187:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "598:76:31",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "608:26:31",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "620:9:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "631:2:31",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "616:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:18:31"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "608:4:31"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "650:9:31"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "661:6:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "643:25:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "643:25:31"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "567:9:31",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "578:6:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "589:4:31",
														"type": ""
													}
												],
												"src": "497:177:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "711:95:31",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "728:1:31",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "735:3:31",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "740:10:31",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "731:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "731:20:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "721:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "721:31:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "721:31:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "768:1:31",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "771:4:31",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "761:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "761:15:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "761:15:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "792:1:31",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "795:4:31",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "785:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "785:15:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "785:15:31"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "679:127:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "856:230:31",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "866:19:31",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "882:2:31",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "876:5:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "876:9:31"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "866:6:31"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "894:58:31",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "916:6:31"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "932:4:31"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "938:2:31",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "928:3:31"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "928:13:31"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "947:2:31",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "943:3:31"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "943:7:31"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:27:31"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "912:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "912:40:31"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "898:10:31",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1027:22:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1029:16:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1029:18:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1029:18:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "970:10:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "982:18:31",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "967:2:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "967:34:31"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1006:10:31"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1018:6:31"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1003:2:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1003:22:31"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "964:2:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "964:62:31"
															},
															"nodeType": "YulIf",
															"src": "961:88:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1065:2:31",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1069:10:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1058:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "1058:22:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1058:22:31"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "836:4:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "845:6:31",
														"type": ""
													}
												],
												"src": "811:275:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1157:86:31",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1221:16:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1230:1:31",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1233:1:31",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1223:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1223:12:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1223:12:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1180:5:31"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1191:5:31"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1206:3:31",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1211:1:31",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1202:3:31"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1202:11:31"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1215:1:31",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1198:3:31"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1198:19:31"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1187:3:31"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1187:31:31"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1177:2:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1177:42:31"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1170:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "1170:50:31"
															},
															"nodeType": "YulIf",
															"src": "1167:70:31"
														}
													]
												},
												"name": "validator_revert_contract_IProtocolGovernance",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1146:5:31",
														"type": ""
													}
												],
												"src": "1091:152:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1350:751:31",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1396:16:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1405:1:31",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1408:1:31",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1398:12:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1398:12:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1371:7:31"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1380:9:31"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1367:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1367:23:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1392:2:31",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1363:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "1363:32:31"
															},
															"nodeType": "YulIf",
															"src": "1360:52:31"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1421:23:31",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1441:2:31",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1435:5:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "1435:9:31"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1425:6:31",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1453:33:31",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1475:6:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1483:2:31",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1471:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "1471:15:31"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1457:10:31",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1561:22:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1563:16:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1563:18:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1563:18:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1504:10:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1516:18:31",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1501:2:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1501:34:31"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1540:10:31"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1552:6:31"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1537:2:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1537:22:31"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1498:2:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:62:31"
															},
															"nodeType": "YulIf",
															"src": "1495:88:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1599:2:31",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1603:10:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1592:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "1592:22:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1592:22:31"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1623:36:31",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1649:9:31"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1636:12:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "1636:23:31"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1627:5:31",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1714:5:31"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IProtocolGovernance",
																	"nodeType": "YulIdentifier",
																	"src": "1668:45:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:52:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1668:52:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1736:6:31"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1744:5:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:21:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:21:31"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1759:47:31",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1791:9:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1802:2:31",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1787:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1787:18:31"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1774:12:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "1774:32:31"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1763:7:31",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1861:7:31"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IProtocolGovernance",
																	"nodeType": "YulIdentifier",
																	"src": "1815:45:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "1815:54:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1815:54:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1889:6:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1897:2:31",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1885:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1885:15:31"
																	},
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1902:7:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1878:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "1878:32:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1878:32:31"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1919:47:31",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1951:9:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1962:2:31",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1947:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1947:18:31"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1934:12:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "1934:32:31"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "1923:7:31",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "2021:7:31"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IProtocolGovernance",
																	"nodeType": "YulIdentifier",
																	"src": "1975:45:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "1975:54:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1975:54:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2049:6:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2057:2:31",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2045:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2045:15:31"
																	},
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "2062:7:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2038:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "2038:32:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2038:32:31"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2079:16:31",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2089:6:31"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2079:6:31"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_InternalParams_$1633_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1316:9:31",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1327:7:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1339:6:31",
														"type": ""
													}
												],
												"src": "1248:853:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2176:110:31",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2222:16:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2231:1:31",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2234:1:31",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2224:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2224:12:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2224:12:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2197:7:31"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2206:9:31"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2193:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2193:23:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2218:2:31",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2189:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "2189:32:31"
															},
															"nodeType": "YulIf",
															"src": "2186:52:31"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2247:33:31",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2270:9:31"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2257:12:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "2257:23:31"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2247:6:31"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2142:9:31",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2153:7:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2165:6:31",
														"type": ""
													}
												],
												"src": "2106:180:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2392:76:31",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2402:26:31",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2414:9:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2425:2:31",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2410:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "2410:18:31"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2402:4:31"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2444:9:31"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2455:6:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2437:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "2437:25:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2437:25:31"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2361:9:31",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2372:6:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2383:4:31",
														"type": ""
													}
												],
												"src": "2291:177:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2601:222:31",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2611:33:31",
															"value": {
																"arguments": [
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2625:7:31"
																	},
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2634:9:31"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2621:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "2621:23:31"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2615:2:31",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:16:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2677:1:31",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2680:1:31",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2670:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:12:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:12:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2660:2:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:31",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2656:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "2656:11:31"
															},
															"nodeType": "YulIf",
															"src": "2653:31:31"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2693:33:31",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2716:9:31"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2703:12:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "2703:23:31"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2693:6:31"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2764:16:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2773:1:31",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2776:1:31",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2766:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2766:12:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2766:12:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2746:2:31"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2754:2:31",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2750:3:31"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2750:7:31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2742:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2742:16:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2760:2:31",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2738:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "2738:25:31"
															},
															"nodeType": "YulIf",
															"src": "2735:45:31"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2789:28:31",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2803:9:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2814:2:31",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2799:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "2799:18:31"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2789:6:31"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_struct$_DelayedStrategyParams_$1484_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2559:9:31",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2570:7:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2582:6:31",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2590:6:31",
														"type": ""
													}
												],
												"src": "2473:350:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3007:100:31",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3017:26:31",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3029:9:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3040:2:31",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3025:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "3025:18:31"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3017:4:31"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3059:9:31"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "3080:6:31"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "3074:5:31"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3074:13:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3089:10:31",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3070:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3070:30:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3052:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "3052:49:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3052:49:31"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_DelayedStrategyParams_$1484_memory_ptr__to_t_struct$_DelayedStrategyParams_$1484_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2976:9:31",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2987:6:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2998:4:31",
														"type": ""
													}
												],
												"src": "2828:279:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3161:106:31",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3171:29:31",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3193:6:31"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3180:12:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "3180:20:31"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3171:5:31"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3255:5:31"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IProtocolGovernance",
																	"nodeType": "YulIdentifier",
																	"src": "3209:45:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "3209:52:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3209:52:31"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3140:6:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3151:5:31",
														"type": ""
													}
												],
												"src": "3112:155:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3320:113:31",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3330:29:31",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3352:6:31"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3339:12:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "3339:20:31"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3330:5:31"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3411:16:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3420:1:31",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3423:1:31",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3413:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3413:12:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3413:12:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3381:5:31"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3392:5:31"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3399:8:31",
																						"type": "",
																						"value": "0xffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3388:3:31"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3388:20:31"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3378:2:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3378:31:31"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3371:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "3371:39:31"
															},
															"nodeType": "YulIf",
															"src": "3368:59:31"
														}
													]
												},
												"name": "abi_decode_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3299:6:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3310:5:31",
														"type": ""
													}
												],
												"src": "3272:161:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3583:1120:31",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3630:16:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3639:1:31",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3642:1:31",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3632:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3632:12:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3632:12:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3604:7:31"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3613:9:31"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3600:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3600:23:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3625:3:31",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3596:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "3596:33:31"
															},
															"nodeType": "YulIf",
															"src": "3593:53:31"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3655:37:31",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3682:9:31"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3669:12:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "3669:23:31"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3659:6:31",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3701:28:31",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3711:18:31",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3705:2:31",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3756:16:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3765:1:31",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3768:1:31",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3758:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3758:12:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3758:12:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3744:6:31"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3752:2:31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3741:2:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "3741:14:31"
															},
															"nodeType": "YulIf",
															"src": "3738:34:31"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3781:32:31",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3795:9:31"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3806:6:31"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3791:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "3791:22:31"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3785:2:31",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3861:16:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3870:1:31",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3873:1:31",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3863:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3863:12:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3863:12:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "3840:2:31"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3844:4:31",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3836:3:31"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3836:13:31"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3851:7:31"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3832:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3832:27:31"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3825:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "3825:35:31"
															},
															"nodeType": "YulIf",
															"src": "3822:55:31"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3886:26:31",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3909:2:31"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3896:12:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "3896:16:31"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "3890:2:31",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3921:14:31",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3931:4:31",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "3925:2:31",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3958:22:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3960:16:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3960:18:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3960:18:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "3950:2:31"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3954:2:31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3947:2:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "3947:10:31"
															},
															"nodeType": "YulIf",
															"src": "3944:36:31"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3989:20:31",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4003:1:31",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4006:2:31"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "3999:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "3999:10:31"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "3993:2:31",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4018:39:31",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "4049:2:31"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "4053:2:31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4045:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4045:11:31"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4029:15:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "4029:28:31"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4022:3:31",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4066:16:31",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "4079:3:31"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "4070:5:31",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4098:3:31"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4103:2:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4091:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "4091:15:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4091:15:31"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4115:19:31",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4126:3:31"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "4131:2:31"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4122:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "4122:12:31"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "4115:3:31"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4143:34:31",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "4165:2:31"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "4169:2:31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4161:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4161:11:31"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "4174:2:31"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4157:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "4157:20:31"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "4147:6:31",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4209:16:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4218:1:31",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4221:1:31",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4211:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4211:12:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4211:12:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4192:6:31"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4200:7:31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4189:2:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "4189:19:31"
															},
															"nodeType": "YulIf",
															"src": "4186:39:31"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4234:22:31",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4249:2:31"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "4253:2:31"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4245:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "4245:11:31"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "4238:3:31",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4321:182:31",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4335:30:31",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "4361:3:31"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "4348:12:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4348:17:31"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nodeType": "YulTypedName",
																				"src": "4339:5:31",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "4424:5:31"
																				}
																			],
																			"functionName": {
																				"name": "validator_revert_contract_IProtocolGovernance",
																				"nodeType": "YulIdentifier",
																				"src": "4378:45:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4378:52:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4378:52:31"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4450:3:31"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "4455:5:31"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4443:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4443:18:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4443:18:31"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4474:19:31",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4485:3:31"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "4490:2:31"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4481:3:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4481:12:31"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4474:3:31"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4276:3:31"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4281:6:31"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4273:2:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "4273:15:31"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4289:23:31",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4291:19:31",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "4302:3:31"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "4307:2:31"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4298:3:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4298:12:31"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4291:3:31"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4269:3:31",
																"statements": []
															},
															"src": "4265:238:31"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4512:15:31",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "4522:5:31"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4512:6:31"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4536:48:31",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4569:9:31"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "4580:2:31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4565:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4565:18:31"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4546:18:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "4546:38:31"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4536:6:31"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4593:47:31",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4625:9:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4636:2:31",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4621:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4621:18:31"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint24",
																	"nodeType": "YulIdentifier",
																	"src": "4603:17:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "4603:37:31"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4593:6:31"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4649:48:31",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4682:9:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4693:2:31",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4678:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4678:18:31"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4659:18:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "4659:38:31"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4649:6:31"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_addresst_uint24t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3525:9:31",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3536:7:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3548:6:31",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3556:6:31",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3564:6:31",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3572:6:31",
														"type": ""
													}
												],
												"src": "3438:1265:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4857:145:31",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4867:26:31",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4879:9:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4890:2:31",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4875:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "4875:18:31"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4867:4:31"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4909:9:31"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4924:6:31"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4940:3:31",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4945:1:31",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4936:3:31"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4936:11:31"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4949:1:31",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4932:3:31"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4932:19:31"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4920:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4920:32:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4902:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "4902:51:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4902:51:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4973:9:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4984:2:31",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4969:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4969:18:31"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4989:6:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4962:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "4962:34:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4962:34:31"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IUniV3Vault_$1466_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4818:9:31",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4829:6:31",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4837:6:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4848:4:31",
														"type": ""
													}
												],
												"src": "4708:294:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5057:422:31",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5067:26:31",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5087:5:31"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5081:5:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "5081:12:31"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5071:6:31",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5109:3:31"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5114:6:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5102:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "5102:19:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5102:19:31"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5130:10:31",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5139:1:31",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "5134:1:31",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5201:110:31",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5215:14:31",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5225:4:31",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "5219:2:31",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "5257:3:31"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "5262:1:31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5253:3:31"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5253:11:31"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "5266:2:31"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5249:3:31"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5249:20:31"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "5285:5:31"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "5292:1:31"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "5281:3:31"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "5281:13:31"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "5296:2:31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5277:3:31"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5277:22:31"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5271:5:31"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5271:29:31"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5242:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5242:59:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5242:59:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5160:1:31"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5163:6:31"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5157:2:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "5157:13:31"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5171:21:31",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5173:17:31",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5182:1:31"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5185:4:31",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5178:3:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5178:12:31"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5173:1:31"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5153:3:31",
																"statements": []
															},
															"src": "5149:162:31"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5345:62:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "5374:3:31"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "5379:6:31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5370:3:31"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5370:16:31"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5388:4:31",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5366:3:31"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5366:27:31"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5395:1:31",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5359:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5359:38:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5359:38:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5326:1:31"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5329:6:31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5323:2:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "5323:13:31"
															},
															"nodeType": "YulIf",
															"src": "5320:87:31"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5416:57:31",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5431:3:31"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "5444:6:31"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5452:2:31",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "5440:3:31"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5440:15:31"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5461:2:31",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "5457:3:31"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5457:7:31"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "5436:3:31"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5436:29:31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5427:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5427:39:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5468:4:31",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5423:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "5423:50:31"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5416:3:31"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5034:5:31",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5041:3:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5049:3:31",
														"type": ""
													}
												],
												"src": "5007:472:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5605:99:31",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5622:9:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5633:2:31",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5615:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "5615:21:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5615:21:31"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5645:53:31",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5671:6:31"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5683:9:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5694:2:31",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5679:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5679:18:31"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "5653:17:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "5653:45:31"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5645:4:31"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5574:9:31",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5585:6:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5596:4:31",
														"type": ""
													}
												],
												"src": "5484:220:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5767:218:31",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5777:29:31",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5795:3:31",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5800:1:31",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5791:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5791:11:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5804:1:31",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5787:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "5787:19:31"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5781:2:31",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5822:3:31"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5837:5:31"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "5831:5:31"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5831:12:31"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5845:2:31"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5827:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5827:21:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5815:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "5815:34:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5815:34:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5869:3:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5874:4:31",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5865:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5865:14:31"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "5895:5:31"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5902:4:31",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "5891:3:31"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5891:16:31"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "5885:5:31"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5885:23:31"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5910:2:31"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5881:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5881:32:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5858:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "5858:56:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5858:56:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5934:3:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5939:4:31",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5930:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5930:14:31"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "5960:5:31"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5967:4:31",
																								"type": "",
																								"value": "0x40"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "5956:3:31"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5956:16:31"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "5950:5:31"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5950:23:31"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5975:2:31"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5946:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5946:32:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5923:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "5923:56:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5923:56:31"
														}
													]
												},
												"name": "abi_encode_struct_InternalParams",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5751:5:31",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5758:3:31",
														"type": ""
													}
												],
												"src": "5709:276:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6155:102:31",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6165:26:31",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6177:9:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6188:2:31",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6173:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "6173:18:31"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6165:4:31"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6233:6:31"
																	},
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6241:9:31"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_InternalParams",
																	"nodeType": "YulIdentifier",
																	"src": "6200:32:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "6200:51:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6200:51:31"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_InternalParams_$1633_memory_ptr__to_t_struct$_InternalParams_$1633_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6124:9:31",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6135:6:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6146:4:31",
														"type": ""
													}
												],
												"src": "5990:267:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6373:96:31",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6419:16:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6428:1:31",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6431:1:31",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6421:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6421:12:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6421:12:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6394:7:31"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6403:9:31"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6390:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6390:23:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6415:2:31",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6386:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "6386:32:31"
															},
															"nodeType": "YulIf",
															"src": "6383:52:31"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6444:19:31",
															"value": {
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "6454:9:31"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6444:6:31"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_DelayedProtocolParams_$1481_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6339:9:31",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6350:7:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6362:6:31",
														"type": ""
													}
												],
												"src": "6262:207:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6653:202:31",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6663:26:31",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6675:9:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6686:2:31",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6671:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "6671:18:31"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6663:4:31"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6698:29:31",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6716:3:31",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6721:1:31",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6712:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6712:11:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6725:1:31",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6708:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "6708:19:31"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6702:2:31",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6743:9:31"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "6764:6:31"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "6758:5:31"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6758:13:31"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6773:2:31"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6754:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6754:22:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6736:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "6736:41:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6736:41:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6797:9:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6808:4:31",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6793:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6793:20:31"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value0",
																								"nodeType": "YulIdentifier",
																								"src": "6829:6:31"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6837:4:31",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "6825:3:31"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6825:17:31"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "6819:5:31"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6819:24:31"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6845:2:31"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6815:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6815:33:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6786:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "6786:63:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6786:63:31"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_DelayedProtocolParams_$1481_memory_ptr__to_t_struct$_DelayedProtocolParams_$1481_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6622:9:31",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6633:6:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6644:4:31",
														"type": ""
													}
												],
												"src": "6474:381:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6941:103:31",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6987:16:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6996:1:31",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6999:1:31",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6989:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6989:12:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6989:12:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6962:7:31"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6971:9:31"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6958:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6958:23:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6983:2:31",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6954:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "6954:32:31"
															},
															"nodeType": "YulIf",
															"src": "6951:52:31"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7012:26:31",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7028:9:31"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7022:5:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "7022:16:31"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7012:6:31"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6907:9:31",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6918:7:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6930:6:31",
														"type": ""
													}
												],
												"src": "6860:184:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7081:95:31",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7098:1:31",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7105:3:31",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7110:10:31",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7101:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7101:20:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7091:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "7091:31:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7091:31:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7138:1:31",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7141:4:31",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7131:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "7131:15:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7131:15:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7162:1:31",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7165:4:31",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7155:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "7155:15:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7155:15:31"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7049:127:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7229:80:31",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7256:22:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7258:16:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7258:18:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7258:18:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7245:1:31"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7252:1:31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7248:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7248:6:31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7242:2:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "7242:13:31"
															},
															"nodeType": "YulIf",
															"src": "7239:39:31"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7287:16:31",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7298:1:31"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7301:1:31"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7294:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "7294:9:31"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7287:3:31"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7212:1:31",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7215:1:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7221:3:31",
														"type": ""
													}
												],
												"src": "7181:128:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7507:146:31",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7517:27:31",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7529:9:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7540:3:31",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7525:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "7525:19:31"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7517:4:31"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7586:6:31"
																	},
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7594:9:31"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_InternalParams",
																	"nodeType": "YulIdentifier",
																	"src": "7553:32:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "7553:51:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7553:51:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7624:9:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7635:2:31",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7620:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7620:18:31"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7640:6:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7613:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "7613:34:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7613:34:31"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_InternalParams_$1633_memory_ptr_t_uint256__to_t_struct$_InternalParams_$1633_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7468:9:31",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7479:6:31",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7487:6:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7498:4:31",
														"type": ""
													}
												],
												"src": "7314:339:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7713:325:31",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7723:22:31",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7737:1:31",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7740:4:31"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7733:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "7733:12:31"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7723:6:31"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7754:38:31",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7784:4:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7790:1:31",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7780:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "7780:12:31"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "7758:18:31",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7831:31:31",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7833:27:31",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "7847:6:31"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7855:4:31",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7843:3:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7843:17:31"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7833:6:31"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7811:18:31"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7804:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "7804:26:31"
															},
															"nodeType": "YulIf",
															"src": "7801:61:31"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7921:111:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7942:1:31",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7949:3:31",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7954:10:31",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "7945:3:31"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7945:20:31"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7935:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7935:31:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7935:31:31"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7986:1:31",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7989:4:31",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7979:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7979:15:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7979:15:31"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8014:1:31",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8017:4:31",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8007:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8007:15:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8007:15:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7877:18:31"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7900:6:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7908:2:31",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7897:2:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7897:14:31"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7874:2:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "7874:38:31"
															},
															"nodeType": "YulIf",
															"src": "7871:161:31"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7693:4:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7702:6:31",
														"type": ""
													}
												],
												"src": "7658:380:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8087:77:31",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8142:16:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8151:1:31",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8154:1:31",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8144:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8144:12:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8144:12:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8110:5:31"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8121:5:31"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8128:10:31",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "8117:3:31"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8117:22:31"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8107:2:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8107:33:31"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8100:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "8100:41:31"
															},
															"nodeType": "YulIf",
															"src": "8097:61:31"
														}
													]
												},
												"name": "validator_revert_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8076:5:31",
														"type": ""
													}
												],
												"src": "8043:121:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8289:402:31",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8335:16:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8344:1:31",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8347:1:31",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8337:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8337:12:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8337:12:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8310:7:31"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8319:9:31"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8306:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8306:23:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8331:2:31",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8302:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "8302:32:31"
															},
															"nodeType": "YulIf",
															"src": "8299:52:31"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8360:23:31",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8380:2:31",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8374:5:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "8374:9:31"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "8364:6:31",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8392:33:31",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "8414:6:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8422:2:31",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8410:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "8410:15:31"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "8396:10:31",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8500:22:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8502:16:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8502:18:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8502:18:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "8443:10:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8455:18:31",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8440:2:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8440:34:31"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "8479:10:31"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8491:6:31"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8476:2:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8476:22:31"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8437:2:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "8437:62:31"
															},
															"nodeType": "YulIf",
															"src": "8434:88:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8538:2:31",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "8542:10:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8531:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "8531:22:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8531:22:31"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8562:29:31",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8581:9:31"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8575:5:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "8575:16:31"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "8566:5:31",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8624:5:31"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "8600:23:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "8600:30:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8600:30:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "8646:6:31"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8654:5:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8639:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "8639:21:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8639:21:31"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8669:16:31",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "8679:6:31"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8669:6:31"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_DelayedStrategyParams_$1484_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8255:9:31",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8266:7:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8278:6:31",
														"type": ""
													}
												],
												"src": "8169:522:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8765:176:31",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8811:16:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8820:1:31",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8823:1:31",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8813:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8813:12:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8813:12:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8786:7:31"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8795:9:31"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8782:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8782:23:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8807:2:31",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8778:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "8778:32:31"
															},
															"nodeType": "YulIf",
															"src": "8775:52:31"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8836:36:31",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8862:9:31"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8849:12:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "8849:23:31"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "8840:5:31",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8905:5:31"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "8881:23:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "8881:30:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8881:30:31"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8920:15:31",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8930:5:31"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8920:6:31"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8731:9:31",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8742:7:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8754:6:31",
														"type": ""
													}
												],
												"src": "8696:245:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9127:173:31",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9137:26:31",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9149:9:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9160:2:31",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9145:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "9145:18:31"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9137:4:31"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9172:33:31",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9198:6:31"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9185:12:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "9185:20:31"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "9176:5:31",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9238:5:31"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "9214:23:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "9214:30:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9214:30:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9260:9:31"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9275:5:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9282:10:31",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9271:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9271:22:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9253:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "9253:41:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9253:41:31"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_DelayedStrategyParams_$1484_calldata_ptr__to_t_struct$_DelayedStrategyParams_$1484_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9096:9:31",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9107:6:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9118:4:31",
														"type": ""
													}
												],
												"src": "8946:354:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9514:216:31",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9524:26:31",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9536:9:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9547:2:31",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9532:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "9532:18:31"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9524:4:31"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9559:33:31",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9585:6:31"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9572:12:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "9572:20:31"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "9563:5:31",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9625:5:31"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "9601:23:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "9601:30:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9601:30:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9647:9:31"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9662:5:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9669:10:31",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9658:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9658:22:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9640:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "9640:41:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9640:41:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9701:9:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9712:2:31",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9697:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9697:18:31"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9717:6:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9690:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "9690:34:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9690:34:31"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_DelayedStrategyParams_$1484_calldata_ptr_t_uint256__to_t_struct$_DelayedStrategyParams_$1484_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9475:9:31",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9486:6:31",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9494:6:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9505:4:31",
														"type": ""
													}
												],
												"src": "9305:425:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9796:400:31",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9806:26:31",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9826:5:31"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9820:5:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "9820:12:31"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "9810:6:31",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9848:3:31"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9853:6:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9841:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "9841:19:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9841:19:31"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9869:14:31",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9879:4:31",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9873:2:31",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9892:19:31",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9903:3:31"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "9908:2:31"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9899:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "9899:12:31"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9892:3:31"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9920:28:31",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9938:5:31"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "9945:2:31"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9934:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "9934:14:31"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "9924:6:31",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9957:10:31",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9966:1:31",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "9961:1:31",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10025:146:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "10046:3:31"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "10061:6:31"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "10055:5:31"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10055:13:31"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "10078:3:31",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "10083:1:31",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "10074:3:31"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "10074:11:31"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "10087:1:31",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "10070:3:31"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10070:19:31"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "10051:3:31"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10051:39:31"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10039:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10039:52:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10039:52:31"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10104:19:31",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "10115:3:31"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "10120:2:31"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10111:3:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10111:12:31"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "10104:3:31"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10136:25:31",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "10150:6:31"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "10158:2:31"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10146:3:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10146:15:31"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10136:6:31"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "9987:1:31"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9990:6:31"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9984:2:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "9984:13:31"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9998:18:31",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10000:14:31",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10009:1:31"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10012:1:31",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10005:3:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10005:9:31"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10000:1:31"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9980:3:31",
																"statements": []
															},
															"src": "9976:195:31"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10180:10:31",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10187:3:31"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10180:3:31"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9773:5:31",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9780:3:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9788:3:31",
														"type": ""
													}
												],
												"src": "9735:461:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10434:282:31",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10451:9:31"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10462:6:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10444:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "10444:25:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10444:25:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10489:9:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10500:2:31",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10485:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10485:18:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10505:3:31",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10478:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "10478:31:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10478:31:31"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10518:65:31",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10555:6:31"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10567:9:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10578:3:31",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10563:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10563:19:31"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "10526:28:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "10526:57:31"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10518:4:31"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10603:9:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10614:2:31",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10599:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10599:18:31"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "10623:6:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10631:8:31",
																				"type": "",
																				"value": "0xffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10619:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10619:21:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10592:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "10592:49:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10592:49:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10661:9:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10672:2:31",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10657:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10657:18:31"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "10681:6:31"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10697:3:31",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10702:1:31",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "10693:3:31"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10693:11:31"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10706:1:31",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "10689:3:31"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10689:19:31"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10677:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10677:32:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10650:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "10650:60:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10650:60:31"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_uint24_t_address__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_uint24_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10379:9:31",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10390:6:31",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10398:6:31",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10406:6:31",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10414:6:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10425:4:31",
														"type": ""
													}
												],
												"src": "10201:515:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10820:91:31",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10830:26:31",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10842:9:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10853:2:31",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10838:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "10838:18:31"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10830:4:31"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10872:9:31"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10887:6:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10895:8:31",
																				"type": "",
																				"value": "0xffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10883:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10883:21:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10865:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "10865:40:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10865:40:31"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10789:9:31",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10800:6:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10811:4:31",
														"type": ""
													}
												],
												"src": "10721:190:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11197:413:31",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11214:9:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11225:3:31",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11207:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "11207:22:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11207:22:31"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11238:71:31",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11281:6:31"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11293:9:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11304:3:31",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11289:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11289:19:31"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "11252:28:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "11252:57:31"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "11242:6:31",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11329:9:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11340:2:31",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11325:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11325:18:31"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "11349:6:31"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11357:9:31"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11345:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11345:22:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11318:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "11318:50:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11318:50:31"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11377:41:31",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11403:6:31"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "11411:6:31"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "11385:17:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "11385:33:31"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11377:4:31"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11427:29:31",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11445:3:31",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11450:1:31",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11441:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11441:11:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11454:1:31",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11437:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "11437:19:31"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11431:2:31",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11476:9:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11487:2:31",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11472:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11472:18:31"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "11496:6:31"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11504:2:31"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11492:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11492:15:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11465:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "11465:43:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11465:43:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11528:9:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11539:2:31",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11524:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11524:18:31"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "11548:6:31"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11556:2:31"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11544:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11544:15:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11517:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "11517:43:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11517:43:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11580:9:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11591:3:31",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11576:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11576:19:31"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "11597:6:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11569:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "11569:35:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11569:35:31"
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_bytes_memory_ptr_t_address_t_address_t_uint256__to_t_array$_t_address_$dyn_memory_ptr_t_bytes_memory_ptr_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11134:9:31",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "11145:6:31",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11153:6:31",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11161:6:31",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11169:6:31",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11177:6:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11188:4:31",
														"type": ""
													}
												],
												"src": "10916:694:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11735:577:31",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11781:16:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11790:1:31",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11793:1:31",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11783:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11783:12:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11783:12:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11756:7:31"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11765:9:31"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11752:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11752:23:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11777:2:31",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11748:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "11748:32:31"
															},
															"nodeType": "YulIf",
															"src": "11745:52:31"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11806:23:31",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11826:2:31",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11820:5:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "11820:9:31"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "11810:6:31",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11838:33:31",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "11860:6:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11868:2:31",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11856:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "11856:15:31"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "11842:10:31",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11946:22:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "11948:16:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11948:18:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11948:18:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "11889:10:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11901:18:31",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11886:2:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11886:34:31"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "11925:10:31"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11937:6:31"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "11922:2:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11922:22:31"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "11883:2:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "11883:62:31"
															},
															"nodeType": "YulIf",
															"src": "11880:88:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11984:2:31",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "11988:10:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11977:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "11977:22:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11977:22:31"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12008:29:31",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12027:9:31"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12021:5:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "12021:16:31"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "12012:5:31",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12092:5:31"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IProtocolGovernance",
																	"nodeType": "YulIdentifier",
																	"src": "12046:45:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "12046:52:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12046:52:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "12114:6:31"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12122:5:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12107:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "12107:21:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12107:21:31"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12137:40:31",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12162:9:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12173:2:31",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12158:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12158:18:31"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12152:5:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "12152:25:31"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "12141:7:31",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "12232:7:31"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IProtocolGovernance",
																	"nodeType": "YulIdentifier",
																	"src": "12186:45:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "12186:54:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12186:54:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12260:6:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12268:2:31",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12256:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12256:15:31"
																	},
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "12273:7:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12249:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "12249:32:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12249:32:31"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12290:16:31",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "12300:6:31"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "12290:6:31"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_DelayedProtocolParams_$1481_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11701:9:31",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11712:7:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11724:6:31",
														"type": ""
													}
												],
												"src": "11615:697:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12422:198:31",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12468:16:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12477:1:31",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12480:1:31",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12470:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12470:12:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12470:12:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12443:7:31"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12452:9:31"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12439:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12439:23:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12464:2:31",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12435:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "12435:32:31"
															},
															"nodeType": "YulIf",
															"src": "12432:52:31"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12493:36:31",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12519:9:31"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "12506:12:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "12506:23:31"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "12497:5:31",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12584:5:31"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IProtocolGovernance",
																	"nodeType": "YulIdentifier",
																	"src": "12538:45:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "12538:52:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12538:52:31"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12599:15:31",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "12609:5:31"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "12599:6:31"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_INonfungiblePositionManager_$953",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12388:9:31",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12399:7:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12411:6:31",
														"type": ""
													}
												],
												"src": "12317:303:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12711:198:31",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12757:16:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12766:1:31",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12769:1:31",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12759:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12759:12:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12759:12:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12732:7:31"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12741:9:31"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12728:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12728:23:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12753:2:31",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12724:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "12724:32:31"
															},
															"nodeType": "YulIf",
															"src": "12721:52:31"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12782:36:31",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12808:9:31"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "12795:12:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "12795:23:31"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "12786:5:31",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12873:5:31"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IProtocolGovernance",
																	"nodeType": "YulIdentifier",
																	"src": "12827:45:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "12827:52:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12827:52:31"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12888:15:31",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "12898:5:31"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "12888:6:31"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IOracle_$1265",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12677:9:31",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12688:7:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12700:6:31",
														"type": ""
													}
												],
												"src": "12625:284:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12988:355:31",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12998:34:31",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13026:5:31"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "13013:12:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "13013:19:31"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "13002:7:31",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "13087:7:31"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IProtocolGovernance",
																	"nodeType": "YulIdentifier",
																	"src": "13041:45:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "13041:54:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13041:54:31"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13104:29:31",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13122:3:31",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13127:1:31",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13118:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13118:11:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13131:1:31",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13114:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "13114:19:31"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "13108:2:31",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13149:3:31"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "13158:7:31"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13167:2:31"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13154:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13154:16:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13142:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "13142:29:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13142:29:31"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13180:45:31",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13212:5:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13219:4:31",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13208:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13208:16:31"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "13195:12:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "13195:30:31"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "13184:7:31",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "13280:7:31"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IProtocolGovernance",
																	"nodeType": "YulIdentifier",
																	"src": "13234:45:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "13234:54:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13234:54:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "13308:3:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13313:4:31",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13304:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13304:14:31"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value_2",
																				"nodeType": "YulIdentifier",
																				"src": "13324:7:31"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13333:2:31"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13320:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13320:16:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13297:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "13297:40:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13297:40:31"
														}
													]
												},
												"name": "abi_encode_struct_DelayedProtocolParams_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12972:5:31",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12979:3:31",
														"type": ""
													}
												],
												"src": "12914:429:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13529:118:31",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13539:26:31",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13551:9:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13562:2:31",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13547:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "13547:18:31"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13539:4:31"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13623:6:31"
																	},
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13631:9:31"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_DelayedProtocolParams_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "13574:48:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "13574:67:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13574:67:31"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_DelayedProtocolParams_$1481_calldata_ptr__to_t_struct$_DelayedProtocolParams_$1481_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13498:9:31",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13509:6:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13520:4:31",
														"type": ""
													}
												],
												"src": "13348:299:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13861:161:31",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13871:26:31",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13883:9:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13894:2:31",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13879:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "13879:18:31"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13871:4:31"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13955:6:31"
																	},
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13963:9:31"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_DelayedProtocolParams_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "13906:48:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "13906:67:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13906:67:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13993:9:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14004:2:31",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13989:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13989:18:31"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14009:6:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13982:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "13982:34:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13982:34:31"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_DelayedProtocolParams_$1481_calldata_ptr_t_uint256__to_t_struct$_DelayedProtocolParams_$1481_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13822:9:31",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13833:6:31",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13841:6:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13852:4:31",
														"type": ""
													}
												],
												"src": "13652:370:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14189:274:31",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14199:26:31",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14211:9:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14222:2:31",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14207:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "14207:18:31"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14199:4:31"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14234:29:31",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14252:3:31",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14257:1:31",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14248:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14248:11:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14261:1:31",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14244:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "14244:19:31"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "14238:2:31",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14279:9:31"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "14300:6:31"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "14294:5:31"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14294:13:31"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14309:2:31"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14290:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14290:22:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14272:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "14272:41:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14272:41:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14333:9:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14344:4:31",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14329:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14329:20:31"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value0",
																								"nodeType": "YulIdentifier",
																								"src": "14365:6:31"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14373:4:31",
																								"type": "",
																								"value": "0x01"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "14361:3:31"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14361:17:31"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "14355:5:31"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14355:24:31"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14381:2:31"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14351:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14351:33:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14322:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "14322:63:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14322:63:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14405:9:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14416:4:31",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14401:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14401:20:31"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value0",
																								"nodeType": "YulIdentifier",
																								"src": "14437:6:31"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14445:4:31",
																								"type": "",
																								"value": "0x02"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "14433:3:31"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14433:17:31"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "14427:5:31"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14427:24:31"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14453:2:31"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14423:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14423:33:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14394:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "14394:63:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14394:63:31"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_InternalParams_$1633_storage__to_t_struct$_InternalParams_$1633_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14158:9:31",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14169:6:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14180:4:31",
														"type": ""
													}
												],
												"src": "14027:436:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14569:102:31",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14579:26:31",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14591:9:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14602:2:31",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14587:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "14587:18:31"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14579:4:31"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14621:9:31"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "14636:6:31"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14652:3:31",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14657:1:31",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "14648:3:31"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14648:11:31"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14661:1:31",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "14644:3:31"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14644:19:31"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14632:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14632:32:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14614:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "14614:51:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14614:51:31"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14538:9:31",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14549:6:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14560:4:31",
														"type": ""
													}
												],
												"src": "14468:203:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14754:199:31",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14800:16:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14809:1:31",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14812:1:31",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14802:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14802:12:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14802:12:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14775:7:31"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14784:9:31"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14771:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14771:23:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14796:2:31",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14767:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "14767:32:31"
															},
															"nodeType": "YulIf",
															"src": "14764:52:31"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14825:29:31",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14844:9:31"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14838:5:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "14838:16:31"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "14829:5:31",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14907:16:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14916:1:31",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14919:1:31",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14909:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14909:12:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14909:12:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14876:5:31"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "14897:5:31"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "14890:6:31"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14890:13:31"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "14883:6:31"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14883:21:31"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14873:2:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14873:32:31"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14866:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "14866:40:31"
															},
															"nodeType": "YulIf",
															"src": "14863:60:31"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14932:15:31",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "14942:5:31"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "14932:6:31"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14720:9:31",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14731:7:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14743:6:31",
														"type": ""
													}
												],
												"src": "14676:277:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15010:116:31",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15069:22:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15071:16:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15071:18:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15071:18:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "15041:1:31"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "15034:6:31"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15034:9:31"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "15027:6:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15027:17:31"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "15049:1:31"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15060:1:31",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "15056:3:31"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15056:6:31"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "15064:1:31"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "15052:3:31"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15052:14:31"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "15046:2:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15046:21:31"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15023:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "15023:45:31"
															},
															"nodeType": "YulIf",
															"src": "15020:71:31"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15100:20:31",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15115:1:31"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15118:1:31"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "15111:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "15111:9:31"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "15100:7:31"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14989:1:31",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14992:1:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "14998:7:31",
														"type": ""
													}
												],
												"src": "14958:168:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15256:156:31",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15266:26:31",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15278:9:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15289:2:31",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15274:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "15274:18:31"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15266:4:31"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15308:9:31"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "15323:6:31"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15339:3:31",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15344:1:31",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "15335:3:31"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15335:11:31"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15348:1:31",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "15331:3:31"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15331:19:31"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15319:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15319:32:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15301:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "15301:51:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15301:51:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15372:9:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15383:2:31",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15368:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15368:18:31"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "15392:6:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15400:4:31",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15388:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15388:17:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15361:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "15361:45:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15361:45:31"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint8__to_t_address_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15217:9:31",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15228:6:31",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15236:6:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15247:4:31",
														"type": ""
													}
												],
												"src": "15131:281:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15546:175:31",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15556:26:31",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15568:9:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15579:2:31",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15564:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "15564:18:31"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15556:4:31"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15591:29:31",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15609:3:31",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15614:1:31",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15605:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15605:11:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15618:1:31",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "15601:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "15601:19:31"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "15595:2:31",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15636:9:31"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "15651:6:31"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15659:2:31"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15647:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15647:15:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15629:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "15629:34:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15629:34:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15683:9:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15694:2:31",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15679:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15679:18:31"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "15703:6:31"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15711:2:31"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15699:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15699:15:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15672:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "15672:43:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15672:43:31"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15507:9:31",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15518:6:31",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15526:6:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15537:4:31",
														"type": ""
													}
												],
												"src": "15417:304:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15758:95:31",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15775:1:31",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15782:3:31",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15787:10:31",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15778:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15778:20:31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15768:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "15768:31:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15768:31:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15815:1:31",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15818:4:31",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15808:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "15808:15:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15808:15:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15839:1:31",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15842:4:31",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15832:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "15832:15:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15832:15:31"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "15726:127:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15905:88:31",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15936:22:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15938:16:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15938:18:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15938:18:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15921:5:31"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15932:1:31",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "15928:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15928:6:31"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "15918:2:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "15918:17:31"
															},
															"nodeType": "YulIf",
															"src": "15915:43:31"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15967:20:31",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15978:5:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15985:1:31",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15974:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "15974:13:31"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15967:3:31"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15887:5:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15897:3:31",
														"type": ""
													}
												],
												"src": "15858:135:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16079:191:31",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16125:16:31",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16134:1:31",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16137:1:31",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16127:6:31"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16127:12:31"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16127:12:31"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16100:7:31"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16109:9:31"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16096:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16096:23:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16121:2:31",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "16092:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "16092:32:31"
															},
															"nodeType": "YulIf",
															"src": "16089:52:31"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16150:29:31",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16169:9:31"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16163:5:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "16163:16:31"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "16154:5:31",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16234:5:31"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IProtocolGovernance",
																	"nodeType": "YulIdentifier",
																	"src": "16188:45:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "16188:52:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16188:52:31"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16249:15:31",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "16259:5:31"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "16249:6:31"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16045:9:31",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "16056:7:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16068:6:31",
														"type": ""
													}
												],
												"src": "15998:272:31"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16449:173:31",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16466:9:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16477:2:31",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16459:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "16459:21:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16459:21:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16500:9:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16511:2:31",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16496:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16496:18:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16516:2:31",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16489:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "16489:30:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16489:30:31"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16539:9:31"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16550:2:31",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16535:3:31"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16535:18:31"
																	},
																	{
																		"hexValue": "455243313136373a2063726561746532206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16555:25:31",
																		"type": "",
																		"value": "ERC1167: create2 failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16528:6:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "16528:53:31"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16528:53:31"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16590:26:31",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16602:9:31"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16613:2:31",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16598:3:31"
																},
																"nodeType": "YulFunctionCall",
																"src": "16598:18:31"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16590:4:31"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16426:9:31",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16440:4:31",
														"type": ""
													}
												],
												"src": "16275:347:31"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function validator_revert_contract_IProtocolGovernance(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_InternalParams_$1633_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 96)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let value := calldataload(headStart)\n        validator_revert_contract_IProtocolGovernance(value)\n        mstore(memPtr, value)\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_IProtocolGovernance(value_1)\n        mstore(add(memPtr, 32), value_1)\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_contract_IProtocolGovernance(value_2)\n        mstore(add(memPtr, 64), value_2)\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_struct$_DelayedStrategyParams_$1484_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        let _1 := sub(dataEnd, headStart)\n        if slt(_1, 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        if slt(add(_1, not(31)), 32) { revert(0, 0) }\n        value1 := add(headStart, 32)\n    }\n    function abi_encode_tuple_t_struct$_DelayedStrategyParams_$1484_memory_ptr__to_t_struct$_DelayedStrategyParams_$1484_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(mload(value0), 0xffffffff))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_contract_IProtocolGovernance(value)\n    }\n    function abi_decode_uint24(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_addresst_uint24t_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        if gt(_3, _1) { panic_error_0x41() }\n        let _5 := shl(5, _3)\n        let dst := allocate_memory(add(_5, _4))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _4)\n        let srcEnd := add(add(_2, _5), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            let value := calldataload(src)\n            validator_revert_contract_IProtocolGovernance(value)\n            mstore(dst, value)\n            dst := add(dst, _4)\n        }\n        value0 := dst_1\n        value1 := abi_decode_address(add(headStart, _4))\n        value2 := abi_decode_uint24(add(headStart, 64))\n        value3 := abi_decode_address(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_contract$_IUniV3Vault_$1466_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_struct_InternalParams(value, pos)\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(pos, and(mload(value), _1))\n        mstore(add(pos, 0x20), and(mload(add(value, 0x20)), _1))\n        mstore(add(pos, 0x40), and(mload(add(value, 0x40)), _1))\n    }\n    function abi_encode_tuple_t_struct$_InternalParams_$1633_memory_ptr__to_t_struct$_InternalParams_$1633_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        abi_encode_struct_InternalParams(value0, headStart)\n    }\n    function abi_decode_tuple_t_struct$_DelayedProtocolParams_$1481_calldata_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := headStart\n    }\n    function abi_encode_tuple_t_struct$_DelayedProtocolParams_$1481_memory_ptr__to_t_struct$_DelayedProtocolParams_$1481_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(mload(value0), _1))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), _1))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_struct$_InternalParams_$1633_memory_ptr_t_uint256__to_t_struct$_InternalParams_$1633_memory_ptr_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        abi_encode_struct_InternalParams(value0, headStart)\n        mstore(add(headStart, 96), value1)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function validator_revert_uint32(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_DelayedStrategyParams_$1484_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 32)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let value := mload(headStart)\n        validator_revert_uint32(value)\n        mstore(memPtr, value)\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_uint32(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_struct$_DelayedStrategyParams_$1484_calldata_ptr__to_t_struct$_DelayedStrategyParams_$1484_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        let value := calldataload(value0)\n        validator_revert_uint32(value)\n        mstore(headStart, and(value, 0xffffffff))\n    }\n    function abi_encode_tuple_t_struct$_DelayedStrategyParams_$1484_calldata_ptr_t_uint256__to_t_struct$_DelayedStrategyParams_$1484_memory_ptr_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let value := calldataload(value0)\n        validator_revert_uint32(value)\n        mstore(headStart, and(value, 0xffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_array_address_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_uint24_t_address__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_uint24_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 128)\n        tail := abi_encode_array_address_dyn(value1, add(headStart, 128))\n        mstore(add(headStart, 64), and(value2, 0xffffff))\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffff))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_bytes_memory_ptr_t_address_t_address_t_uint256__to_t_array$_t_address_$dyn_memory_ptr_t_bytes_memory_ptr_t_address_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 160)\n        let tail_1 := abi_encode_array_address_dyn(value0, add(headStart, 160))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string(value1, tail_1)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_decode_tuple_t_struct$_DelayedProtocolParams_$1481_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 64)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let value := mload(headStart)\n        validator_revert_contract_IProtocolGovernance(value)\n        mstore(memPtr, value)\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_contract_IProtocolGovernance(value_1)\n        mstore(add(memPtr, 32), value_1)\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_contract$_INonfungiblePositionManager_$953(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IProtocolGovernance(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IOracle_$1265(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IProtocolGovernance(value)\n        value0 := value\n    }\n    function abi_encode_struct_DelayedProtocolParams_calldata(value, pos)\n    {\n        let value_1 := calldataload(value)\n        validator_revert_contract_IProtocolGovernance(value_1)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(pos, and(value_1, _1))\n        let value_2 := calldataload(add(value, 0x20))\n        validator_revert_contract_IProtocolGovernance(value_2)\n        mstore(add(pos, 0x20), and(value_2, _1))\n    }\n    function abi_encode_tuple_t_struct$_DelayedProtocolParams_$1481_calldata_ptr__to_t_struct$_DelayedProtocolParams_$1481_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        abi_encode_struct_DelayedProtocolParams_calldata(value0, headStart)\n    }\n    function abi_encode_tuple_t_struct$_DelayedProtocolParams_$1481_calldata_ptr_t_uint256__to_t_struct$_DelayedProtocolParams_$1481_memory_ptr_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        abi_encode_struct_DelayedProtocolParams_calldata(value0, headStart)\n        mstore(add(headStart, 64), value1)\n    }\n    function abi_encode_tuple_t_struct$_InternalParams_$1633_storage__to_t_struct$_InternalParams_$1633_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(sload(value0), _1))\n        mstore(add(headStart, 0x20), and(sload(add(value0, 0x01)), _1))\n        mstore(add(headStart, 0x40), and(sload(add(value0, 0x02)), _1))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint8__to_t_address_t_uint8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xff))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_IProtocolGovernance(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"ERC1167: create2 failed\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 31,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75D0C0DC GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA0A8E460 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA0A8E460 EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0xB2FE31AD EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0xC2CBDC67 EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0xD34CC380 EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0xD4A07D34 EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0xE4AF6E79 EQ PUSH2 0x3BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x75D0C0DC EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x7AC46FBB EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x86C6BE3E EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x8860D248 EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x98347A5D EQ PUSH2 0x35C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1C7F4C73 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x1C7F4C73 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x25281714 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x511CE798 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x59F3DAE7 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x66C153E9 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x6707ACEE EQ PUSH2 0x261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x6A46239 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x9946538 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xBDEDD56 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0xE3E80AC EQ PUSH2 0x1AF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x18E1 JUMP JUMPDEST PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH5 0x312E312E3 PUSH1 0xDC SHL JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0x196E JUMP JUMPDEST PUSH2 0x3F7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19A PUSH2 0x1AA CALLDATASIZE PUSH1 0x4 PUSH2 0x19E0 JUMP JUMPDEST PUSH2 0x5E9 JUMP JUMPDEST PUSH20 0x556E6956335661756C74476F7665726E616E6365 PUSH1 0x60 SHL PUSH2 0x179 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x179 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x19F9 JUMP JUMPDEST PUSH2 0x6DF JUMP JUMPDEST PUSH2 0x179 PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x19E0 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x21A PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0x19E0 JUMP JUMPDEST PUSH2 0x7AC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 MLOAD PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x23D CALLDATASIZE PUSH1 0x4 PUSH2 0x1A54 JUMP JUMPDEST PUSH2 0x89A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x166 JUMP JUMPDEST PUSH2 0x179 PUSH2 0x26F CALLDATASIZE PUSH1 0x4 PUSH2 0x19E0 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x289 PUSH2 0x97F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST PUSH2 0x2E9 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 SLOAD DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 SLOAD AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST PUSH2 0x2E9 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x4 SLOAD DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x5 SLOAD AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x21A PUSH2 0x357 CALLDATASIZE PUSH1 0x4 PUSH2 0x19E0 JUMP JUMPDEST PUSH2 0x9A1 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x9FE JUMP JUMPDEST PUSH2 0x289 PUSH2 0xB06 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x37A CALLDATASIZE PUSH1 0x4 PUSH2 0x1BC9 JUMP JUMPDEST PUSH2 0xB19 JUMP JUMPDEST PUSH2 0x387 PUSH2 0xC24 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD MLOAD AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH2 0x166 JUMP JUMPDEST PUSH2 0x387 PUSH2 0xD03 JUMP JUMPDEST PUSH2 0x19A PUSH2 0xD24 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH2 0x179 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D1 DUP3 PUSH2 0xE49 JUMP JUMPDEST DUP1 PUSH2 0x3EC JUMPI POP PUSH4 0xA2E9C513 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3FF PUSH2 0xE7F JUMP JUMPDEST DUP1 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x20AD PUSH1 0xF1 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20AD PUSH1 0xF1 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x49F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST POP PUSH1 0x40 DUP1 DUP3 ADD MLOAD DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH2 0x20AD PUSH1 0xF1 SHL PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST POP DUP1 MLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD PUSH1 0x4 DUP1 SLOAD DUP5 AND SWAP2 DUP6 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE PUSH1 0x40 DUP1 DUP7 ADD MLOAD PUSH1 0x5 DUP1 SLOAD SWAP1 SWAP6 AND SWAP1 DUP7 AND OR SWAP1 SWAP4 SSTORE PUSH1 0x0 SLOAD DUP4 MLOAD PUSH4 0xBBA32939 PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 MLOAD SWAP5 AND SWAP4 PUSH4 0xBBA32939 SWAP4 DUP1 DUP4 ADD SWAP4 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x562 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x576 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x59A SWAP2 SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST PUSH2 0x5A4 SWAP1 TIMESTAMP PUSH2 0x1C10 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP2 ORIGIN SWAP2 PUSH32 0x887CAB3184F7C02B16978AB31F8ACEE05979F59FC3DA6ABE5BF71105EC3179D SWAP2 PUSH2 0x5DE SWAP2 DUP7 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x5F2 DUP2 PUSH2 0xF37 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 SWAP2 CALLER SWAP2 ORIGIN SWAP2 PUSH32 0xA363920F84C4A3E8F1FBB02A2F8B5F0D7438886CB05A7D98882AF9BD66D16426 SWAP2 PUSH2 0x633 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x65F SWAP1 PUSH2 0x1C65 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6AC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x681 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6AC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x68F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x6C4 SWAP2 SWAP1 PUSH2 0x1CAC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 MLOAD PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP JUMP JUMPDEST PUSH1 0x1 PUSH2 0x6EE PUSH1 0x20 DUP4 ADD DUP4 PUSH2 0x1CF8 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND GT PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x4C494D55 PUSH1 0xE0 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x730 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST POP PUSH2 0x75A DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x746 SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x1028 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD DUP4 SWAP2 CALLER SWAP2 ORIGIN SWAP2 PUSH32 0x4CCEB02B6B172E9C19155FCCC4D799437A0D50AD922EA9F0F41B1CB3A17B12E8 SWAP2 PUSH2 0x7A0 SWAP2 DUP8 SWAP2 PUSH2 0x1D32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x7D4 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST ISZERO ISZERO SWAP1 POP PUSH2 0x7F0 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x809 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x835 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x882 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x857 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x882 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x865 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0x1CAC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x8A8 DUP7 PUSH2 0x1134 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1912128B PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP5 POP SWAP3 POP DUP4 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x1912128B SWAP1 PUSH2 0x8E2 SWAP1 DUP6 SWAP1 DUP12 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x1D9B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x910 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH3 0xFFFFFF DUP10 AND PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP4 POP ORIGIN SWAP3 POP PUSH32 0x8A4513C05D15DF8ECE912856923273E166E39F5C9C2B43D2B38594023494A0E0 SWAP2 DUP12 SWAP2 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x96D SWAP3 SWAP2 DUP13 SWAP1 DUP9 SWAP1 DUP11 SWAP1 PUSH2 0x1DDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3F2 PUSH20 0x556E6956335661756C74476F7665726E616E6365 PUSH1 0x60 SHL PUSH2 0x1325 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x9C9 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST ISZERO ISZERO SWAP1 POP PUSH2 0x9E5 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2A DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x809 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST PUSH2 0xA06 PUSH2 0x1391 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ORIGIN PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xB57A42E9F64DFC9C6B9E412EA001A45C0E4D3F26C8D160381A418FF92269D052 PUSH1 0xD DUP1 SLOAD PUSH2 0xA48 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA74 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAC1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA96 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAC1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAA4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xAD9 SWAP2 SWAP1 PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD MLOAD AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3F2 PUSH5 0x312E312E3 PUSH1 0xDC SHL PUSH2 0x1325 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB28 PUSH1 0x20 DUP4 ADD DUP4 PUSH2 0x1E83 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20AD PUSH1 0xF1 SHL DUP2 MSTORE POP SWAP1 PUSH2 0xB6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xB7F PUSH1 0x40 DUP4 ADD PUSH1 0x20 DUP5 ADD PUSH2 0x1E83 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20AD PUSH1 0xF1 SHL DUP2 MSTORE POP SWAP1 PUSH2 0xBC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST POP PUSH2 0xBEC DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBD8 SWAP2 SWAP1 PUSH2 0x1ED5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x1445 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x40 MLOAD CALLER SWAP2 ORIGIN SWAP2 PUSH32 0x88E619A5DCE560314FDD4895B08C256978617047A99FFC847D45400DF1F377A7 SWAP2 PUSH2 0x5DE SWAP2 DUP7 SWAP2 SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xE DUP1 SLOAD PUSH2 0xC45 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST ISZERO ISZERO SWAP1 POP PUSH2 0xC65 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH2 0xC72 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC9E SWAP1 PUSH2 0x1C65 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCEB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCC0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCEB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCCE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xD DUP1 SLOAD PUSH2 0xC72 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST PUSH2 0xD2C PUSH2 0xE7F JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x13955313 PUSH1 0xE2 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH2 0xD68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST POP PUSH1 0x6 SLOAD TIMESTAMP LT ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5453 PUSH1 0xF0 SHL DUP2 MSTORE POP SWAP1 PUSH2 0xDA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP1 SLOAD DUP3 DUP7 AND SWAP1 DUP8 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x2 DUP1 SLOAD SWAP8 DUP3 AND SWAP8 DUP10 AND DUP9 OR SWAP1 SSTORE PUSH1 0x6 SWAP9 SWAP1 SWAP9 SSTORE SWAP8 DUP7 AND SWAP1 SWAP9 SSTORE DUP5 AND SWAP1 SSTORE SWAP3 SWAP1 SWAP2 AND SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP3 ADD MSTORE CALLER SWAP1 ORIGIN SWAP1 PUSH32 0xEF3E4BC9725FA684957D7DE03C6DCD01078EE86CF78CEEF25C5F8346DF69CC99 SWAP1 PUSH1 0x60 ADD PUSH2 0xAFC JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x3EC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xEFFDA0F5 PUSH1 0xE0 SHL EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x935E01B PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x24D7806C SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xED6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEFA SWAP2 SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x232921 PUSH1 0xE9 SHL DUP2 MSTORE POP SWAP1 PUSH2 0xF34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xF40 DUP2 PUSH2 0x1520 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE PUSH1 0x4 DUP4 MSTORE PUSH4 0x13955313 PUSH1 0xE2 SHL SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP2 PUSH2 0xF8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST POP DUP1 TIMESTAMP LT ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5453 PUSH1 0xF0 SHL DUP2 MSTORE POP SWAP1 PUSH2 0xFCB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x7 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP2 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0xFF3 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST PUSH2 0xFFE SWAP3 SWAP2 SWAP1 PUSH2 0x1793 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x1016 SWAP2 PUSH2 0x181E JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH2 0x1031 DUP3 PUSH2 0x1520 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD PUSH2 0x1050 SWAP3 DUP5 ADD SWAP1 PUSH2 0x1858 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x106A SWAP1 PUSH2 0x1C65 JUMP JUMPDEST ISZERO SWAP1 POP PUSH2 0x1078 JUMPI PUSH1 0x1 PUSH2 0x107B JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND SWAP1 POP DUP1 PUSH1 0x0 DUP1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBBA32939 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1109 SWAP2 SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST PUSH2 0x1113 SWAP2 SWAP1 PUSH2 0x1F20 JUMP JUMPDEST PUSH2 0x111D SWAP1 TIMESTAMP PUSH2 0x1C10 JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP4 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x63E85D2D PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 SWAP1 PUSH4 0x63E85D2D SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1195 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11B9 SWAP2 SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x232921 PUSH1 0xE9 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x11F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1112EEE7 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 SWAP2 PUSH4 0x88977738 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x123A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x124E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1272 SWAP2 SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST PUSH2 0x127D SWAP1 PUSH1 0x1 PUSH2 0x1C10 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP4 POP PUSH2 0x1296 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x16F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5C4FDF9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP6 POP SWAP1 DUP3 AND SWAP1 PUSH4 0x5C4FDF9 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x131D SWAP2 SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x20 PUSH1 0x0 JUMPDEST PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1383 JUMPI DUP4 DUP2 PUSH1 0x20 DUP2 LT PUSH2 0x1366 JUMPI PUSH2 0x1366 PUSH2 0x1F3F JUMP JUMPDEST BYTE PUSH2 0x1373 JUMPI DUP1 SWAP2 POP PUSH2 0x1383 JUMP JUMPDEST PUSH2 0x137C DUP2 PUSH2 0x1F55 JUMP JUMPDEST SWAP1 POP PUSH2 0x134B JUMP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x1399 PUSH2 0xE7F JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x13955313 PUSH1 0xE2 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH2 0x13D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST POP PUSH1 0xF SLOAD TIMESTAMP LT ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5453 PUSH1 0xF0 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x1415 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST POP PUSH1 0xE PUSH1 0xD SWAP1 DUP1 SLOAD PUSH2 0x1426 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST PUSH2 0x1431 SWAP3 SWAP2 SWAP1 PUSH2 0x1793 JUMP JUMPDEST POP PUSH2 0x143E PUSH1 0xE PUSH1 0x0 PUSH2 0x181E JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF SSTORE JUMP JUMPDEST PUSH2 0x144D PUSH2 0xE7F JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD DUP1 SLOAD PUSH2 0x145C SWAP1 PUSH2 0x1C65 JUMP JUMPDEST ISZERO SWAP1 POP PUSH2 0x146A JUMPI PUSH1 0x1 PUSH2 0x146D JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND SWAP1 POP DUP2 PUSH1 0xE SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1488 SWAP3 SWAP2 SWAP1 PUSH2 0x1858 JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xBBA32939 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD DUP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xBBA32939 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1505 SWAP2 SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST PUSH2 0x150F SWAP2 SWAP1 PUSH2 0x1F20 JUMP JUMPDEST PUSH2 0x1519 SWAP1 TIMESTAMP PUSH2 0x1C10 JUMP JUMPDEST PUSH1 0xF SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x935E01B PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x24D7806C SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1563 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1577 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x159B SWAP2 SWAP1 PUSH2 0x1EFE JUMP JUMPDEST DUP1 PUSH2 0x1628 JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x20604BF PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x81812FC SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x161D SWAP2 SWAP1 PUSH2 0x1F70 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x16B5 JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1672 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1686 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16AA SWAP2 SWAP1 PUSH2 0x1F70 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x232921 PUSH1 0xE9 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x16EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH20 0x3D602D80600A3D3981F3363D3D373D3D3D363D73 PUSH1 0x60 SHL DUP2 MSTORE DUP4 PUSH1 0x60 SHL PUSH1 0x14 DUP3 ADD MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x88 SHL PUSH1 0x28 DUP3 ADD MSTORE DUP3 PUSH1 0x37 DUP3 PUSH1 0x0 CREATE2 SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313136373A2063726561746532206661696C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x441 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x179F SWAP1 PUSH2 0x1C65 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x17C1 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x180E JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x17D2 JUMPI DUP1 SLOAD DUP6 SSTORE PUSH2 0x180E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x180E JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x180E JUMPI DUP3 SLOAD DUP3 SSTORE SWAP2 PUSH1 0x1 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x17F3 JUMP JUMPDEST POP PUSH2 0x181A SWAP3 SWAP2 POP PUSH2 0x18CC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x182A SWAP1 PUSH2 0x1C65 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x183A JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xF34 SWAP2 SWAP1 PUSH2 0x18CC JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1864 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1886 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x180E JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x189F JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x180E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x180E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x180E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x18B1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x181A JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x18CD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x190B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1951 JUMPI PUSH2 0x1951 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1980 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x19A3 JUMPI PUSH2 0x19A3 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 CALLDATALOAD PUSH2 0x19B1 DUP2 PUSH2 0x1959 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x19C1 DUP2 PUSH2 0x1959 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH2 0x19D4 DUP2 PUSH2 0x1959 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 SUB PUSH1 0x40 DUP2 SLT ISZERO PUSH2 0x1A0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 PUSH1 0x1F NOT DUP3 ADD SLT ISZERO PUSH2 0x1A23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1A3C DUP2 PUSH2 0x1959 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1A3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1A6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1A82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 DUP3 DUP3 GT ISZERO PUSH2 0x1AAA JUMPI PUSH2 0x1AAA PUSH2 0x1912 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL SWAP3 POP PUSH2 0x1ABB DUP2 DUP5 ADD PUSH2 0x1928 JUMP JUMPDEST DUP3 DUP2 MSTORE SWAP3 DUP5 ADD DUP2 ADD SWAP3 DUP2 DUP2 ADD SWAP1 DUP12 DUP6 GT ISZERO PUSH2 0x1AD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP5 DUP7 LT ISZERO PUSH2 0x1AFF JUMPI DUP6 CALLDATALOAD SWAP4 POP PUSH2 0x1AEF DUP5 PUSH2 0x1959 JUMP JUMPDEST DUP4 DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x1ADA JUMP JUMPDEST SWAP9 POP PUSH2 0x1B0E SWAP1 POP DUP10 DUP3 ADD PUSH2 0x1A31 JUMP JUMPDEST SWAP7 POP POP POP POP POP PUSH2 0x1B20 PUSH1 0x40 DUP7 ADD PUSH2 0x1A41 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B2E PUSH1 0x60 DUP7 ADD PUSH2 0x1A31 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B5F JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1B43 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1B71 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x190B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B39 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x3EC DUP3 DUP5 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD DUP3 AND SWAP1 DUP5 ADD MSTORE PUSH1 0x40 SWAP2 DUP3 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1C23 JUMPI PUSH2 0x1C23 PUSH2 0x1BFA JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x1C58 DUP3 DUP6 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD DUP3 AND SWAP1 DUP5 ADD MSTORE PUSH1 0x40 SWAP2 DUP3 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1C79 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1BDB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xF34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1CE1 JUMPI PUSH2 0x1CE1 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 MLOAD PUSH2 0x1CEF DUP2 PUSH2 0x1C9A JUMP JUMPDEST DUP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x190B DUP2 PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x20 DUP2 ADD DUP3 CALLDATALOAD PUSH2 0x1D24 DUP2 PUSH2 0x1C9A JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 SWAP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD DUP4 CALLDATALOAD PUSH2 0x1D41 DUP2 PUSH2 0x1C9A JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D90 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1D6B JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1DB4 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1D57 JUMP JUMPDEST PUSH3 0xFFFFFF SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1DED PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x1D57 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1DFF DUP2 DUP9 PUSH2 0x1B39 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND PUSH1 0x40 DUP6 ADD MSTORE SWAP5 SWAP1 SWAP6 AND PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1E59 JUMPI PUSH2 0x1E59 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 MLOAD PUSH2 0x1E67 DUP2 PUSH2 0x1959 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x1E77 DUP2 PUSH2 0x1959 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x190B DUP2 PUSH2 0x1959 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1EAB DUP2 PUSH2 0x1959 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE PUSH1 0x20 DUP3 ADD CALLDATALOAD SWAP1 PUSH2 0x1EC7 DUP3 PUSH2 0x1959 JUMP JUMPDEST DUP1 DUP3 AND PUSH1 0x20 DUP6 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x3EC DUP3 DUP5 PUSH2 0x1EA0 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x1EF1 DUP3 DUP6 PUSH2 0x1EA0 JUMP JUMPDEST DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x190B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1F3A JUMPI PUSH2 0x1F3A PUSH2 0x1BFA JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1F69 JUMPI PUSH2 0x1F69 PUSH2 0x1BFA JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x190B DUP2 PUSH2 0x1959 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 ADD 0xCD REVERT 0xB6 0xC7 BALANCE SWAP16 CREATE DUP6 0xBF SDIV 0xC2 XOR 0xC3 SWAP15 PC PUSH4 0x7C949E87 PUSH17 0xDC1A817D7C936D100B64736F6C63430008 MULMOD STOP CALLER ",
							"sourceMap": "391:7055:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2755:211;;;;;;:::i;:::-;;:::i;:::-;;;470:14:31;;463:22;445:41;;433:2;418:18;2755:211:29;;;;;;;;611:108:28;-1:-1:-1;;;611:108:28;;;643:25:31;;;631:2;616:18;611:108:28;497:177:31;3610:651:30;;;;;;:::i;:::-;;:::i;:::-;;4322:311:29;;;;;;:::i;:::-;;:::i;366:102:28:-;-1:-1:-1;;;366:102:28;611:108;2824:117:30;2909:24;;2824:117;;3905:366:29;;;;;;:::i;:::-;;:::i;2438:163:30:-;;;;;;:::i;:::-;2522:7;2549:44;;;:39;:44;;;;;;;2438:163;2006:338:29;;;;;;:::i;:::-;;:::i;:::-;;;3074:13:31;;3089:10;3070:30;3052:49;;3040:2;3025:18;2006:338:29;2828:279:31;4684:481:29;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;4920:32:31;;;4902:51;;4984:2;4969:18;;4962:34;;;;4875:18;4684:481:29;4708:294:31;2245:147:30;;;;;;:::i;:::-;2321:7;2348:36;;;:31;:36;;;;;;;2245:147;237:121:28;;;:::i;:::-;;;;;;;:::i;2987:113:30:-;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;3070:22:30;;;;;;;;3077:15;3070:22;-1:-1:-1;;;;;3070:22:30;;;;;;;;;;;;;;;;;;;;;;;;2987:113;;;;;;;;:::i;3146:125::-;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;3235:28:30;;;;;;;;3242:21;3235:28;-1:-1:-1;;;;;3235:28:30;;;;;;;;;;;;;;;;;;;;;;;;3146:125;2395:323:29;;;;;;:::i;:::-;;:::i;3580:274::-;;;:::i;476:127:28:-;;;:::i;3088:441:29:-;;;;;;:::i;:::-;;:::i;1494:461::-;;;:::i;:::-;;;;6758:13:31;;-1:-1:-1;;;;;6754:22:31;;;6736:41;;6837:4;6825:17;;;6819:24;6815:33;6793:20;;;6786:63;;;;6671:18;1494:461:29;6474:381:31;1208:235:29;;;:::i;4307:457:30:-;;;:::i;2647:131::-;2739:31;;2647:131;;2755:211:29;2840:4;2864:36;2888:11;2864:23;:36::i;:::-;:94;;;-1:-1:-1;;;;;;;;;;2904:54:29;;;2864:94;2857:101;2755:211;-1:-1:-1;;2755:211:29:o;693:18:28:-;686:25;;611:108;:::o;3610:651:30:-;3692:23;:21;:23::i;:::-;3742:28;;3787:30;;;;;;;;;;;;-1:-1:-1;;;3787:30:30;;;;;-1:-1:-1;;;;;3734:51:30;3726:92;;;;-1:-1:-1;;;3726:92:30;;;;;;;;:::i;:::-;;;;;;;;;;3876:1;-1:-1:-1;;;;;3837:41:30;3845:9;:18;;;-1:-1:-1;;;;;3837:41:30;;;3880:30;;;;;;;;;;;;;-1:-1:-1;;;3880:30:30;;;3829:82;;;;;-1:-1:-1;;;3829:82:30;;;;;;;;:::i;:::-;-1:-1:-1;3938:19:30;;;;;3974:30;;;;;;;;;;;-1:-1:-1;;;3974:30:30;;;;-1:-1:-1;;;;;3930:42:30;3922:83;;;;-1:-1:-1;;;3922:83:30;;;;;;;;:::i;:::-;-1:-1:-1;4016:33:30;;:21;:33;;-1:-1:-1;;;;;;4016:33:30;;;-1:-1:-1;;;;;4016:33:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4105:34:30;:52;;-1:-1:-1;;;4105:52:30;;;;:34;;;:50;;:52;;;;4016:33;4105:52;;;;;;:34;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4087:70;;:15;:70;:::i;:::-;4060:24;:97;;;4173:80;;4205:10;;4194:9;;4173:80;;;;4217:9;;4060:97;4173:80;:::i;:::-;;;;;;;;3610:651;:::o;4322:311:29:-;4392:33;4421:3;4392:28;:33::i;:::-;4561:27;;;;:22;:27;;;;;4550:64;;4532:3;;4507:10;;4483:9;;4441:184;;4550:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4441:184;;3074:13:31;;3089:10;3070:30;3052:49;;3040:2;3025:18;4441:184:29;;;;;;;4322:311;:::o;3905:366::-;4047:1;4021:23;;;;:6;:23;:::i;:::-;:27;;;4050:33;;;;;;;;;;;;;-1:-1:-1;;;4050:33:29;;;4013:71;;;;;-1:-1:-1;;;4013:71:29;;;;;;;;:::i;:::-;;4095:52;4123:3;4139:6;4128:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;4095:27;:52::i;:::-;4226:36;;;;:31;:36;;;;;;;;4163:100;;4213:3;;4201:10;;4190:9;;4163:100;;;;4218:6;;4163:100;:::i;:::-;;;;;;;;3905:366;;:::o;2006:338::-;-1:-1:-1;;;;;;;;;;;;2124:33:29;;;;:28;:33;;;;;:40;;;;;:::i;:::-;:45;2120:129;;-1:-1:-1;2120:129:29;;-1:-1:-1;;2193:44:29;;;;;;;;;-1:-1:-1;2193:44:29;;;2006:338::o;2120:129::-;2277:33;;;;:28;:33;;;;;2266:70;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4684:481::-;4848:17;4867:11;4891:13;4930:20;4943:6;4930:12;:20::i;:::-;4998:55;;-1:-1:-1;;;4998:55:29;;4915:35;;-1:-1:-1;4915:35:29;-1:-1:-1;4915:35:29;;-1:-1:-1;;;;;;4998:16:29;;;;;:55;;4915:35;;5020:12;;5034:4;;5040:12;;4998:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5120:16:29;;;10895:8:31;10883:21;;5120:16:29;;;10865:40:31;5094:10:29;;-1:-1:-1;5083:9:29;;-1:-1:-1;5069:88:29;;5106:12;;10838:18:31;5120:16:29;;;-1:-1:-1;;5120:16:29;;;;;;;;;;5069:88;;;5138:6;;5146:5;;5153:3;;5069:88;:::i;:::-;;;;;;;;4880:285;4684:481;;;;;;;:::o;237:121:28:-;284:13;317:33;-1:-1:-1;;;317:16:28;:33::i;2395:323:29:-;-1:-1:-1;;;;;;;;;;;;2507:27:29;;;;:22;:27;;;;;:34;;;;;:::i;:::-;:39;2503:126;;-1:-1:-1;2503:126:29;;-1:-1:-1;;2570:47:29;;;;;;;;;2611:4;2570:47;;;2395:323::o;2503:126::-;2657:27;;;;:22;:27;;;;;2646:64;;;;;:::i;3580:274::-;3639:30;:28;:30::i;:::-;3751:10;-1:-1:-1;;;;;3685:161:29;3727:9;-1:-1:-1;;;;;3685:161:29;;3787:22;3776:59;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3685:161;;;6758:13:31;;-1:-1:-1;;;;;6754:22:31;;;6736:41;;6837:4;6825:17;;;6819:24;6815:33;6793:20;;;6786:63;;;;6671:18;3685:161:29;;;;;;;;3580:274::o;476:127:28:-;526:13;559:36;-1:-1:-1;;;317:16:28;:33::i;3088:441:29:-;3234:1;3199:22;;;;:6;:22;:::i;:::-;-1:-1:-1;;;;;3191:45:29;;;3238:30;;;;;;;;;;;;;-1:-1:-1;;;3238:30:29;;;3183:86;;;;;-1:-1:-1;;;3183:86:29;;;;;;;;:::i;:::-;-1:-1:-1;3322:1:29;3296:13;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3288:36:29;;;3326:30;;;;;;;;;;;;;-1:-1:-1;;;3326:30:29;;;3280:77;;;;;-1:-1:-1;;;3280:77:29;;;;;;;;:::i;:::-;;3368:47;3407:6;3396:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;3368:27;:47::i;:::-;3489:31;;3431:90;;3469:10;;3458:9;;3431:90;;;;3481:6;;3489:31;3431:90;:::i;1494:461::-;-1:-1:-1;;;;;;;;;;;;;;;;;1601:28:29;:35;;;;;:::i;:::-;:40;1597:268;;-1:-1:-1;1597:268:29;;-1:-1:-1;1682:171:29;;;;;;;;;-1:-1:-1;1682:171:29;;;;;;;;1494:461::o;1597:268::-;1893:28;1882:65;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1208:235::-;-1:-1:-1;;;;;;;;;;;;;;;;;1387:22:29;1376:59;;;;;:::i;4307:457:30:-;4359:23;:21;:23::i;:::-;4401:24;;4432:22;;;;;;;;;;;;-1:-1:-1;;;4432:22:30;;;;;4393:62;;;;-1:-1:-1;;;4393:62:30;;;;;;;;:::i;:::-;;4493:24;;4474:15;:43;;4519:27;;;;;;;;;;;;;-1:-1:-1;;;4519:27:30;;;4466:81;;;;;-1:-1:-1;;;4466:81:30;;;;;;;;:::i;:::-;-1:-1:-1;4576:21:30;4558:39;;:15;:39;;-1:-1:-1;;;;;4558:39:30;;;-1:-1:-1;;;;;;4558:39:30;;;;;;;;;;-1:-1:-1;4558:39:30;;;;;;;;;;;;;;;;-1:-1:-1;4558:39:30;;;;;;;;;;;;4615:24;4608:31;;;;4650:28;;;;;;;;;;;;;;;;;4694:62;;;14272:41:31;;;14344:4;14329:20;;14322:63;;;;14401:20;;;14394:63;4728:10:30;;4717:9;;4694:62;;14222:2:31;14207:18;4694:62:30;14027:436:31;3279:214:30;3372:4;-1:-1:-1;;;;;;;;;937:40:5;;;3396:89:30;;;-1:-1:-1;;;;;;;3436:49:30;;-1:-1:-1;;;3436:49:30;3389:96;3279:214;-1:-1:-1;;3279:214:30:o;5207:158::-;5273:15;:34;:54;;-1:-1:-1;;;5273:54:30;;5316:10;5273:54;;;14614:51:31;-1:-1:-1;;;;;5273:34:30;;;;:42;;14587:18:31;;5273:54:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5329:27;;;;;;;;;;;;;-1:-1:-1;;;5329:27:30;;;5265:92;;;;;-1:-1:-1;;;5265:92:30;;;;;;;;:::i;:::-;;5207:158::o;6948:563::-;7019:28;7043:3;7019:23;:28::i;:::-;7058:42;7103:36;;;:31;:36;;;;;;;;;;7199:22;;;;;;;;;;;-1:-1:-1;;;7199:22:30;;;;;;;7103:36;7158:39;7150:72;;;;-1:-1:-1;;;7150:72:30;;;;;;;;:::i;:::-;;7260:34;7241:15;:53;;7296:27;;;;;;;;;;;;;-1:-1:-1;;;7296:27:30;;;7233:91;;;;;-1:-1:-1;;;7233:91:30;;;;;;;;:::i;:::-;-1:-1:-1;7365:33:30;;;;:28;:33;;;;;;;;7335:22;:27;;;;;;:63;;:27;;7365:33;7335:63;;;:::i;:::-;;;;;;:::i;:::-;-1:-1:-1;7416:33:30;;;;:28;:33;;;;;7409:40;;;:::i;:::-;-1:-1:-1;7467:36:30;;;;:31;:36;;;;;7460:43;6948:563::o;6459:433::-;6550:28;6574:3;6550:23;:28::i;:::-;6589:33;;;;:28;:33;;;;;;;;:42;;;;;;;;:::i;:::-;-1:-1:-1;6642:19:30;6664:27;;;:22;:27;;;;;:34;;;;;:::i;:::-;:39;;-1:-1:-1;6664:47:30;;6710:1;6664:47;;;6706:1;6664:47;6642:69;;;;6873:11;6805:15;:34;;;;;;;;;;-1:-1:-1;;;;;6805:34:30;-1:-1:-1;;;;;6805:50:30;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:79;;;;:::i;:::-;6774:110;;:15;:110;:::i;:::-;6722:36;;;;:31;:36;;;;;;:162;;;;-1:-1:-1;;6459:433:30:o;5703:632::-;5758:13;5858:34;;5926:79;;-1:-1:-1;;;5926:79:30;;5959:10;5926:79;;;15301:51:31;5858:34:30;15368:18:31;;;15361:45;5758:13:30;;-1:-1:-1;;;;;5858:34:30;;;;5926:32;;15274:18:31;;5926:79:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6020:27;;;;;;;;;;;;;-1:-1:-1;;;6020:27:30;;;5904:154;;;;;-1:-1:-1;;;5904:154:30;;;;;;;;:::i;:::-;-1:-1:-1;6100:24:30;;6141:27;;;-1:-1:-1;;;6141:27:30;;;;-1:-1:-1;;;;;6100:24:30;;;;;;6141:25;;:27;;;;;;;;;;;;;;6100:24;6141:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:31;;6171:1;6141:31;:::i;:::-;6225:25;;6135:37;;-1:-1:-1;6191:75:30;;-1:-1:-1;;;;;6225:25:30;6135:37;6191:25;:75::i;:::-;6277:50;;-1:-1:-1;;;6277:50:30;;-1:-1:-1;;;;;15647:15:31;;;6277:50:30;;;15629:34:31;15699:15;;;15679:18;;;15672:43;6183:83:30;;-1:-1:-1;6277:27:30;;;;;;15564:18:31;;6277:50:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5786:549;;5703:632;;;:::o;943:394:28:-;1035:14;;;1046:2;1035:14;;;;;;;;;1003:15;;1035:14;;;;;;;;;;-1:-1:-1;;1031:18:28;-1:-1:-1;1074:2:28;1060:11;1087:147;1111:2;1107:1;:6;1087:147;;;1145:1;1147;1145:4;;;;;;;:::i;:::-;;1135:88;;1182:1;1176:7;;1202:5;;1135:88;1115:3;;;:::i;:::-;;;1087:147;;;-1:-1:-1;1268:14:28;;1310:4;1303:12;;1296:23;;;;1275:1;943:394::o;9344:429:30:-;9404:23;:21;:23::i;:::-;9446:31;;9484:22;;;;;;;;;;;;-1:-1:-1;;;9484:22:30;;;;;9438:69;;;;-1:-1:-1;;;9438:69:30;;;;;;;;:::i;:::-;;9545:31;;9526:15;:50;;9578:27;;;;;;;;;;;;;-1:-1:-1;;;9578:27:30;;;9518:88;;;;;-1:-1:-1;;;9518:88:30;;;;;;;;:::i;:::-;;9642:28;9617:22;:53;;;;;;:::i;:::-;;;;;;:::i;:::-;-1:-1:-1;9681:35:30;9688:28;;9681:35;:::i;:::-;9727:38;9734:31;9727:38;9344:429::o;8888:400::-;8966:23;:21;:23::i;:::-;9000:19;9022:22;:29;;;;;:::i;:::-;:34;;-1:-1:-1;9022:42:30;;9063:1;9022:42;;;9059:1;9022:42;9000:64;;;;9106:6;9075:28;:37;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9201:15:30;:34;:52;;;-1:-1:-1;;;9201:52:30;;;;9269:11;;-1:-1:-1;;;;;9201:34:30;;:50;;:52;;;;;;;;;;;;;;:34;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:79;;;;:::i;:::-;9170:110;;:15;:110;:::i;:::-;9123:31;:157;-1:-1:-1;;8888:400:30:o;4839:360::-;4933:15;:34;:54;;-1:-1:-1;;;4933:54:30;;4976:10;4933:54;;;14614:51:31;-1:-1:-1;;;;;4933:34:30;;;;:42;;14587:18:31;;4933:54:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:130;;;-1:-1:-1;5008:24:30;;:41;;-1:-1:-1;;;5008:41:30;;;;;643:25:31;;;5053:10:30;;-1:-1:-1;;;;;5008:24:30;;:36;;616:18:31;;5008:41:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5008:55:30;;4933:130;:204;;;-1:-1:-1;5085:24:30;;:37;;-1:-1:-1;;;5085:37:30;;;;;643:25:31;;;5126:10:30;;-1:-1:-1;;;;;5085:24:30;;:32;;616:18:31;;5085:37:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5085:51:30;;4933:204;5153:27;;;;;;;;;;;;;-1:-1:-1;;;5153:27:30;;;4910:281;;;;;-1:-1:-1;;;4910:281:30;;;;;;;;:::i;:::-;;4839:360;:::o;1848:550:2:-;1932:16;2000:4;1994:11;-1:-1:-1;;;2025:3:2;2018:79;2143:14;2137:4;2133:25;2126:4;2121:3;2117:14;2110:49;-1:-1:-1;;;2188:4:2;2183:3;2179:14;2172:90;2309:4;2303;2298:3;2295:1;2287:27;2275:39;-1:-1:-1;;;;;;;2341:22:2;;2333:58;;;;-1:-1:-1;;;2333:58:2;;16477:2:31;2333:58:2;;;16459:21:31;16516:2;16496:18;;;16489:30;16555:25;16535:18;;;16528:53;16598:18;;2333:58:2;16275:347:31;-1:-1:-1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:286:31;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:31;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:31:o;679:127::-;740:10;735:3;731:20;728:1;721:31;771:4;768:1;761:15;795:4;792:1;785:15;811:275;882:2;876:9;947:2;928:13;;-1:-1:-1;;924:27:31;912:40;;982:18;967:34;;1003:22;;;964:62;961:88;;;1029:18;;:::i;:::-;1065:2;1058:22;811:275;;-1:-1:-1;811:275:31:o;1091:152::-;-1:-1:-1;;;;;1187:31:31;;1177:42;;1167:70;;1233:1;1230;1223:12;1248:853;1339:6;1392:2;1380:9;1371:7;1367:23;1363:32;1360:52;;;1408:1;1405;1398:12;1360:52;1441:2;1435:9;1483:2;1475:6;1471:15;1552:6;1540:10;1537:22;1516:18;1504:10;1501:34;1498:62;1495:88;;;1563:18;;:::i;:::-;1599:2;1592:22;1636:23;;1668:52;1636:23;1668:52;:::i;:::-;1729:21;;1802:2;1787:18;;1774:32;1815:54;1774:32;1815:54;:::i;:::-;1897:2;1885:15;;1878:32;1962:2;1947:18;;1934:32;1975:54;1934:32;1975:54;:::i;:::-;2057:2;2045:15;;2038:32;2049:6;1248:853;-1:-1:-1;;;1248:853:31:o;2106:180::-;2165:6;2218:2;2206:9;2197:7;2193:23;2189:32;2186:52;;;2234:1;2231;2224:12;2186:52;-1:-1:-1;2257:23:31;;2106:180;-1:-1:-1;2106:180:31:o;2473:350::-;2582:6;2590;2634:9;2625:7;2621:23;2664:2;2660;2656:11;2653:31;;;2680:1;2677;2670:12;2653:31;2703:23;;;-1:-1:-1;2760:2:31;-1:-1:-1;;2742:16:31;;2738:25;2735:45;;;2776:1;2773;2766:12;2735:45;;2814:2;2803:9;2799:18;2789:28;;2473:350;;;;;:::o;3112:155::-;3180:20;;3209:52;3180:20;3209:52;:::i;:::-;3112:155;;;:::o;3272:161::-;3339:20;;3399:8;3388:20;;3378:31;;3368:59;;3423:1;3420;3413:12;3438:1265;3548:6;3556;3564;3572;3625:3;3613:9;3604:7;3600:23;3596:33;3593:53;;;3642:1;3639;3632:12;3593:53;3682:9;3669:23;3711:18;3752:2;3744:6;3741:14;3738:34;;;3768:1;3765;3758:12;3738:34;3806:6;3795:9;3791:22;3781:32;;3851:7;3844:4;3840:2;3836:13;3832:27;3822:55;;3873:1;3870;3863:12;3822:55;3909:2;3896:16;3931:4;3954:2;3950;3947:10;3944:36;;;3960:18;;:::i;:::-;4006:2;4003:1;3999:10;3989:20;;4029:28;4053:2;4049;4045:11;4029:28;:::i;:::-;4091:15;;;4161:11;;;4157:20;;;4122:12;;;;4189:19;;;4186:39;;;4221:1;4218;4211:12;4186:39;4245:11;;;;4265:238;4281:6;4276:3;4273:15;4265:238;;;4361:3;4348:17;4335:30;;4378:52;4424:5;4378:52;:::i;:::-;4443:18;;;4298:12;;;;4481;;;;4265:238;;;4522:5;-1:-1:-1;4546:38:31;;-1:-1:-1;4565:18:31;;;4546:38;:::i;:::-;4536:48;;;;;;4603:37;4636:2;4625:9;4621:18;4603:37;:::i;:::-;4593:47;;4659:38;4693:2;4682:9;4678:18;4659:38;:::i;:::-;4649:48;;3438:1265;;;;;;;:::o;5007:472::-;5049:3;5087:5;5081:12;5114:6;5109:3;5102:19;5139:1;5149:162;5163:6;5160:1;5157:13;5149:162;;;5225:4;5281:13;;;5277:22;;5271:29;5253:11;;;5249:20;;5242:59;5178:12;5149:162;;;5329:6;5326:1;5323:13;5320:87;;;5395:1;5388:4;5379:6;5374:3;5370:16;5366:27;5359:38;5320:87;-1:-1:-1;5461:2:31;5440:15;-1:-1:-1;;5436:29:31;5427:39;;;;5468:4;5423:50;;5007:472;-1:-1:-1;;5007:472:31:o;5484:220::-;5633:2;5622:9;5615:21;5596:4;5653:45;5694:2;5683:9;5679:18;5671:6;5653:45;:::i;5990:267::-;6188:2;6173:18;;6200:51;6177:9;6233:6;5831:12;;-1:-1:-1;;;;;5827:21:31;;;5815:34;;5902:4;5891:16;;;5885:23;5881:32;;5865:14;;;5858:56;5967:4;5956:16;;;5950:23;5946:32;5930:14;;5923:56;5709:276;6262:207;6362:6;6415:2;6403:9;6394:7;6390:23;6386:32;6383:52;;;6431:1;6428;6421:12;6383:52;-1:-1:-1;6454:9:31;6262:207;-1:-1:-1;6262:207:31:o;6860:184::-;6930:6;6983:2;6971:9;6962:7;6958:23;6954:32;6951:52;;;6999:1;6996;6989:12;6951:52;-1:-1:-1;7022:16:31;;6860:184;-1:-1:-1;6860:184:31:o;7049:127::-;7110:10;7105:3;7101:20;7098:1;7091:31;7141:4;7138:1;7131:15;7165:4;7162:1;7155:15;7181:128;7221:3;7252:1;7248:6;7245:1;7242:13;7239:39;;;7258:18;;:::i;:::-;-1:-1:-1;7294:9:31;;7181:128::o;7314:339::-;7540:3;7525:19;;7553:51;7529:9;7586:6;5831:12;;-1:-1:-1;;;;;5827:21:31;;;5815:34;;5902:4;5891:16;;;5885:23;5881:32;;5865:14;;;5858:56;5967:4;5956:16;;;5950:23;5946:32;5930:14;;5923:56;5709:276;7553:51;7640:6;7635:2;7624:9;7620:18;7613:34;7314:339;;;;;:::o;7658:380::-;7737:1;7733:12;;;;7780;;;7801:61;;7855:4;7847:6;7843:17;7833:27;;7801:61;7908:2;7900:6;7897:14;7877:18;7874:38;7871:161;;;7954:10;7949:3;7945:20;7942:1;7935:31;7989:4;7986:1;7979:15;8017:4;8014:1;8007:15;8043:121;8128:10;8121:5;8117:22;8110:5;8107:33;8097:61;;8154:1;8151;8144:12;8169:522;8278:6;8331:2;8319:9;8310:7;8306:23;8302:32;8299:52;;;8347:1;8344;8337:12;8299:52;8380:2;8374:9;8422:2;8414:6;8410:15;8491:6;8479:10;8476:22;8455:18;8443:10;8440:34;8437:62;8434:88;;;8502:18;;:::i;:::-;8538:2;8531:22;8575:16;;8600:30;8575:16;8600:30;:::i;:::-;8639:21;;8646:6;8169:522;-1:-1:-1;;;8169:522:31:o;8696:245::-;8754:6;8807:2;8795:9;8786:7;8782:23;8778:32;8775:52;;;8823:1;8820;8813:12;8775:52;8862:9;8849:23;8881:30;8905:5;8881:30;:::i;8946:354::-;9160:2;9145:18;;9185:20;;9214:30;9185:20;9214:30;:::i;:::-;9282:10;9271:22;9253:41;;;8946:354;;-1:-1:-1;8946:354:31:o;9305:425::-;9547:2;9532:18;;9572:20;;9601:30;9572:20;9601:30;:::i;:::-;9669:10;9658:22;9640:41;;9712:2;9697:18;;;9690:34;;;;9305:425;;-1:-1:-1;9305:425:31:o;9735:461::-;9788:3;9826:5;9820:12;9853:6;9848:3;9841:19;9879:4;9908:2;9903:3;9899:12;9892:19;;9945:2;9938:5;9934:14;9966:1;9976:195;9990:6;9987:1;9984:13;9976:195;;;10055:13;;-1:-1:-1;;;;;10051:39:31;10039:52;;10111:12;;;;10146:15;;;;10087:1;10005:9;9976:195;;;-1:-1:-1;10187:3:31;;9735:461;-1:-1:-1;;;;;9735:461:31:o;10201:515::-;10462:6;10451:9;10444:25;10505:3;10500:2;10489:9;10485:18;10478:31;10425:4;10526:57;10578:3;10567:9;10563:19;10555:6;10526:57;:::i;:::-;10631:8;10619:21;;;;10614:2;10599:18;;10592:49;-1:-1:-1;;;;;;10677:32:31;;;;10672:2;10657:18;;;10650:60;10518:65;10201:515;-1:-1:-1;;10201:515:31:o;10916:694::-;11225:3;11214:9;11207:22;11188:4;11252:57;11304:3;11293:9;11289:19;11281:6;11252:57;:::i;:::-;11357:9;11349:6;11345:22;11340:2;11329:9;11325:18;11318:50;11385:33;11411:6;11403;11385:33;:::i;:::-;-1:-1:-1;;;;;11492:15:31;;;11487:2;11472:18;;11465:43;11544:15;;;;11539:2;11524:18;;11517:43;-1:-1:-1;11591:3:31;11576:19;11569:35;11377:41;10916:694;-1:-1:-1;;;10916:694:31:o;11615:697::-;11724:6;11777:2;11765:9;11756:7;11752:23;11748:32;11745:52;;;11793:1;11790;11783:12;11745:52;11826:2;11820:9;11868:2;11860:6;11856:15;11937:6;11925:10;11922:22;11901:18;11889:10;11886:34;11883:62;11880:88;;;11948:18;;:::i;:::-;11984:2;11977:22;12021:16;;12046:52;12021:16;12046:52;:::i;:::-;12107:21;;12173:2;12158:18;;12152:25;12186:54;12152:25;12186:54;:::i;:::-;12268:2;12256:15;;12249:32;12260:6;11615:697;-1:-1:-1;;;11615:697:31:o;12317:303::-;12411:6;12464:2;12452:9;12443:7;12439:23;12435:32;12432:52;;;12480:1;12477;12470:12;12432:52;12519:9;12506:23;12538:52;12584:5;12538:52;:::i;12914:429::-;13026:5;13013:19;13041:54;13087:7;13041:54;:::i;:::-;-1:-1:-1;;;;;13154:16:31;;;13142:29;;13219:4;13208:16;;13195:30;;13234:54;13195:30;13234:54;:::i;:::-;13333:2;13324:7;13320:16;13313:4;13308:3;13304:14;13297:40;;;12914:429;;:::o;13348:299::-;13562:2;13547:18;;13574:67;13551:9;13623:6;13574:67;:::i;13652:370::-;13894:2;13879:18;;13906:67;13883:9;13955:6;13906:67;:::i;:::-;14009:6;14004:2;13993:9;13989:18;13982:34;13652:370;;;;;:::o;14676:277::-;14743:6;14796:2;14784:9;14775:7;14771:23;14767:32;14764:52;;;14812:1;14809;14802:12;14764:52;14844:9;14838:16;14897:5;14890:13;14883:21;14876:5;14873:32;14863:60;;14919:1;14916;14909:12;14958:168;14998:7;15064:1;15060;15056:6;15052:14;15049:1;15046:21;15041:1;15034:9;15027:17;15023:45;15020:71;;;15071:18;;:::i;:::-;-1:-1:-1;15111:9:31;;14958:168::o;15726:127::-;15787:10;15782:3;15778:20;15775:1;15768:31;15818:4;15815:1;15808:15;15842:4;15839:1;15832:15;15858:135;15897:3;-1:-1:-1;;15918:17:31;;15915:43;;;15938:18;;:::i;:::-;-1:-1:-1;15985:1:31;15974:13;;15858:135::o;15998:272::-;16068:6;16121:2;16109:9;16100:7;16096:23;16092:32;16089:52;;;16137:1;16134;16127:12;16089:52;16169:9;16163:16;16188:52;16234:5;16188:52;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1626200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"commitDelayedProtocolParams()": "infinite",
								"commitDelayedStrategyParams(uint256)": "infinite",
								"commitInternalParams()": "infinite",
								"contractName()": "infinite",
								"contractNameBytes()": "310",
								"contractVersion()": "infinite",
								"contractVersionBytes()": "233",
								"createVault(address[],address,uint24,address)": "infinite",
								"delayedProtocolParams()": "infinite",
								"delayedProtocolParamsTimestamp()": "2424",
								"delayedProtocolPerVaultParamsTimestamp(uint256)": "2505",
								"delayedStrategyParams(uint256)": "infinite",
								"delayedStrategyParamsTimestamp(uint256)": "2571",
								"internalParams()": "6879",
								"internalParamsTimestamp()": "2315",
								"stageDelayedProtocolParams((address,address))": "infinite",
								"stageDelayedStrategyParams(uint256,(uint32))": "infinite",
								"stageInternalParams((address,address,address))": "infinite",
								"stagedDelayedProtocolParams()": "infinite",
								"stagedDelayedStrategyParams(uint256)": "infinite",
								"stagedInternalParams()": "6901",
								"supportsInterface(bytes4)": "544"
							},
							"internal": {
								"_contractName()": "infinite",
								"_contractVersion()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 391,
									"end": 7446,
									"name": "PUSH",
									"source": 29,
									"value": "80"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "PUSH",
									"source": 29,
									"value": "40"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "MSTORE",
									"source": 29
								},
								{
									"begin": 644,
									"end": 1090,
									"name": "CALLVALUE",
									"source": 29
								},
								{
									"begin": 644,
									"end": 1090,
									"name": "DUP1",
									"source": 29
								},
								{
									"begin": 644,
									"end": 1090,
									"name": "ISZERO",
									"source": 29
								},
								{
									"begin": 644,
									"end": 1090,
									"name": "PUSH [tag]",
									"source": 29,
									"value": "1"
								},
								{
									"begin": 644,
									"end": 1090,
									"name": "JUMPI",
									"source": 29
								},
								{
									"begin": 644,
									"end": 1090,
									"name": "PUSH",
									"source": 29,
									"value": "0"
								},
								{
									"begin": 644,
									"end": 1090,
									"name": "DUP1",
									"source": 29
								},
								{
									"begin": 644,
									"end": 1090,
									"name": "REVERT",
									"source": 29
								},
								{
									"begin": 644,
									"end": 1090,
									"name": "tag",
									"source": 29,
									"value": "1"
								},
								{
									"begin": 644,
									"end": 1090,
									"name": "JUMPDEST",
									"source": 29
								},
								{
									"begin": 644,
									"end": 1090,
									"name": "POP",
									"source": 29
								},
								{
									"begin": 644,
									"end": 1090,
									"name": "PUSH",
									"source": 29,
									"value": "40"
								},
								{
									"begin": 644,
									"end": 1090,
									"name": "MLOAD",
									"source": 29
								},
								{
									"begin": 644,
									"end": 1090,
									"name": "PUSHSIZE",
									"source": 29
								},
								{
									"begin": 644,
									"end": 1090,
									"name": "CODESIZE",
									"source": 29
								},
								{
									"begin": 644,
									"end": 1090,
									"name": "SUB",
									"source": 29
								},
								{
									"begin": 644,
									"end": 1090,
									"name": "DUP1",
									"source": 29
								},
								{
									"begin": 644,
									"end": 1090,
									"name": "PUSHSIZE",
									"source": 29
								},
								{
									"begin": 644,
									"end": 1090,
									"name": "DUP4",
									"source": 29
								},
								{
									"begin": 644,
									"end": 1090,
									"name": "CODECOPY",
									"source": 29
								},
								{
									"begin": 644,
									"end": 1090,
									"name": "DUP2",
									"source": 29
								},
								{
									"begin": 644,
									"end": 1090,
									"name": "ADD",
									"source": 29
								},
								{
									"begin": 644,
									"end": 1090,
									"name": "PUSH",
									"source": 29,
									"value": "40"
								},
								{
									"begin": 644,
									"end": 1090,
									"name": "DUP2",
									"source": 29
								},
								{
									"begin": 644,
									"end": 1090,
									"name": "SWAP1",
									"source": 29
								},
								{
									"begin": 644,
									"end": 1090,
									"name": "MSTORE",
									"source": 29
								},
								{
									"begin": 644,
									"end": 1090,
									"name": "PUSH [tag]",
									"source": 29,
									"value": "2"
								},
								{
									"begin": 644,
									"end": 1090,
									"name": "SWAP2",
									"source": 29
								},
								{
									"begin": 644,
									"end": 1090,
									"name": "PUSH [tag]",
									"source": 29,
									"value": "3"
								},
								{
									"begin": 644,
									"end": 1090,
									"name": "JUMP",
									"source": 29,
									"value": "[in]"
								},
								{
									"begin": 644,
									"end": 1090,
									"name": "tag",
									"source": 29,
									"value": "2"
								},
								{
									"begin": 644,
									"end": 1090,
									"name": "JUMPDEST",
									"source": 29
								},
								{
									"begin": 1799,
									"end": 1833,
									"name": "DUP2",
									"source": 30
								},
								{
									"begin": 1799,
									"end": 1833,
									"name": "MLOAD",
									"source": 30
								},
								{
									"begin": 1850,
									"end": 1880,
									"name": "PUSH",
									"source": 30,
									"value": "40"
								},
								{
									"begin": 1850,
									"end": 1880,
									"name": "DUP1",
									"source": 30
								},
								{
									"begin": 1850,
									"end": 1880,
									"name": "MLOAD",
									"source": 30
								},
								{
									"begin": 1850,
									"end": 1880,
									"name": "DUP1",
									"source": 30
								},
								{
									"begin": 1850,
									"end": 1880,
									"name": "DUP3",
									"source": 30
								},
								{
									"begin": 1850,
									"end": 1880,
									"name": "ADD",
									"source": 30
								},
								{
									"begin": 1850,
									"end": 1880,
									"name": "SWAP1",
									"source": 30
								},
								{
									"begin": 1850,
									"end": 1880,
									"name": "SWAP2",
									"source": 30
								},
								{
									"begin": 1850,
									"end": 1880,
									"name": "MSTORE",
									"source": 30
								},
								{
									"begin": 1850,
									"end": 1880,
									"name": "PUSH",
									"source": 30,
									"value": "2"
								},
								{
									"begin": 1850,
									"end": 1880,
									"name": "DUP2",
									"source": 30
								},
								{
									"begin": 1850,
									"end": 1880,
									"name": "MSTORE",
									"source": 30
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20AD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1850,
									"end": 1880,
									"name": "PUSH",
									"source": 30,
									"value": "20"
								},
								{
									"begin": 1850,
									"end": 1880,
									"name": "DUP3",
									"source": 30
								},
								{
									"begin": 1850,
									"end": 1880,
									"name": "ADD",
									"source": 30
								},
								{
									"begin": 1850,
									"end": 1880,
									"name": "MSTORE",
									"source": 30
								},
								{
									"begin": 773,
									"end": 788,
									"name": "DUP4",
									"source": 29
								},
								{
									"begin": 773,
									"end": 788,
									"name": "SWAP2",
									"source": 29
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1791,
									"end": 1848,
									"name": "AND",
									"source": 30
								},
								{
									"begin": 1783,
									"end": 1881,
									"name": "PUSH [tag]",
									"source": 30,
									"value": "7"
								},
								{
									"begin": 1783,
									"end": 1881,
									"name": "JUMPI",
									"source": 30
								},
								{
									"begin": 1783,
									"end": 1881,
									"name": "PUSH",
									"source": 30,
									"value": "40"
								},
								{
									"begin": 1783,
									"end": 1881,
									"name": "MLOAD",
									"source": 30
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1783,
									"end": 1881,
									"name": "DUP2",
									"source": 30
								},
								{
									"begin": 1783,
									"end": 1881,
									"name": "MSTORE",
									"source": 30
								},
								{
									"begin": 1783,
									"end": 1881,
									"name": "PUSH",
									"source": 30,
									"value": "4"
								},
								{
									"begin": 1783,
									"end": 1881,
									"name": "ADD",
									"source": 30
								},
								{
									"begin": 1783,
									"end": 1881,
									"name": "PUSH [tag]",
									"source": 30,
									"value": "8"
								},
								{
									"begin": 1783,
									"end": 1881,
									"name": "SWAP2",
									"source": 30
								},
								{
									"begin": 1783,
									"end": 1881,
									"name": "SWAP1",
									"source": 30
								},
								{
									"begin": 1783,
									"end": 1881,
									"name": "PUSH [tag]",
									"source": 30,
									"value": "9"
								},
								{
									"begin": 1783,
									"end": 1881,
									"name": "JUMP",
									"source": 30,
									"value": "[in]"
								},
								{
									"begin": 1783,
									"end": 1881,
									"name": "tag",
									"source": 30,
									"value": "8"
								},
								{
									"begin": 1783,
									"end": 1881,
									"name": "JUMPDEST",
									"source": 30
								},
								{
									"begin": 1783,
									"end": 1881,
									"name": "PUSH",
									"source": 30,
									"value": "40"
								},
								{
									"begin": 1783,
									"end": 1881,
									"name": "MLOAD",
									"source": 30
								},
								{
									"begin": 1783,
									"end": 1881,
									"name": "DUP1",
									"source": 30
								},
								{
									"begin": 1783,
									"end": 1881,
									"name": "SWAP2",
									"source": 30
								},
								{
									"begin": 1783,
									"end": 1881,
									"name": "SUB",
									"source": 30
								},
								{
									"begin": 1783,
									"end": 1881,
									"name": "SWAP1",
									"source": 30
								},
								{
									"begin": 1783,
									"end": 1881,
									"name": "REVERT",
									"source": 30
								},
								{
									"begin": 1783,
									"end": 1881,
									"name": "tag",
									"source": 30,
									"value": "7"
								},
								{
									"begin": 1783,
									"end": 1881,
									"name": "JUMPDEST",
									"source": 30
								},
								{
									"begin": 1783,
									"end": 1881,
									"name": "POP",
									"source": 30
								},
								{
									"begin": 1945,
									"end": 1946,
									"name": "PUSH",
									"source": 30,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1900,
									"end": 1947,
									"name": "AND",
									"source": 30
								},
								{
									"begin": 1908,
									"end": 1923,
									"name": "DUP2",
									"source": 30
								},
								{
									"begin": 1908,
									"end": 1932,
									"name": "PUSH",
									"source": 30,
									"value": "20"
								},
								{
									"begin": 1908,
									"end": 1932,
									"name": "ADD",
									"source": 30
								},
								{
									"begin": 1908,
									"end": 1932,
									"name": "MLOAD",
									"source": 30
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1900,
									"end": 1947,
									"name": "AND",
									"source": 30
								},
								{
									"begin": 1900,
									"end": 1947,
									"name": "EQ",
									"source": 30
								},
								{
									"begin": 1900,
									"end": 1947,
									"name": "ISZERO",
									"source": 30
								},
								{
									"begin": 1949,
									"end": 1979,
									"name": "PUSH",
									"source": 30,
									"value": "40"
								},
								{
									"begin": 1949,
									"end": 1979,
									"name": "MLOAD",
									"source": 30
								},
								{
									"begin": 1949,
									"end": 1979,
									"name": "DUP1",
									"source": 30
								},
								{
									"begin": 1949,
									"end": 1979,
									"name": "PUSH",
									"source": 30,
									"value": "40"
								},
								{
									"begin": 1949,
									"end": 1979,
									"name": "ADD",
									"source": 30
								},
								{
									"begin": 1949,
									"end": 1979,
									"name": "PUSH",
									"source": 30,
									"value": "40"
								},
								{
									"begin": 1949,
									"end": 1979,
									"name": "MSTORE",
									"source": 30
								},
								{
									"begin": 1949,
									"end": 1979,
									"name": "DUP1",
									"source": 30
								},
								{
									"begin": 1949,
									"end": 1979,
									"name": "PUSH",
									"source": 30,
									"value": "2"
								},
								{
									"begin": 1949,
									"end": 1979,
									"name": "DUP2",
									"source": 30
								},
								{
									"begin": 1949,
									"end": 1979,
									"name": "MSTORE",
									"source": 30
								},
								{
									"begin": 1949,
									"end": 1979,
									"name": "PUSH",
									"source": 30,
									"value": "20"
								},
								{
									"begin": 1949,
									"end": 1979,
									"name": "ADD",
									"source": 30
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20AD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1949,
									"end": 1979,
									"name": "DUP2",
									"source": 30
								},
								{
									"begin": 1949,
									"end": 1979,
									"name": "MSTORE",
									"source": 30
								},
								{
									"begin": 1949,
									"end": 1979,
									"name": "POP",
									"source": 30
								},
								{
									"begin": 1892,
									"end": 1980,
									"name": "SWAP1",
									"source": 30
								},
								{
									"begin": 1892,
									"end": 1980,
									"name": "PUSH [tag]",
									"source": 30,
									"value": "10"
								},
								{
									"begin": 1892,
									"end": 1980,
									"name": "JUMPI",
									"source": 30
								},
								{
									"begin": 1892,
									"end": 1980,
									"name": "PUSH",
									"source": 30,
									"value": "40"
								},
								{
									"begin": 1892,
									"end": 1980,
									"name": "MLOAD",
									"source": 30
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1892,
									"end": 1980,
									"name": "DUP2",
									"source": 30
								},
								{
									"begin": 1892,
									"end": 1980,
									"name": "MSTORE",
									"source": 30
								},
								{
									"begin": 1892,
									"end": 1980,
									"name": "PUSH",
									"source": 30,
									"value": "4"
								},
								{
									"begin": 1892,
									"end": 1980,
									"name": "ADD",
									"source": 30
								},
								{
									"begin": 1892,
									"end": 1980,
									"name": "PUSH [tag]",
									"source": 30,
									"value": "8"
								},
								{
									"begin": 1892,
									"end": 1980,
									"name": "SWAP2",
									"source": 30
								},
								{
									"begin": 1892,
									"end": 1980,
									"name": "SWAP1",
									"source": 30
								},
								{
									"begin": 1892,
									"end": 1980,
									"name": "PUSH [tag]",
									"source": 30,
									"value": "9"
								},
								{
									"begin": 1892,
									"end": 1980,
									"name": "JUMP",
									"source": 30,
									"value": "[in]"
								},
								{
									"begin": 1892,
									"end": 1980,
									"name": "tag",
									"source": 30,
									"value": "10"
								},
								{
									"begin": 1892,
									"end": 1980,
									"name": "JUMPDEST",
									"source": 30
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2007,
									"end": 2032,
									"name": "PUSH",
									"source": 30,
									"value": "40"
								},
								{
									"begin": 2007,
									"end": 2032,
									"name": "DUP1",
									"source": 30
								},
								{
									"begin": 2007,
									"end": 2032,
									"name": "DUP3",
									"source": 30
								},
								{
									"begin": 2007,
									"end": 2032,
									"name": "ADD",
									"source": 30
								},
								{
									"begin": 2007,
									"end": 2032,
									"name": "MLOAD",
									"source": 30
								},
								{
									"begin": 2049,
									"end": 2079,
									"name": "DUP2",
									"source": 30
								},
								{
									"begin": 2049,
									"end": 2079,
									"name": "MLOAD",
									"source": 30
								},
								{
									"begin": 2049,
									"end": 2079,
									"name": "DUP1",
									"source": 30
								},
								{
									"begin": 2049,
									"end": 2079,
									"name": "DUP4",
									"source": 30
								},
								{
									"begin": 2049,
									"end": 2079,
									"name": "ADD",
									"source": 30
								},
								{
									"begin": 2049,
									"end": 2079,
									"name": "SWAP1",
									"source": 30
								},
								{
									"begin": 2049,
									"end": 2079,
									"name": "SWAP3",
									"source": 30
								},
								{
									"begin": 2049,
									"end": 2079,
									"name": "MSTORE",
									"source": 30
								},
								{
									"begin": 2049,
									"end": 2079,
									"name": "PUSH",
									"source": 30,
									"value": "2"
								},
								{
									"begin": 2049,
									"end": 2079,
									"name": "DUP3",
									"source": 30
								},
								{
									"begin": 2049,
									"end": 2079,
									"name": "MSTORE",
									"source": 30
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20AD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2049,
									"end": 2079,
									"name": "PUSH",
									"source": 30,
									"value": "20"
								},
								{
									"begin": 2049,
									"end": 2079,
									"name": "DUP4",
									"source": 30
								},
								{
									"begin": 2049,
									"end": 2079,
									"name": "ADD",
									"source": 30
								},
								{
									"begin": 2049,
									"end": 2079,
									"name": "MSTORE",
									"source": 30
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1999,
									"end": 2047,
									"name": "AND",
									"source": 30
								},
								{
									"begin": 1991,
									"end": 2080,
									"name": "PUSH [tag]",
									"source": 30,
									"value": "12"
								},
								{
									"begin": 1991,
									"end": 2080,
									"name": "JUMPI",
									"source": 30
								},
								{
									"begin": 1991,
									"end": 2080,
									"name": "PUSH",
									"source": 30,
									"value": "40"
								},
								{
									"begin": 1991,
									"end": 2080,
									"name": "MLOAD",
									"source": 30
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1991,
									"end": 2080,
									"name": "DUP2",
									"source": 30
								},
								{
									"begin": 1991,
									"end": 2080,
									"name": "MSTORE",
									"source": 30
								},
								{
									"begin": 1991,
									"end": 2080,
									"name": "PUSH",
									"source": 30,
									"value": "4"
								},
								{
									"begin": 1991,
									"end": 2080,
									"name": "ADD",
									"source": 30
								},
								{
									"begin": 1991,
									"end": 2080,
									"name": "PUSH [tag]",
									"source": 30,
									"value": "8"
								},
								{
									"begin": 1991,
									"end": 2080,
									"name": "SWAP2",
									"source": 30
								},
								{
									"begin": 1991,
									"end": 2080,
									"name": "SWAP1",
									"source": 30
								},
								{
									"begin": 1991,
									"end": 2080,
									"name": "PUSH [tag]",
									"source": 30,
									"value": "9"
								},
								{
									"begin": 1991,
									"end": 2080,
									"name": "JUMP",
									"source": 30,
									"value": "[in]"
								},
								{
									"begin": 1991,
									"end": 2080,
									"name": "tag",
									"source": 30,
									"value": "12"
								},
								{
									"begin": 1991,
									"end": 2080,
									"name": "JUMPDEST",
									"source": 30
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "DUP1",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "MLOAD",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2106,
									"name": "PUSH",
									"source": 30,
									"value": "0"
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "DUP1",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "SLOAD",
									"source": 30
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "SWAP1",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "DUP2",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "AND",
									"source": 30
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "SWAP4",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "DUP5",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "AND",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "OR",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "SWAP1",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "SWAP2",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "SSTORE",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "PUSH",
									"source": 30,
									"value": "20"
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "DUP1",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "DUP5",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "ADD",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "MLOAD",
									"source": 30
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "DUP1",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "SLOAD",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "DUP5",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "AND",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "SWAP2",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "DUP6",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "AND",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "SWAP2",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "SWAP1",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "SWAP2",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "OR",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "SWAP1",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "SSTORE",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "PUSH",
									"source": 30,
									"value": "40"
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "SWAP4",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "DUP5",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "ADD",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "MLOAD",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "PUSH",
									"source": 30,
									"value": "2"
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "DUP1",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "SLOAD",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "SWAP1",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "SWAP4",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "AND",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "SWAP1",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "DUP5",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "AND",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "OR",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "DUP3",
									"source": 30
								},
								{
									"begin": 2091,
									"end": 2124,
									"name": "SSTORE",
									"source": 30
								},
								{
									"begin": 822,
									"end": 860,
									"name": "DUP5",
									"source": 29
								},
								{
									"begin": 822,
									"end": 860,
									"name": "MLOAD",
									"source": 29
								},
								{
									"begin": 877,
									"end": 907,
									"name": "DUP5",
									"source": 29
								},
								{
									"begin": 877,
									"end": 907,
									"name": "MLOAD",
									"source": 29
								},
								{
									"begin": 877,
									"end": 907,
									"name": "DUP1",
									"source": 29
								},
								{
									"begin": 877,
									"end": 907,
									"name": "DUP7",
									"source": 29
								},
								{
									"begin": 877,
									"end": 907,
									"name": "ADD",
									"source": 29
								},
								{
									"begin": 877,
									"end": 907,
									"name": "SWAP1",
									"source": 29
								},
								{
									"begin": 877,
									"end": 907,
									"name": "SWAP6",
									"source": 29
								},
								{
									"begin": 877,
									"end": 907,
									"name": "MSTORE",
									"source": 29
								},
								{
									"begin": 877,
									"end": 907,
									"name": "SWAP2",
									"source": 29
								},
								{
									"begin": 877,
									"end": 907,
									"name": "DUP5",
									"source": 29
								},
								{
									"begin": 877,
									"end": 907,
									"name": "MSTORE",
									"source": 29
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20AD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 877,
									"end": 907,
									"name": "SWAP1",
									"source": 29
								},
								{
									"begin": 877,
									"end": 907,
									"name": "DUP5",
									"source": 29
								},
								{
									"begin": 877,
									"end": 907,
									"name": "ADD",
									"source": 29
								},
								{
									"begin": 877,
									"end": 907,
									"name": "MSTORE",
									"source": 29
								},
								{
									"begin": 814,
									"end": 875,
									"name": "AND",
									"source": 29
								},
								{
									"begin": 806,
									"end": 908,
									"name": "PUSH [tag]",
									"source": 29,
									"value": "15"
								},
								{
									"begin": 806,
									"end": 908,
									"name": "JUMPI",
									"source": 29
								},
								{
									"begin": 806,
									"end": 908,
									"name": "PUSH",
									"source": 29,
									"value": "40"
								},
								{
									"begin": 806,
									"end": 908,
									"name": "MLOAD",
									"source": 29
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 806,
									"end": 908,
									"name": "DUP2",
									"source": 29
								},
								{
									"begin": 806,
									"end": 908,
									"name": "MSTORE",
									"source": 29
								},
								{
									"begin": 806,
									"end": 908,
									"name": "PUSH",
									"source": 29,
									"value": "4"
								},
								{
									"begin": 806,
									"end": 908,
									"name": "ADD",
									"source": 29
								},
								{
									"begin": 806,
									"end": 908,
									"name": "PUSH [tag]",
									"source": 29,
									"value": "8"
								},
								{
									"begin": 806,
									"end": 908,
									"name": "SWAP2",
									"source": 29
								},
								{
									"begin": 806,
									"end": 908,
									"name": "SWAP1",
									"source": 29
								},
								{
									"begin": 806,
									"end": 908,
									"name": "PUSH [tag]",
									"source": 29,
									"value": "9"
								},
								{
									"begin": 806,
									"end": 908,
									"name": "JUMP",
									"source": 29,
									"value": "[in]"
								},
								{
									"begin": 806,
									"end": 908,
									"name": "tag",
									"source": 29,
									"value": "15"
								},
								{
									"begin": 806,
									"end": 908,
									"name": "JUMPDEST",
									"source": 29
								},
								{
									"begin": 806,
									"end": 908,
									"name": "POP",
									"source": 29
								},
								{
									"begin": 977,
									"end": 978,
									"name": "PUSH",
									"source": 29,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 927,
									"end": 979,
									"name": "AND",
									"source": 29
								},
								{
									"begin": 935,
									"end": 957,
									"name": "DUP2",
									"source": 29
								},
								{
									"begin": 935,
									"end": 964,
									"name": "PUSH",
									"source": 29,
									"value": "20"
								},
								{
									"begin": 935,
									"end": 964,
									"name": "ADD",
									"source": 29
								},
								{
									"begin": 935,
									"end": 964,
									"name": "MLOAD",
									"source": 29
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 927,
									"end": 979,
									"name": "AND",
									"source": 29
								},
								{
									"begin": 927,
									"end": 979,
									"name": "EQ",
									"source": 29
								},
								{
									"begin": 927,
									"end": 979,
									"name": "ISZERO",
									"source": 29
								},
								{
									"begin": 981,
									"end": 1011,
									"name": "PUSH",
									"source": 29,
									"value": "40"
								},
								{
									"begin": 981,
									"end": 1011,
									"name": "MLOAD",
									"source": 29
								},
								{
									"begin": 981,
									"end": 1011,
									"name": "DUP1",
									"source": 29
								},
								{
									"begin": 981,
									"end": 1011,
									"name": "PUSH",
									"source": 29,
									"value": "40"
								},
								{
									"begin": 981,
									"end": 1011,
									"name": "ADD",
									"source": 29
								},
								{
									"begin": 981,
									"end": 1011,
									"name": "PUSH",
									"source": 29,
									"value": "40"
								},
								{
									"begin": 981,
									"end": 1011,
									"name": "MSTORE",
									"source": 29
								},
								{
									"begin": 981,
									"end": 1011,
									"name": "DUP1",
									"source": 29
								},
								{
									"begin": 981,
									"end": 1011,
									"name": "PUSH",
									"source": 29,
									"value": "2"
								},
								{
									"begin": 981,
									"end": 1011,
									"name": "DUP2",
									"source": 29
								},
								{
									"begin": 981,
									"end": 1011,
									"name": "MSTORE",
									"source": 29
								},
								{
									"begin": 981,
									"end": 1011,
									"name": "PUSH",
									"source": 29,
									"value": "20"
								},
								{
									"begin": 981,
									"end": 1011,
									"name": "ADD",
									"source": 29
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20AD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 981,
									"end": 1011,
									"name": "DUP2",
									"source": 29
								},
								{
									"begin": 981,
									"end": 1011,
									"name": "MSTORE",
									"source": 29
								},
								{
									"begin": 981,
									"end": 1011,
									"name": "POP",
									"source": 29
								},
								{
									"begin": 919,
									"end": 1012,
									"name": "SWAP1",
									"source": 29
								},
								{
									"begin": 919,
									"end": 1012,
									"name": "PUSH [tag]",
									"source": 29,
									"value": "17"
								},
								{
									"begin": 919,
									"end": 1012,
									"name": "JUMPI",
									"source": 29
								},
								{
									"begin": 919,
									"end": 1012,
									"name": "PUSH",
									"source": 29,
									"value": "40"
								},
								{
									"begin": 919,
									"end": 1012,
									"name": "MLOAD",
									"source": 29
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 919,
									"end": 1012,
									"name": "DUP2",
									"source": 29
								},
								{
									"begin": 919,
									"end": 1012,
									"name": "MSTORE",
									"source": 29
								},
								{
									"begin": 919,
									"end": 1012,
									"name": "PUSH",
									"source": 29,
									"value": "4"
								},
								{
									"begin": 919,
									"end": 1012,
									"name": "ADD",
									"source": 29
								},
								{
									"begin": 919,
									"end": 1012,
									"name": "PUSH [tag]",
									"source": 29,
									"value": "8"
								},
								{
									"begin": 919,
									"end": 1012,
									"name": "SWAP2",
									"source": 29
								},
								{
									"begin": 919,
									"end": 1012,
									"name": "SWAP1",
									"source": 29
								},
								{
									"begin": 919,
									"end": 1012,
									"name": "PUSH [tag]",
									"source": 29,
									"value": "9"
								},
								{
									"begin": 919,
									"end": 1012,
									"name": "JUMP",
									"source": 29,
									"value": "[in]"
								},
								{
									"begin": 919,
									"end": 1012,
									"name": "tag",
									"source": 29,
									"value": "17"
								},
								{
									"begin": 919,
									"end": 1012,
									"name": "JUMPDEST",
									"source": 29
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "PUSH",
									"source": 29,
									"value": "40"
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "DUP1",
									"source": 29
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "MLOAD",
									"source": 29
								},
								{
									"begin": 2895,
									"end": 2908,
									"name": "DUP3",
									"source": 31
								},
								{
									"begin": 2895,
									"end": 2908,
									"name": "MLOAD",
									"source": 31
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2891,
									"end": 2913,
									"name": "SWAP1",
									"source": 31
								},
								{
									"begin": 2891,
									"end": 2913,
									"name": "DUP2",
									"source": 31
								},
								{
									"begin": 2891,
									"end": 2913,
									"name": "AND",
									"source": 31
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "PUSH",
									"source": 29,
									"value": "20"
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "DUP1",
									"source": 29
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "DUP5",
									"source": 29
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "ADD",
									"source": 29
								},
								{
									"begin": 2873,
									"end": 2914,
									"name": "SWAP2",
									"source": 31
								},
								{
									"begin": 2873,
									"end": 2914,
									"name": "SWAP1",
									"source": 31
								},
								{
									"begin": 2873,
									"end": 2914,
									"name": "SWAP2",
									"source": 31
								},
								{
									"begin": 2873,
									"end": 2914,
									"name": "MSTORE",
									"source": 31
								},
								{
									"begin": 2962,
									"end": 2979,
									"name": "DUP1",
									"source": 31
								},
								{
									"begin": 2962,
									"end": 2979,
									"name": "DUP6",
									"source": 31
								},
								{
									"begin": 2962,
									"end": 2979,
									"name": "ADD",
									"source": 31
								},
								{
									"begin": 2956,
									"end": 2980,
									"name": "MLOAD",
									"source": 31
								},
								{
									"begin": 2952,
									"end": 2985,
									"name": "SWAP1",
									"source": 31
								},
								{
									"begin": 2952,
									"end": 2985,
									"name": "SWAP2",
									"source": 31
								},
								{
									"begin": 2952,
									"end": 2985,
									"name": "AND",
									"source": 31
								},
								{
									"begin": 2930,
									"end": 2950,
									"name": "DUP3",
									"source": 31
								},
								{
									"begin": 2930,
									"end": 2950,
									"name": "DUP5",
									"source": 31
								},
								{
									"begin": 2930,
									"end": 2950,
									"name": "ADD",
									"source": 31
								},
								{
									"begin": 2923,
									"end": 2986,
									"name": "MSTORE",
									"source": 31
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "DUP3",
									"source": 29
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "MLOAD",
									"source": 29
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "DUP1",
									"source": 29
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "DUP4",
									"source": 29
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "SUB",
									"source": 29
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "DUP5",
									"source": 29
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "ADD",
									"source": 29
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "DUP2",
									"source": 29
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "MSTORE",
									"source": 29
								},
								{
									"begin": 2808,
									"end": 2826,
									"name": "PUSH",
									"source": 31,
									"value": "60"
								},
								{
									"begin": 2808,
									"end": 2826,
									"name": "SWAP1",
									"source": 31
								},
								{
									"begin": 2808,
									"end": 2826,
									"name": "SWAP3",
									"source": 31
								},
								{
									"begin": 2808,
									"end": 2826,
									"name": "ADD",
									"source": 31
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "SWAP1",
									"source": 29
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "SWAP3",
									"source": 29
								},
								{
									"begin": 1048,
									"end": 1082,
									"name": "MSTORE",
									"source": 29
								},
								{
									"begin": 1023,
									"end": 1082,
									"name": "DUP1",
									"source": 29
								},
								{
									"begin": 1023,
									"end": 1082,
									"name": "MLOAD",
									"source": 29
								},
								{
									"begin": 1023,
									"end": 1082,
									"name": "PUSH [tag]",
									"source": 29,
									"value": "21"
								},
								{
									"begin": 1023,
									"end": 1082,
									"name": "SWAP3",
									"source": 29
								},
								{
									"begin": 1023,
									"end": 1045,
									"name": "PUSH",
									"source": 29,
									"value": "D"
								},
								{
									"begin": 1023,
									"end": 1045,
									"name": "SWAP3",
									"source": 29
								},
								{
									"begin": 1023,
									"end": 1082,
									"name": "ADD",
									"source": 29
								},
								{
									"begin": 1023,
									"end": 1082,
									"name": "SWAP1",
									"source": 29
								},
								{
									"begin": 1023,
									"end": 1082,
									"name": "PUSH [tag]",
									"source": 29,
									"value": "22"
								},
								{
									"begin": 1023,
									"end": 1082,
									"name": "JUMP",
									"source": 29,
									"value": "[in]"
								},
								{
									"begin": 1023,
									"end": 1082,
									"name": "tag",
									"source": 29,
									"value": "21"
								},
								{
									"begin": 1023,
									"end": 1082,
									"name": "JUMPDEST",
									"source": 29
								},
								{
									"begin": 1023,
									"end": 1082,
									"name": "POP",
									"source": 29
								},
								{
									"begin": 644,
									"end": 1090,
									"name": "POP",
									"source": 29
								},
								{
									"begin": 644,
									"end": 1090,
									"name": "POP",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "PUSH [tag]",
									"source": 29,
									"value": "37"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "JUMP",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "tag",
									"source": 29,
									"value": "22"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "JUMPDEST",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "DUP3",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "DUP1",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "SLOAD",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "PUSH [tag]",
									"source": 29,
									"value": "24"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "SWAP1",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "PUSH [tag]",
									"source": 29,
									"value": "25"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "JUMP",
									"source": 29,
									"value": "[in]"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "tag",
									"source": 29,
									"value": "24"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "JUMPDEST",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "SWAP1",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "PUSH",
									"source": 29,
									"value": "0"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "MSTORE",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "PUSH",
									"source": 29,
									"value": "20"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "PUSH",
									"source": 29,
									"value": "0"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "KECCAK256",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "SWAP1",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "PUSH",
									"source": 29,
									"value": "1F"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "ADD",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "PUSH",
									"source": 29,
									"value": "20"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "SWAP1",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "DIV",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "DUP2",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "ADD",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "SWAP3",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "DUP3",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "PUSH [tag]",
									"source": 29,
									"value": "27"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "JUMPI",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "PUSH",
									"source": 29,
									"value": "0"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "DUP6",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "SSTORE",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "PUSH [tag]",
									"source": 29,
									"value": "30"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "JUMP",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "tag",
									"source": 29,
									"value": "27"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "JUMPDEST",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "DUP3",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "PUSH",
									"source": 29,
									"value": "1F"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "LT",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "PUSH [tag]",
									"source": 29,
									"value": "28"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "JUMPI",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "DUP1",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "MLOAD",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "PUSH",
									"source": 29,
									"value": "FF"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "NOT",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "AND",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "DUP4",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "DUP1",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "ADD",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "OR",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "DUP6",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "SSTORE",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "PUSH [tag]",
									"source": 29,
									"value": "30"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "JUMP",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "tag",
									"source": 29,
									"value": "28"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "JUMPDEST",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "DUP3",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "DUP1",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "ADD",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "PUSH",
									"source": 29,
									"value": "1"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "ADD",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "DUP6",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "SSTORE",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "DUP3",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "ISZERO",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "PUSH [tag]",
									"source": 29,
									"value": "30"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "JUMPI",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "SWAP2",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "DUP3",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "ADD",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "tag",
									"source": 29,
									"value": "29"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "JUMPDEST",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "DUP3",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "DUP2",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "GT",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "ISZERO",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "PUSH [tag]",
									"source": 29,
									"value": "30"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "JUMPI",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "DUP3",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "MLOAD",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "DUP3",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "SSTORE",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "SWAP2",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "PUSH",
									"source": 29,
									"value": "20"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "ADD",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "SWAP2",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "SWAP1",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "PUSH",
									"source": 29,
									"value": "1"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "ADD",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "SWAP1",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "PUSH [tag]",
									"source": 29,
									"value": "29"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "JUMP",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "tag",
									"source": 29,
									"value": "30"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "JUMPDEST",
									"source": 29
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "PUSH [tag]",
									"source": 29,
									"value": "31"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "SWAP3",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "SWAP2",
									"source": 29
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "PUSH [tag]",
									"source": 29,
									"value": "32"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "JUMP",
									"source": 29,
									"value": "[in]"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "tag",
									"source": 29,
									"value": "31"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "JUMPDEST",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "POP",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "SWAP1",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "JUMP",
									"source": 29,
									"value": "[out]"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "tag",
									"source": 29,
									"value": "32"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "JUMPDEST",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "tag",
									"source": 29,
									"value": "33"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "JUMPDEST",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "DUP1",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "DUP3",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "GT",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "ISZERO",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "PUSH [tag]",
									"source": 29,
									"value": "31"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "JUMPI",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "PUSH",
									"source": 29,
									"value": "0"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "DUP2",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "SSTORE",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "PUSH",
									"source": 29,
									"value": "1"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "ADD",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "PUSH [tag]",
									"source": 29,
									"value": "33"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "JUMP",
									"source": 29
								},
								{
									"begin": 14,
									"end": 357,
									"name": "tag",
									"source": 31,
									"value": "35"
								},
								{
									"begin": 14,
									"end": 357,
									"name": "JUMPDEST",
									"source": 31
								},
								{
									"begin": 81,
									"end": 83,
									"name": "PUSH",
									"source": 31,
									"value": "40"
								},
								{
									"begin": 75,
									"end": 84,
									"name": "DUP1",
									"source": 31
								},
								{
									"begin": 75,
									"end": 84,
									"name": "MLOAD",
									"source": 31
								},
								{
									"begin": 75,
									"end": 84,
									"name": "SWAP1",
									"source": 31
								},
								{
									"begin": 111,
									"end": 126,
									"name": "DUP2",
									"source": 31
								},
								{
									"begin": 111,
									"end": 126,
									"name": "ADD",
									"source": 31
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 141,
									"end": 175,
									"name": "DUP2",
									"source": 31
								},
								{
									"begin": 141,
									"end": 175,
									"name": "GT",
									"source": 31
								},
								{
									"begin": 177,
									"end": 199,
									"name": "DUP3",
									"source": 31
								},
								{
									"begin": 177,
									"end": 199,
									"name": "DUP3",
									"source": 31
								},
								{
									"begin": 177,
									"end": 199,
									"name": "LT",
									"source": 31
								},
								{
									"begin": 138,
									"end": 200,
									"name": "OR",
									"source": 31
								},
								{
									"begin": 135,
									"end": 320,
									"name": "ISZERO",
									"source": 31
								},
								{
									"begin": 135,
									"end": 320,
									"name": "PUSH [tag]",
									"source": 31,
									"value": "39"
								},
								{
									"begin": 135,
									"end": 320,
									"name": "JUMPI",
									"source": 31
								},
								{
									"begin": 242,
									"end": 252,
									"name": "PUSH",
									"source": 31,
									"value": "4E487B71"
								},
								{
									"begin": 237,
									"end": 240,
									"name": "PUSH",
									"source": 31,
									"value": "E0"
								},
								{
									"begin": 233,
									"end": 253,
									"name": "SHL",
									"source": 31
								},
								{
									"begin": 230,
									"end": 231,
									"name": "PUSH",
									"source": 31,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 254,
									"name": "MSTORE",
									"source": 31
								},
								{
									"begin": 277,
									"end": 281,
									"name": "PUSH",
									"source": 31,
									"value": "41"
								},
								{
									"begin": 274,
									"end": 275,
									"name": "PUSH",
									"source": 31,
									"value": "4"
								},
								{
									"begin": 267,
									"end": 282,
									"name": "MSTORE",
									"source": 31
								},
								{
									"begin": 305,
									"end": 309,
									"name": "PUSH",
									"source": 31,
									"value": "24"
								},
								{
									"begin": 302,
									"end": 303,
									"name": "PUSH",
									"source": 31,
									"value": "0"
								},
								{
									"begin": 295,
									"end": 310,
									"name": "REVERT",
									"source": 31
								},
								{
									"begin": 135,
									"end": 320,
									"name": "tag",
									"source": 31,
									"value": "39"
								},
								{
									"begin": 135,
									"end": 320,
									"name": "JUMPDEST",
									"source": 31
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 31,
									"value": "40"
								},
								{
									"begin": 329,
									"end": 351,
									"name": "MSTORE",
									"source": 31
								},
								{
									"begin": 14,
									"end": 357,
									"name": "SWAP1",
									"source": 31
								},
								{
									"begin": 14,
									"end": 357,
									"name": "JUMP",
									"source": 31,
									"value": "[out]"
								},
								{
									"begin": 362,
									"end": 514,
									"name": "tag",
									"source": 31,
									"value": "36"
								},
								{
									"begin": 362,
									"end": 514,
									"name": "JUMPDEST",
									"source": 31
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 458,
									"end": 489,
									"name": "DUP2",
									"source": 31
								},
								{
									"begin": 458,
									"end": 489,
									"name": "AND",
									"source": 31
								},
								{
									"begin": 448,
									"end": 490,
									"name": "DUP2",
									"source": 31
								},
								{
									"begin": 448,
									"end": 490,
									"name": "EQ",
									"source": 31
								},
								{
									"begin": 438,
									"end": 508,
									"name": "PUSH [tag]",
									"source": 31,
									"value": "41"
								},
								{
									"begin": 438,
									"end": 508,
									"name": "JUMPI",
									"source": 31
								},
								{
									"begin": 504,
									"end": 505,
									"name": "PUSH",
									"source": 31,
									"value": "0"
								},
								{
									"begin": 501,
									"end": 502,
									"name": "DUP1",
									"source": 31
								},
								{
									"begin": 494,
									"end": 506,
									"name": "REVERT",
									"source": 31
								},
								{
									"begin": 438,
									"end": 508,
									"name": "tag",
									"source": 31,
									"value": "41"
								},
								{
									"begin": 438,
									"end": 508,
									"name": "JUMPDEST",
									"source": 31
								},
								{
									"begin": 362,
									"end": 514,
									"name": "POP",
									"source": 31
								},
								{
									"begin": 362,
									"end": 514,
									"name": "JUMP",
									"source": 31,
									"value": "[out]"
								},
								{
									"begin": 519,
									"end": 2004,
									"name": "tag",
									"source": 31,
									"value": "3"
								},
								{
									"begin": 519,
									"end": 2004,
									"name": "JUMPDEST",
									"source": 31
								},
								{
									"begin": 669,
									"end": 675,
									"name": "PUSH",
									"source": 31,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 683,
									"name": "DUP1",
									"source": 31
								},
								{
									"begin": 721,
									"end": 730,
									"name": "DUP3",
									"source": 31
								},
								{
									"begin": 712,
									"end": 719,
									"name": "DUP5",
									"source": 31
								},
								{
									"begin": 708,
									"end": 731,
									"name": "SUB",
									"source": 31
								},
								{
									"begin": 751,
									"end": 754,
									"name": "PUSH",
									"source": 31,
									"value": "A0"
								},
								{
									"begin": 747,
									"end": 749,
									"name": "DUP2",
									"source": 31
								},
								{
									"begin": 743,
									"end": 755,
									"name": "SLT",
									"source": 31
								},
								{
									"begin": 740,
									"end": 772,
									"name": "ISZERO",
									"source": 31
								},
								{
									"begin": 740,
									"end": 772,
									"name": "PUSH [tag]",
									"source": 31,
									"value": "43"
								},
								{
									"begin": 740,
									"end": 772,
									"name": "JUMPI",
									"source": 31
								},
								{
									"begin": 768,
									"end": 769,
									"name": "PUSH",
									"source": 31,
									"value": "0"
								},
								{
									"begin": 765,
									"end": 766,
									"name": "DUP1",
									"source": 31
								},
								{
									"begin": 758,
									"end": 770,
									"name": "REVERT",
									"source": 31
								},
								{
									"begin": 740,
									"end": 772,
									"name": "tag",
									"source": 31,
									"value": "43"
								},
								{
									"begin": 740,
									"end": 772,
									"name": "JUMPDEST",
									"source": 31
								},
								{
									"begin": 792,
									"end": 796,
									"name": "PUSH",
									"source": 31,
									"value": "60"
								},
								{
									"begin": 788,
									"end": 790,
									"name": "DUP2",
									"source": 31
								},
								{
									"begin": 784,
									"end": 797,
									"name": "SLT",
									"source": 31
								},
								{
									"begin": 781,
									"end": 814,
									"name": "ISZERO",
									"source": 31
								},
								{
									"begin": 781,
									"end": 814,
									"name": "PUSH [tag]",
									"source": 31,
									"value": "44"
								},
								{
									"begin": 781,
									"end": 814,
									"name": "JUMPI",
									"source": 31
								},
								{
									"begin": 810,
									"end": 811,
									"name": "PUSH",
									"source": 31,
									"value": "0"
								},
								{
									"begin": 807,
									"end": 808,
									"name": "DUP1",
									"source": 31
								},
								{
									"begin": 800,
									"end": 812,
									"name": "REVERT",
									"source": 31
								},
								{
									"begin": 781,
									"end": 814,
									"name": "tag",
									"source": 31,
									"value": "44"
								},
								{
									"begin": 781,
									"end": 814,
									"name": "JUMPDEST",
									"source": 31
								},
								{
									"begin": 843,
									"end": 845,
									"name": "PUSH",
									"source": 31,
									"value": "40"
								},
								{
									"begin": 837,
									"end": 846,
									"name": "MLOAD",
									"source": 31
								},
								{
									"begin": 885,
									"end": 889,
									"name": "PUSH",
									"source": 31,
									"value": "60"
								},
								{
									"begin": 873,
									"end": 890,
									"name": "DUP2",
									"source": 31
								},
								{
									"begin": 873,
									"end": 890,
									"name": "ADD",
									"source": 31
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 905,
									"end": 939,
									"name": "DUP2",
									"source": 31
								},
								{
									"begin": 905,
									"end": 939,
									"name": "GT",
									"source": 31
								},
								{
									"begin": 941,
									"end": 963,
									"name": "DUP3",
									"source": 31
								},
								{
									"begin": 941,
									"end": 963,
									"name": "DUP3",
									"source": 31
								},
								{
									"begin": 941,
									"end": 963,
									"name": "LT",
									"source": 31
								},
								{
									"begin": 902,
									"end": 964,
									"name": "OR",
									"source": 31
								},
								{
									"begin": 899,
									"end": 1084,
									"name": "ISZERO",
									"source": 31
								},
								{
									"begin": 899,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 31,
									"value": "45"
								},
								{
									"begin": 899,
									"end": 1084,
									"name": "JUMPI",
									"source": 31
								},
								{
									"begin": 1006,
									"end": 1016,
									"name": "PUSH",
									"source": 31,
									"value": "4E487B71"
								},
								{
									"begin": 1001,
									"end": 1004,
									"name": "PUSH",
									"source": 31,
									"value": "E0"
								},
								{
									"begin": 997,
									"end": 1017,
									"name": "SHL",
									"source": 31
								},
								{
									"begin": 994,
									"end": 995,
									"name": "PUSH",
									"source": 31,
									"value": "0"
								},
								{
									"begin": 987,
									"end": 1018,
									"name": "MSTORE",
									"source": 31
								},
								{
									"begin": 1041,
									"end": 1045,
									"name": "PUSH",
									"source": 31,
									"value": "41"
								},
								{
									"begin": 1038,
									"end": 1039,
									"name": "PUSH",
									"source": 31,
									"value": "4"
								},
								{
									"begin": 1031,
									"end": 1046,
									"name": "MSTORE",
									"source": 31
								},
								{
									"begin": 1069,
									"end": 1073,
									"name": "PUSH",
									"source": 31,
									"value": "24"
								},
								{
									"begin": 1066,
									"end": 1067,
									"name": "PUSH",
									"source": 31,
									"value": "0"
								},
								{
									"begin": 1059,
									"end": 1074,
									"name": "REVERT",
									"source": 31
								},
								{
									"begin": 899,
									"end": 1084,
									"name": "tag",
									"source": 31,
									"value": "45"
								},
								{
									"begin": 899,
									"end": 1084,
									"name": "JUMPDEST",
									"source": 31
								},
								{
									"begin": 1100,
									"end": 1102,
									"name": "PUSH",
									"source": 31,
									"value": "40"
								},
								{
									"begin": 1093,
									"end": 1115,
									"name": "MSTORE",
									"source": 31
								},
								{
									"begin": 1137,
									"end": 1153,
									"name": "DUP5",
									"source": 31
								},
								{
									"begin": 1137,
									"end": 1153,
									"name": "MLOAD",
									"source": 31
								},
								{
									"begin": 1162,
									"end": 1214,
									"name": "PUSH [tag]",
									"source": 31,
									"value": "46"
								},
								{
									"begin": 1137,
									"end": 1153,
									"name": "DUP2",
									"source": 31
								},
								{
									"begin": 1162,
									"end": 1214,
									"name": "PUSH [tag]",
									"source": 31,
									"value": "36"
								},
								{
									"begin": 1162,
									"end": 1214,
									"name": "JUMP",
									"source": 31,
									"value": "[in]"
								},
								{
									"begin": 1162,
									"end": 1214,
									"name": "tag",
									"source": 31,
									"value": "46"
								},
								{
									"begin": 1162,
									"end": 1214,
									"name": "JUMPDEST",
									"source": 31
								},
								{
									"begin": 1223,
									"end": 1244,
									"name": "DUP2",
									"source": 31
								},
								{
									"begin": 1223,
									"end": 1244,
									"name": "MSTORE",
									"source": 31
								},
								{
									"begin": 1289,
									"end": 1291,
									"name": "PUSH",
									"source": 31,
									"value": "20"
								},
								{
									"begin": 1274,
									"end": 1292,
									"name": "DUP6",
									"source": 31
								},
								{
									"begin": 1274,
									"end": 1292,
									"name": "ADD",
									"source": 31
								},
								{
									"begin": 1268,
									"end": 1293,
									"name": "MLOAD",
									"source": 31
								},
								{
									"begin": 1302,
									"end": 1356,
									"name": "PUSH [tag]",
									"source": 31,
									"value": "47"
								},
								{
									"begin": 1268,
									"end": 1293,
									"name": "DUP2",
									"source": 31
								},
								{
									"begin": 1302,
									"end": 1356,
									"name": "PUSH [tag]",
									"source": 31,
									"value": "36"
								},
								{
									"begin": 1302,
									"end": 1356,
									"name": "JUMP",
									"source": 31,
									"value": "[in]"
								},
								{
									"begin": 1302,
									"end": 1356,
									"name": "tag",
									"source": 31,
									"value": "47"
								},
								{
									"begin": 1302,
									"end": 1356,
									"name": "JUMPDEST",
									"source": 31
								},
								{
									"begin": 1384,
									"end": 1386,
									"name": "PUSH",
									"source": 31,
									"value": "20"
								},
								{
									"begin": 1372,
									"end": 1387,
									"name": "DUP3",
									"source": 31
								},
								{
									"begin": 1372,
									"end": 1387,
									"name": "ADD",
									"source": 31
								},
								{
									"begin": 1365,
									"end": 1397,
									"name": "MSTORE",
									"source": 31
								},
								{
									"begin": 1442,
									"end": 1444,
									"name": "PUSH",
									"source": 31,
									"value": "40"
								},
								{
									"begin": 1427,
									"end": 1445,
									"name": "DUP6",
									"source": 31
								},
								{
									"begin": 1427,
									"end": 1445,
									"name": "ADD",
									"source": 31
								},
								{
									"begin": 1421,
									"end": 1446,
									"name": "MLOAD",
									"source": 31
								},
								{
									"begin": 1455,
									"end": 1509,
									"name": "PUSH [tag]",
									"source": 31,
									"value": "48"
								},
								{
									"begin": 1421,
									"end": 1446,
									"name": "DUP2",
									"source": 31
								},
								{
									"begin": 1455,
									"end": 1509,
									"name": "PUSH [tag]",
									"source": 31,
									"value": "36"
								},
								{
									"begin": 1455,
									"end": 1509,
									"name": "JUMP",
									"source": 31,
									"value": "[in]"
								},
								{
									"begin": 1455,
									"end": 1509,
									"name": "tag",
									"source": 31,
									"value": "48"
								},
								{
									"begin": 1455,
									"end": 1509,
									"name": "JUMPDEST",
									"source": 31
								},
								{
									"begin": 1537,
									"end": 1539,
									"name": "PUSH",
									"source": 31,
									"value": "40"
								},
								{
									"begin": 1525,
									"end": 1540,
									"name": "DUP3",
									"source": 31
								},
								{
									"begin": 1525,
									"end": 1540,
									"name": "DUP2",
									"source": 31
								},
								{
									"begin": 1525,
									"end": 1540,
									"name": "ADD",
									"source": 31
								},
								{
									"begin": 1518,
									"end": 1550,
									"name": "SWAP2",
									"source": 31
								},
								{
									"begin": 1518,
									"end": 1550,
									"name": "SWAP1",
									"source": 31
								},
								{
									"begin": 1518,
									"end": 1550,
									"name": "SWAP2",
									"source": 31
								},
								{
									"begin": 1518,
									"end": 1550,
									"name": "MSTORE",
									"source": 31
								},
								{
									"begin": 1529,
									"end": 1535,
									"name": "SWAP1",
									"source": 31
								},
								{
									"begin": 1529,
									"end": 1535,
									"name": "SWAP4",
									"source": 31
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "5F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1591,
									"end": 1607,
									"name": "DUP3",
									"source": 31
								},
								{
									"begin": 1591,
									"end": 1607,
									"name": "ADD",
									"source": 31
								},
								{
									"begin": 1587,
									"end": 1612,
									"name": "SLT",
									"source": 31
								},
								{
									"begin": 1584,
									"end": 1629,
									"name": "ISZERO",
									"source": 31
								},
								{
									"begin": 1584,
									"end": 1629,
									"name": "PUSH [tag]",
									"source": 31,
									"value": "49"
								},
								{
									"begin": 1584,
									"end": 1629,
									"name": "JUMPI",
									"source": 31
								},
								{
									"begin": 1625,
									"end": 1626,
									"name": "PUSH",
									"source": 31,
									"value": "0"
								},
								{
									"begin": 1622,
									"end": 1623,
									"name": "DUP1",
									"source": 31
								},
								{
									"begin": 1615,
									"end": 1627,
									"name": "REVERT",
									"source": 31
								},
								{
									"begin": 1584,
									"end": 1629,
									"name": "tag",
									"source": 31,
									"value": "49"
								},
								{
									"begin": 1584,
									"end": 1629,
									"name": "JUMPDEST",
									"source": 31
								},
								{
									"begin": 1584,
									"end": 1629,
									"name": "POP",
									"source": 31
								},
								{
									"begin": 1653,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 31,
									"value": "50"
								},
								{
									"begin": 1653,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 31,
									"value": "35"
								},
								{
									"begin": 1653,
									"end": 1670,
									"name": "JUMP",
									"source": 31,
									"value": "[in]"
								},
								{
									"begin": 1653,
									"end": 1670,
									"name": "tag",
									"source": 31,
									"value": "50"
								},
								{
									"begin": 1653,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 31
								},
								{
									"begin": 1715,
									"end": 1719,
									"name": "PUSH",
									"source": 31,
									"value": "60"
								},
								{
									"begin": 1704,
									"end": 1713,
									"name": "DUP5",
									"source": 31
								},
								{
									"begin": 1700,
									"end": 1720,
									"name": "ADD",
									"source": 31
								},
								{
									"begin": 1694,
									"end": 1721,
									"name": "MLOAD",
									"source": 31
								},
								{
									"begin": 1730,
									"end": 1784,
									"name": "PUSH [tag]",
									"source": 31,
									"value": "51"
								},
								{
									"begin": 1776,
									"end": 1783,
									"name": "DUP2",
									"source": 31
								},
								{
									"begin": 1730,
									"end": 1784,
									"name": "PUSH [tag]",
									"source": 31,
									"value": "36"
								},
								{
									"begin": 1730,
									"end": 1784,
									"name": "JUMP",
									"source": 31,
									"value": "[in]"
								},
								{
									"begin": 1730,
									"end": 1784,
									"name": "tag",
									"source": 31,
									"value": "51"
								},
								{
									"begin": 1730,
									"end": 1784,
									"name": "JUMPDEST",
									"source": 31
								},
								{
									"begin": 1793,
									"end": 1817,
									"name": "DUP2",
									"source": 31
								},
								{
									"begin": 1793,
									"end": 1817,
									"name": "MSTORE",
									"source": 31
								},
								{
									"begin": 1862,
									"end": 1865,
									"name": "PUSH",
									"source": 31,
									"value": "80"
								},
								{
									"begin": 1847,
									"end": 1866,
									"name": "DUP5",
									"source": 31
								},
								{
									"begin": 1847,
									"end": 1866,
									"name": "ADD",
									"source": 31
								},
								{
									"begin": 1841,
									"end": 1867,
									"name": "MLOAD",
									"source": 31
								},
								{
									"begin": 1876,
									"end": 1930,
									"name": "PUSH [tag]",
									"source": 31,
									"value": "52"
								},
								{
									"begin": 1841,
									"end": 1867,
									"name": "DUP2",
									"source": 31
								},
								{
									"begin": 1876,
									"end": 1930,
									"name": "PUSH [tag]",
									"source": 31,
									"value": "36"
								},
								{
									"begin": 1876,
									"end": 1930,
									"name": "JUMP",
									"source": 31,
									"value": "[in]"
								},
								{
									"begin": 1876,
									"end": 1930,
									"name": "tag",
									"source": 31,
									"value": "52"
								},
								{
									"begin": 1876,
									"end": 1930,
									"name": "JUMPDEST",
									"source": 31
								},
								{
									"begin": 1959,
									"end": 1961,
									"name": "PUSH",
									"source": 31,
									"value": "20"
								},
								{
									"begin": 1946,
									"end": 1962,
									"name": "DUP3",
									"source": 31
								},
								{
									"begin": 1946,
									"end": 1962,
									"name": "ADD",
									"source": 31
								},
								{
									"begin": 1939,
									"end": 1972,
									"name": "MSTORE",
									"source": 31
								},
								{
									"begin": 519,
									"end": 2004,
									"name": "SWAP2",
									"source": 31
								},
								{
									"begin": 519,
									"end": 2004,
									"name": "SWAP5",
									"source": 31
								},
								{
									"begin": 1950,
									"end": 1957,
									"name": "SWAP2",
									"source": 31
								},
								{
									"begin": 1950,
									"end": 1957,
									"name": "SWAP4",
									"source": 31
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 519,
									"end": 2004,
									"name": "SWAP1",
									"source": 31
								},
								{
									"begin": 519,
									"end": 2004,
									"name": "SWAP2",
									"source": 31
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 519,
									"end": 2004,
									"name": "JUMP",
									"source": 31,
									"value": "[out]"
								},
								{
									"begin": 2009,
									"end": 2606,
									"name": "tag",
									"source": 31,
									"value": "9"
								},
								{
									"begin": 2009,
									"end": 2606,
									"name": "JUMPDEST",
									"source": 31
								},
								{
									"begin": 2121,
									"end": 2125,
									"name": "PUSH",
									"source": 31,
									"value": "0"
								},
								{
									"begin": 2150,
									"end": 2152,
									"name": "PUSH",
									"source": 31,
									"value": "20"
								},
								{
									"begin": 2179,
									"end": 2181,
									"name": "DUP1",
									"source": 31
								},
								{
									"begin": 2168,
									"end": 2177,
									"name": "DUP4",
									"source": 31
								},
								{
									"begin": 2161,
									"end": 2182,
									"name": "MSTORE",
									"source": 31
								},
								{
									"begin": 2211,
									"end": 2217,
									"name": "DUP4",
									"source": 31
								},
								{
									"begin": 2205,
									"end": 2218,
									"name": "MLOAD",
									"source": 31
								},
								{
									"begin": 2254,
									"end": 2260,
									"name": "DUP1",
									"source": 31
								},
								{
									"begin": 2249,
									"end": 2251,
									"name": "DUP3",
									"source": 31
								},
								{
									"begin": 2238,
									"end": 2247,
									"name": "DUP6",
									"source": 31
								},
								{
									"begin": 2234,
									"end": 2252,
									"name": "ADD",
									"source": 31
								},
								{
									"begin": 2227,
									"end": 2261,
									"name": "MSTORE",
									"source": 31
								},
								{
									"begin": 2279,
									"end": 2280,
									"name": "PUSH",
									"source": 31,
									"value": "0"
								},
								{
									"begin": 2289,
									"end": 2429,
									"name": "tag",
									"source": 31,
									"value": "54"
								},
								{
									"begin": 2289,
									"end": 2429,
									"name": "JUMPDEST",
									"source": 31
								},
								{
									"begin": 2303,
									"end": 2309,
									"name": "DUP2",
									"source": 31
								},
								{
									"begin": 2300,
									"end": 2301,
									"name": "DUP2",
									"source": 31
								},
								{
									"begin": 2297,
									"end": 2310,
									"name": "LT",
									"source": 31
								},
								{
									"begin": 2289,
									"end": 2429,
									"name": "ISZERO",
									"source": 31
								},
								{
									"begin": 2289,
									"end": 2429,
									"name": "PUSH [tag]",
									"source": 31,
									"value": "56"
								},
								{
									"begin": 2289,
									"end": 2429,
									"name": "JUMPI",
									"source": 31
								},
								{
									"begin": 2398,
									"end": 2412,
									"name": "DUP6",
									"source": 31
								},
								{
									"begin": 2398,
									"end": 2412,
									"name": "DUP2",
									"source": 31
								},
								{
									"begin": 2398,
									"end": 2412,
									"name": "ADD",
									"source": 31
								},
								{
									"begin": 2394,
									"end": 2417,
									"name": "DUP4",
									"source": 31
								},
								{
									"begin": 2394,
									"end": 2417,
									"name": "ADD",
									"source": 31
								},
								{
									"begin": 2388,
									"end": 2418,
									"name": "MLOAD",
									"source": 31
								},
								{
									"begin": 2364,
									"end": 2381,
									"name": "DUP6",
									"source": 31
								},
								{
									"begin": 2364,
									"end": 2381,
									"name": "DUP3",
									"source": 31
								},
								{
									"begin": 2364,
									"end": 2381,
									"name": "ADD",
									"source": 31
								},
								{
									"begin": 2383,
									"end": 2385,
									"name": "PUSH",
									"source": 31,
									"value": "40"
								},
								{
									"begin": 2360,
									"end": 2386,
									"name": "ADD",
									"source": 31
								},
								{
									"begin": 2353,
									"end": 2419,
									"name": "MSTORE",
									"source": 31
								},
								{
									"begin": 2318,
									"end": 2328,
									"name": "DUP3",
									"source": 31
								},
								{
									"begin": 2318,
									"end": 2328,
									"name": "ADD",
									"source": 31
								},
								{
									"begin": 2289,
									"end": 2429,
									"name": "PUSH [tag]",
									"source": 31,
									"value": "54"
								},
								{
									"begin": 2289,
									"end": 2429,
									"name": "JUMP",
									"source": 31
								},
								{
									"begin": 2289,
									"end": 2429,
									"name": "tag",
									"source": 31,
									"value": "56"
								},
								{
									"begin": 2289,
									"end": 2429,
									"name": "JUMPDEST",
									"source": 31
								},
								{
									"begin": 2447,
									"end": 2453,
									"name": "DUP2",
									"source": 31
								},
								{
									"begin": 2444,
									"end": 2445,
									"name": "DUP2",
									"source": 31
								},
								{
									"begin": 2441,
									"end": 2454,
									"name": "GT",
									"source": 31
								},
								{
									"begin": 2438,
									"end": 2529,
									"name": "ISZERO",
									"source": 31
								},
								{
									"begin": 2438,
									"end": 2529,
									"name": "PUSH [tag]",
									"source": 31,
									"value": "57"
								},
								{
									"begin": 2438,
									"end": 2529,
									"name": "JUMPI",
									"source": 31
								},
								{
									"begin": 2517,
									"end": 2518,
									"name": "PUSH",
									"source": 31,
									"value": "0"
								},
								{
									"begin": 2512,
									"end": 2514,
									"name": "PUSH",
									"source": 31,
									"value": "40"
								},
								{
									"begin": 2503,
									"end": 2509,
									"name": "DUP4",
									"source": 31
								},
								{
									"begin": 2492,
									"end": 2501,
									"name": "DUP8",
									"source": 31
								},
								{
									"begin": 2488,
									"end": 2510,
									"name": "ADD",
									"source": 31
								},
								{
									"begin": 2484,
									"end": 2515,
									"name": "ADD",
									"source": 31
								},
								{
									"begin": 2477,
									"end": 2519,
									"name": "MSTORE",
									"source": 31
								},
								{
									"begin": 2438,
									"end": 2529,
									"name": "tag",
									"source": 31,
									"value": "57"
								},
								{
									"begin": 2438,
									"end": 2529,
									"name": "JUMPDEST",
									"source": 31
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2590,
									"end": 2592,
									"name": "PUSH",
									"source": 31,
									"value": "1F"
								},
								{
									"begin": 2569,
									"end": 2584,
									"name": "ADD",
									"source": 31
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2565,
									"end": 2594,
									"name": "AND",
									"source": 31
								},
								{
									"begin": 2550,
									"end": 2595,
									"name": "SWAP3",
									"source": 31
								},
								{
									"begin": 2550,
									"end": 2595,
									"name": "SWAP1",
									"source": 31
								},
								{
									"begin": 2550,
									"end": 2595,
									"name": "SWAP3",
									"source": 31
								},
								{
									"begin": 2550,
									"end": 2595,
									"name": "ADD",
									"source": 31
								},
								{
									"begin": 2597,
									"end": 2599,
									"name": "PUSH",
									"source": 31,
									"value": "40"
								},
								{
									"begin": 2546,
									"end": 2600,
									"name": "ADD",
									"source": 31
								},
								{
									"begin": 2546,
									"end": 2600,
									"name": "SWAP4",
									"source": 31
								},
								{
									"begin": 2009,
									"end": 2606,
									"name": "SWAP3",
									"source": 31
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2009,
									"end": 2606,
									"name": "JUMP",
									"source": 31,
									"value": "[out]"
								},
								{
									"begin": 2997,
									"end": 3377,
									"name": "tag",
									"source": 31,
									"value": "25"
								},
								{
									"begin": 2997,
									"end": 3377,
									"name": "JUMPDEST",
									"source": 31
								},
								{
									"begin": 3076,
									"end": 3077,
									"name": "PUSH",
									"source": 31,
									"value": "1"
								},
								{
									"begin": 3072,
									"end": 3084,
									"name": "DUP2",
									"source": 31
								},
								{
									"begin": 3072,
									"end": 3084,
									"name": "DUP2",
									"source": 31
								},
								{
									"begin": 3072,
									"end": 3084,
									"name": "SHR",
									"source": 31
								},
								{
									"begin": 3072,
									"end": 3084,
									"name": "SWAP1",
									"source": 31
								},
								{
									"begin": 3119,
									"end": 3131,
									"name": "DUP3",
									"source": 31
								},
								{
									"begin": 3119,
									"end": 3131,
									"name": "AND",
									"source": 31
								},
								{
									"begin": 3119,
									"end": 3131,
									"name": "DUP1",
									"source": 31
								},
								{
									"begin": 3140,
									"end": 3201,
									"name": "PUSH [tag]",
									"source": 31,
									"value": "60"
								},
								{
									"begin": 3140,
									"end": 3201,
									"name": "JUMPI",
									"source": 31
								},
								{
									"begin": 3194,
									"end": 3198,
									"name": "PUSH",
									"source": 31,
									"value": "7F"
								},
								{
									"begin": 3186,
									"end": 3192,
									"name": "DUP3",
									"source": 31
								},
								{
									"begin": 3182,
									"end": 3199,
									"name": "AND",
									"source": 31
								},
								{
									"begin": 3172,
									"end": 3199,
									"name": "SWAP2",
									"source": 31
								},
								{
									"begin": 3172,
									"end": 3199,
									"name": "POP",
									"source": 31
								},
								{
									"begin": 3140,
									"end": 3201,
									"name": "tag",
									"source": 31,
									"value": "60"
								},
								{
									"begin": 3140,
									"end": 3201,
									"name": "JUMPDEST",
									"source": 31
								},
								{
									"begin": 3247,
									"end": 3249,
									"name": "PUSH",
									"source": 31,
									"value": "20"
								},
								{
									"begin": 3239,
									"end": 3245,
									"name": "DUP3",
									"source": 31
								},
								{
									"begin": 3236,
									"end": 3250,
									"name": "LT",
									"source": 31
								},
								{
									"begin": 3216,
									"end": 3234,
									"name": "DUP2",
									"source": 31
								},
								{
									"begin": 3213,
									"end": 3251,
									"name": "EQ",
									"source": 31
								},
								{
									"begin": 3210,
									"end": 3371,
									"name": "ISZERO",
									"source": 31
								},
								{
									"begin": 3210,
									"end": 3371,
									"name": "PUSH [tag]",
									"source": 31,
									"value": "61"
								},
								{
									"begin": 3210,
									"end": 3371,
									"name": "JUMPI",
									"source": 31
								},
								{
									"begin": 3293,
									"end": 3303,
									"name": "PUSH",
									"source": 31,
									"value": "4E487B71"
								},
								{
									"begin": 3288,
									"end": 3291,
									"name": "PUSH",
									"source": 31,
									"value": "E0"
								},
								{
									"begin": 3284,
									"end": 3304,
									"name": "SHL",
									"source": 31
								},
								{
									"begin": 3281,
									"end": 3282,
									"name": "PUSH",
									"source": 31,
									"value": "0"
								},
								{
									"begin": 3274,
									"end": 3305,
									"name": "MSTORE",
									"source": 31
								},
								{
									"begin": 3328,
									"end": 3332,
									"name": "PUSH",
									"source": 31,
									"value": "22"
								},
								{
									"begin": 3325,
									"end": 3326,
									"name": "PUSH",
									"source": 31,
									"value": "4"
								},
								{
									"begin": 3318,
									"end": 3333,
									"name": "MSTORE",
									"source": 31
								},
								{
									"begin": 3356,
									"end": 3360,
									"name": "PUSH",
									"source": 31,
									"value": "24"
								},
								{
									"begin": 3353,
									"end": 3354,
									"name": "PUSH",
									"source": 31,
									"value": "0"
								},
								{
									"begin": 3346,
									"end": 3361,
									"name": "REVERT",
									"source": 31
								},
								{
									"begin": 3210,
									"end": 3371,
									"name": "tag",
									"source": 31,
									"value": "61"
								},
								{
									"begin": 3210,
									"end": 3371,
									"name": "JUMPDEST",
									"source": 31
								},
								{
									"begin": 3210,
									"end": 3371,
									"name": "POP",
									"source": 31
								},
								{
									"begin": 2997,
									"end": 3377,
									"name": "SWAP2",
									"source": 31
								},
								{
									"begin": 2997,
									"end": 3377,
									"name": "SWAP1",
									"source": 31
								},
								{
									"begin": 2997,
									"end": 3377,
									"name": "POP",
									"source": 31
								},
								{
									"begin": 2997,
									"end": 3377,
									"name": "JUMP",
									"source": 31,
									"value": "[out]"
								},
								{
									"begin": 2997,
									"end": 3377,
									"name": "tag",
									"source": 31,
									"value": "37"
								},
								{
									"begin": 2997,
									"end": 3377,
									"name": "JUMPDEST",
									"source": 31
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "PUSH #[$]",
									"source": 29,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "DUP1",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "PUSH [$]",
									"source": 29,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "PUSH",
									"source": 29,
									"value": "0"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "CODECOPY",
									"source": 29
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "PUSH",
									"source": 29,
									"value": "0"
								},
								{
									"begin": 391,
									"end": 7446,
									"name": "RETURN",
									"source": 29
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c401cdfdb6c7319ff085bf05c218c39e58637c949e8770dc1a817d7c936d100b64736f6c63430008090033",
									".code": [
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH",
											"source": 29,
											"value": "80"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "CALLVALUE",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "ISZERO",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "1"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "REVERT",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "tag",
											"source": 29,
											"value": "1"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH",
											"source": 29,
											"value": "4"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "CALLDATASIZE",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "LT",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "2"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "CALLDATALOAD",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH",
											"source": 29,
											"value": "E0"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "SHR",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH",
											"source": 29,
											"value": "75D0C0DC"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "GT",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "25"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH",
											"source": 29,
											"value": "A0A8E460"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "GT",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "26"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH",
											"source": 29,
											"value": "A0A8E460"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "EQ",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "19"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH",
											"source": 29,
											"value": "B2FE31AD"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "EQ",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH",
											"source": 29,
											"value": "C2CBDC67"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "EQ",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "21"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH",
											"source": 29,
											"value": "D34CC380"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "EQ",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "22"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH",
											"source": 29,
											"value": "D4A07D34"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "EQ",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "23"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH",
											"source": 29,
											"value": "E4AF6E79"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "EQ",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "24"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "REVERT",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "tag",
											"source": 29,
											"value": "26"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH",
											"source": 29,
											"value": "75D0C0DC"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "EQ",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "14"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH",
											"source": 29,
											"value": "7AC46FBB"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "EQ",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "15"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH",
											"source": 29,
											"value": "86C6BE3E"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "EQ",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "16"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH",
											"source": 29,
											"value": "8860D248"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "EQ",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "17"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH",
											"source": 29,
											"value": "98347A5D"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "EQ",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "18"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "REVERT",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "tag",
											"source": 29,
											"value": "25"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH",
											"source": 29,
											"value": "1C7F4C73"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "GT",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "27"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH",
											"source": 29,
											"value": "1C7F4C73"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "EQ",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "8"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH",
											"source": 29,
											"value": "25281714"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "EQ",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "9"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH",
											"source": 29,
											"value": "511CE798"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "EQ",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "10"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH",
											"source": 29,
											"value": "59F3DAE7"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "EQ",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "11"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH",
											"source": 29,
											"value": "66C153E9"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "EQ",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "12"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH",
											"source": 29,
											"value": "6707ACEE"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "EQ",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "13"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "REVERT",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "tag",
											"source": 29,
											"value": "27"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH",
											"source": 29,
											"value": "1FFC9A7"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "EQ",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "3"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH",
											"source": 29,
											"value": "6A46239"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "EQ",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "4"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH",
											"source": 29,
											"value": "9946538"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "EQ",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "5"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH",
											"source": 29,
											"value": "BDEDD56"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "EQ",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "6"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH",
											"source": 29,
											"value": "E3E80AC"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "EQ",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "7"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "tag",
											"source": 29,
											"value": "2"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 391,
											"end": 7446,
											"name": "REVERT",
											"source": 29
										},
										{
											"begin": 2755,
											"end": 2966,
											"name": "tag",
											"source": 29,
											"value": "3"
										},
										{
											"begin": 2755,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 2755,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "28"
										},
										{
											"begin": 2755,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "29"
										},
										{
											"begin": 2755,
											"end": 2966,
											"name": "CALLDATASIZE",
											"source": 29
										},
										{
											"begin": 2755,
											"end": 2966,
											"name": "PUSH",
											"source": 29,
											"value": "4"
										},
										{
											"begin": 2755,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "30"
										},
										{
											"begin": 2755,
											"end": 2966,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 2755,
											"end": 2966,
											"name": "tag",
											"source": 29,
											"value": "29"
										},
										{
											"begin": 2755,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 2755,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "31"
										},
										{
											"begin": 2755,
											"end": 2966,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 2755,
											"end": 2966,
											"name": "tag",
											"source": 29,
											"value": "28"
										},
										{
											"begin": 2755,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 2755,
											"end": 2966,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 2755,
											"end": 2966,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 31
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 31
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 2755,
											"end": 2966,
											"name": "tag",
											"source": 29,
											"value": "32"
										},
										{
											"begin": 2755,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 2755,
											"end": 2966,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 2755,
											"end": 2966,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": 2755,
											"end": 2966,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 2755,
											"end": 2966,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 2755,
											"end": 2966,
											"name": "SUB",
											"source": 29
										},
										{
											"begin": 2755,
											"end": 2966,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 2755,
											"end": 2966,
											"name": "RETURN",
											"source": 29
										},
										{
											"begin": 611,
											"end": 719,
											"name": "tag",
											"source": 28,
											"value": "4"
										},
										{
											"begin": 611,
											"end": 719,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "312E312E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 611,
											"end": 719,
											"name": "tag",
											"source": 28,
											"value": "34"
										},
										{
											"begin": 611,
											"end": 719,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": 611,
											"end": 719,
											"name": "PUSH",
											"source": 28,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 719,
											"name": "MLOAD",
											"source": 28
										},
										{
											"begin": 643,
											"end": 668,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 643,
											"end": 668,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 643,
											"end": 668,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 616,
											"end": 634,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 611,
											"end": 719,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "32"
										},
										{
											"begin": 497,
											"end": 674,
											"name": "JUMP",
											"source": 31
										},
										{
											"begin": 3610,
											"end": 4261,
											"name": "tag",
											"source": 30,
											"value": "5"
										},
										{
											"begin": 3610,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 3610,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "38"
										},
										{
											"begin": 3610,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "39"
										},
										{
											"begin": 3610,
											"end": 4261,
											"name": "CALLDATASIZE",
											"source": 30
										},
										{
											"begin": 3610,
											"end": 4261,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 4261,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 3610,
											"end": 4261,
											"name": "tag",
											"source": 30,
											"value": "39"
										},
										{
											"begin": 3610,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 3610,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "41"
										},
										{
											"begin": 3610,
											"end": 4261,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 3610,
											"end": 4261,
											"name": "tag",
											"source": 30,
											"value": "38"
										},
										{
											"begin": 3610,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 3610,
											"end": 4261,
											"name": "STOP",
											"source": 30
										},
										{
											"begin": 4322,
											"end": 4633,
											"name": "tag",
											"source": 29,
											"value": "6"
										},
										{
											"begin": 4322,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 4322,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "38"
										},
										{
											"begin": 4322,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "43"
										},
										{
											"begin": 4322,
											"end": 4633,
											"name": "CALLDATASIZE",
											"source": 29
										},
										{
											"begin": 4322,
											"end": 4633,
											"name": "PUSH",
											"source": 29,
											"value": "4"
										},
										{
											"begin": 4322,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "44"
										},
										{
											"begin": 4322,
											"end": 4633,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 4322,
											"end": 4633,
											"name": "tag",
											"source": 29,
											"value": "43"
										},
										{
											"begin": 4322,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 4322,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "45"
										},
										{
											"begin": 4322,
											"end": 4633,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 366,
											"end": 468,
											"name": "tag",
											"source": 28,
											"value": "7"
										},
										{
											"begin": 366,
											"end": 468,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "556E6956335661756C74476F7665726E616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 366,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "34"
										},
										{
											"begin": 611,
											"end": 719,
											"name": "JUMP",
											"source": 28
										},
										{
											"begin": 2824,
											"end": 2941,
											"name": "tag",
											"source": 30,
											"value": "8"
										},
										{
											"begin": 2824,
											"end": 2941,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH",
											"source": 30,
											"value": "6"
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 2824,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "34"
										},
										{
											"begin": 2824,
											"end": 2941,
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 3905,
											"end": 4271,
											"name": "tag",
											"source": 29,
											"value": "9"
										},
										{
											"begin": 3905,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 3905,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "38"
										},
										{
											"begin": 3905,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "54"
										},
										{
											"begin": 3905,
											"end": 4271,
											"name": "CALLDATASIZE",
											"source": 29
										},
										{
											"begin": 3905,
											"end": 4271,
											"name": "PUSH",
											"source": 29,
											"value": "4"
										},
										{
											"begin": 3905,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "55"
										},
										{
											"begin": 3905,
											"end": 4271,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 3905,
											"end": 4271,
											"name": "tag",
											"source": 29,
											"value": "54"
										},
										{
											"begin": 3905,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 3905,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "56"
										},
										{
											"begin": 3905,
											"end": 4271,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 2438,
											"end": 2601,
											"name": "tag",
											"source": 30,
											"value": "10"
										},
										{
											"begin": 2438,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 2438,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "34"
										},
										{
											"begin": 2438,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "58"
										},
										{
											"begin": 2438,
											"end": 2601,
											"name": "CALLDATASIZE",
											"source": 30
										},
										{
											"begin": 2438,
											"end": 2601,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 2438,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "44"
										},
										{
											"begin": 2438,
											"end": 2601,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 2438,
											"end": 2601,
											"name": "tag",
											"source": 30,
											"value": "58"
										},
										{
											"begin": 2438,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 2522,
											"end": 2529,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 2549,
											"end": 2593,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 2549,
											"end": 2593,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 2549,
											"end": 2593,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 2549,
											"end": 2588,
											"name": "PUSH",
											"source": 30,
											"value": "C"
										},
										{
											"begin": 2549,
											"end": 2593,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 2549,
											"end": 2593,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 2549,
											"end": 2593,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 2549,
											"end": 2593,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 2549,
											"end": 2593,
											"name": "KECCAK256",
											"source": 30
										},
										{
											"begin": 2549,
											"end": 2593,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 2549,
											"end": 2593,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 2438,
											"end": 2601,
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 2006,
											"end": 2344,
											"name": "tag",
											"source": 29,
											"value": "11"
										},
										{
											"begin": 2006,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 2006,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "61"
										},
										{
											"begin": 2006,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "62"
										},
										{
											"begin": 2006,
											"end": 2344,
											"name": "CALLDATASIZE",
											"source": 29
										},
										{
											"begin": 2006,
											"end": 2344,
											"name": "PUSH",
											"source": 29,
											"value": "4"
										},
										{
											"begin": 2006,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "44"
										},
										{
											"begin": 2006,
											"end": 2344,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 2006,
											"end": 2344,
											"name": "tag",
											"source": 29,
											"value": "62"
										},
										{
											"begin": 2006,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 2006,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "63"
										},
										{
											"begin": 2006,
											"end": 2344,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 2006,
											"end": 2344,
											"name": "tag",
											"source": 29,
											"value": "61"
										},
										{
											"begin": 2006,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 2006,
											"end": 2344,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2344,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": 3074,
											"end": 3087,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 3074,
											"end": 3087,
											"name": "MLOAD",
											"source": 31
										},
										{
											"begin": 3089,
											"end": 3099,
											"name": "PUSH",
											"source": 31,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3070,
											"end": 3100,
											"name": "AND",
											"source": 31
										},
										{
											"begin": 3052,
											"end": 3101,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 3052,
											"end": 3101,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 3040,
											"end": 3042,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 3025,
											"end": 3043,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 2006,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "32"
										},
										{
											"begin": 2828,
											"end": 3107,
											"name": "JUMP",
											"source": 31
										},
										{
											"begin": 4684,
											"end": 5165,
											"name": "tag",
											"source": 29,
											"value": "12"
										},
										{
											"begin": 4684,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 4684,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "66"
										},
										{
											"begin": 4684,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "67"
										},
										{
											"begin": 4684,
											"end": 5165,
											"name": "CALLDATASIZE",
											"source": 29
										},
										{
											"begin": 4684,
											"end": 5165,
											"name": "PUSH",
											"source": 29,
											"value": "4"
										},
										{
											"begin": 4684,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "68"
										},
										{
											"begin": 4684,
											"end": 5165,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 4684,
											"end": 5165,
											"name": "tag",
											"source": 29,
											"value": "67"
										},
										{
											"begin": 4684,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 4684,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "69"
										},
										{
											"begin": 4684,
											"end": 5165,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 4684,
											"end": 5165,
											"name": "tag",
											"source": 29,
											"value": "66"
										},
										{
											"begin": 4684,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 4684,
											"end": 5165,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 4684,
											"end": 5165,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 4684,
											"end": 5165,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4920,
											"end": 4952,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 4920,
											"end": 4952,
											"name": "SWAP4",
											"source": 31
										},
										{
											"begin": 4920,
											"end": 4952,
											"name": "AND",
											"source": 31
										},
										{
											"begin": 4902,
											"end": 4953,
											"name": "DUP4",
											"source": 31
										},
										{
											"begin": 4902,
											"end": 4953,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 4984,
											"end": 4986,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 4969,
											"end": 4987,
											"name": "DUP4",
											"source": 31
										},
										{
											"begin": 4969,
											"end": 4987,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 4962,
											"end": 4996,
											"name": "SWAP2",
											"source": 31
										},
										{
											"begin": 4962,
											"end": 4996,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 4962,
											"end": 4996,
											"name": "SWAP2",
											"source": 31
										},
										{
											"begin": 4962,
											"end": 4996,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 4875,
											"end": 4893,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 4684,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "32"
										},
										{
											"begin": 4708,
											"end": 5002,
											"name": "JUMP",
											"source": 31
										},
										{
											"begin": 2245,
											"end": 2392,
											"name": "tag",
											"source": 30,
											"value": "13"
										},
										{
											"begin": 2245,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 2245,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "34"
										},
										{
											"begin": 2245,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "73"
										},
										{
											"begin": 2245,
											"end": 2392,
											"name": "CALLDATASIZE",
											"source": 30
										},
										{
											"begin": 2245,
											"end": 2392,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 2245,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "44"
										},
										{
											"begin": 2245,
											"end": 2392,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 2245,
											"end": 2392,
											"name": "tag",
											"source": 30,
											"value": "73"
										},
										{
											"begin": 2245,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 2321,
											"end": 2328,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2384,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 2348,
											"end": 2384,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 2348,
											"end": 2384,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 2348,
											"end": 2379,
											"name": "PUSH",
											"source": 30,
											"value": "9"
										},
										{
											"begin": 2348,
											"end": 2384,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2384,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 2348,
											"end": 2384,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2384,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 2348,
											"end": 2384,
											"name": "KECCAK256",
											"source": 30
										},
										{
											"begin": 2348,
											"end": 2384,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 2348,
											"end": 2384,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 2245,
											"end": 2392,
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 237,
											"end": 358,
											"name": "tag",
											"source": 28,
											"value": "14"
										},
										{
											"begin": 237,
											"end": 358,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": 237,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "76"
										},
										{
											"begin": 237,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "77"
										},
										{
											"begin": 237,
											"end": 358,
											"name": "JUMP",
											"source": 28,
											"value": "[in]"
										},
										{
											"begin": 237,
											"end": 358,
											"name": "tag",
											"source": 28,
											"value": "76"
										},
										{
											"begin": 237,
											"end": 358,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": 237,
											"end": 358,
											"name": "PUSH",
											"source": 28,
											"value": "40"
										},
										{
											"begin": 237,
											"end": 358,
											"name": "MLOAD",
											"source": 28
										},
										{
											"begin": 237,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "32"
										},
										{
											"begin": 237,
											"end": 358,
											"name": "SWAP2",
											"source": 28
										},
										{
											"begin": 237,
											"end": 358,
											"name": "SWAP1",
											"source": 28
										},
										{
											"begin": 237,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "79"
										},
										{
											"begin": 237,
											"end": 358,
											"name": "JUMP",
											"source": 28,
											"value": "[in]"
										},
										{
											"begin": 2987,
											"end": 3100,
											"name": "tag",
											"source": 30,
											"value": "15"
										},
										{
											"begin": 2987,
											"end": 3100,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 2987,
											"end": 3100,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3070,
											"end": 3092,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 3070,
											"end": 3092,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 3070,
											"end": 3092,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 3070,
											"end": 3092,
											"name": "PUSH",
											"source": 30,
											"value": "60"
										},
										{
											"begin": 3070,
											"end": 3092,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3070,
											"end": 3092,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 3070,
											"end": 3092,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 3070,
											"end": 3092,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 3077,
											"end": 3092,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 3070,
											"end": 3092,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3070,
											"end": 3092,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 3070,
											"end": 3092,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3070,
											"end": 3092,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 3070,
											"end": 3092,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 3070,
											"end": 3092,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 3070,
											"end": 3092,
											"name": "PUSH",
											"source": 30,
											"value": "1"
										},
										{
											"begin": 3070,
											"end": 3092,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 3070,
											"end": 3092,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3070,
											"end": 3092,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 3070,
											"end": 3092,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 3070,
											"end": 3092,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 3070,
											"end": 3092,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 3070,
											"end": 3092,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 3070,
											"end": 3092,
											"name": "PUSH",
											"source": 30,
											"value": "2"
										},
										{
											"begin": 3070,
											"end": 3092,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 3070,
											"end": 3092,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 3070,
											"end": 3092,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 3070,
											"end": 3092,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3070,
											"end": 3092,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 3070,
											"end": 3092,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 3070,
											"end": 3092,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 3070,
											"end": 3092,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 3070,
											"end": 3092,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 3070,
											"end": 3092,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 2987,
											"end": 3100,
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 2987,
											"end": 3100,
											"name": "tag",
											"source": 30,
											"value": "80"
										},
										{
											"begin": 2987,
											"end": 3100,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 2987,
											"end": 3100,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 2987,
											"end": 3100,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 2987,
											"end": 3100,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "32"
										},
										{
											"begin": 2987,
											"end": 3100,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 2987,
											"end": 3100,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 2987,
											"end": 3100,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "83"
										},
										{
											"begin": 2987,
											"end": 3100,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 3146,
											"end": 3271,
											"name": "tag",
											"source": 30,
											"value": "16"
										},
										{
											"begin": 3146,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 3146,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3235,
											"end": 3263,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3263,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 3235,
											"end": 3263,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 3235,
											"end": 3263,
											"name": "PUSH",
											"source": 30,
											"value": "60"
										},
										{
											"begin": 3235,
											"end": 3263,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3235,
											"end": 3263,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 3235,
											"end": 3263,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 3235,
											"end": 3263,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 3242,
											"end": 3263,
											"name": "PUSH",
											"source": 30,
											"value": "3"
										},
										{
											"begin": 3235,
											"end": 3263,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3235,
											"end": 3263,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 3235,
											"end": 3263,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3235,
											"end": 3263,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 3235,
											"end": 3263,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 3235,
											"end": 3263,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 3235,
											"end": 3263,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 3235,
											"end": 3263,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 3235,
											"end": 3263,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3235,
											"end": 3263,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 3235,
											"end": 3263,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3263,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 3235,
											"end": 3263,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 3235,
											"end": 3263,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 3235,
											"end": 3263,
											"name": "PUSH",
											"source": 30,
											"value": "5"
										},
										{
											"begin": 3235,
											"end": 3263,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 3235,
											"end": 3263,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 3235,
											"end": 3263,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 3235,
											"end": 3263,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3235,
											"end": 3263,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 3235,
											"end": 3263,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 3235,
											"end": 3263,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 3235,
											"end": 3263,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 3235,
											"end": 3263,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 3235,
											"end": 3263,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 3146,
											"end": 3271,
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 2395,
											"end": 2718,
											"name": "tag",
											"source": 29,
											"value": "17"
										},
										{
											"begin": 2395,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 2395,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "61"
										},
										{
											"begin": 2395,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "88"
										},
										{
											"begin": 2395,
											"end": 2718,
											"name": "CALLDATASIZE",
											"source": 29
										},
										{
											"begin": 2395,
											"end": 2718,
											"name": "PUSH",
											"source": 29,
											"value": "4"
										},
										{
											"begin": 2395,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "44"
										},
										{
											"begin": 2395,
											"end": 2718,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 2395,
											"end": 2718,
											"name": "tag",
											"source": 29,
											"value": "88"
										},
										{
											"begin": 2395,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 2395,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "89"
										},
										{
											"begin": 2395,
											"end": 2718,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 3580,
											"end": 3854,
											"name": "tag",
											"source": 29,
											"value": "18"
										},
										{
											"begin": 3580,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 3580,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "38"
										},
										{
											"begin": 3580,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "92"
										},
										{
											"begin": 3580,
											"end": 3854,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 476,
											"end": 603,
											"name": "tag",
											"source": 28,
											"value": "19"
										},
										{
											"begin": 476,
											"end": 603,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": 476,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "76"
										},
										{
											"begin": 476,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "94"
										},
										{
											"begin": 476,
											"end": 603,
											"name": "JUMP",
											"source": 28,
											"value": "[in]"
										},
										{
											"begin": 3088,
											"end": 3529,
											"name": "tag",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 3088,
											"end": 3529,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 3088,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "38"
										},
										{
											"begin": 3088,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "97"
										},
										{
											"begin": 3088,
											"end": 3529,
											"name": "CALLDATASIZE",
											"source": 29
										},
										{
											"begin": 3088,
											"end": 3529,
											"name": "PUSH",
											"source": 29,
											"value": "4"
										},
										{
											"begin": 3088,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "98"
										},
										{
											"begin": 3088,
											"end": 3529,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 3088,
											"end": 3529,
											"name": "tag",
											"source": 29,
											"value": "97"
										},
										{
											"begin": 3088,
											"end": 3529,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 3088,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "99"
										},
										{
											"begin": 3088,
											"end": 3529,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 1494,
											"end": 1955,
											"name": "tag",
											"source": 29,
											"value": "21"
										},
										{
											"begin": 1494,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 1494,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "100"
										},
										{
											"begin": 1494,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "101"
										},
										{
											"begin": 1494,
											"end": 1955,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 1494,
											"end": 1955,
											"name": "tag",
											"source": 29,
											"value": "100"
										},
										{
											"begin": 1494,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 1494,
											"end": 1955,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 1494,
											"end": 1955,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 1494,
											"end": 1955,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": 6758,
											"end": 6771,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 6758,
											"end": 6771,
											"name": "MLOAD",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6754,
											"end": 6776,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 6754,
											"end": 6776,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 6754,
											"end": 6776,
											"name": "AND",
											"source": 31
										},
										{
											"begin": 6736,
											"end": 6777,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 6736,
											"end": 6777,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 6837,
											"end": 6841,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 6825,
											"end": 6842,
											"name": "SWAP4",
											"source": 31
										},
										{
											"begin": 6825,
											"end": 6842,
											"name": "DUP5",
											"source": 31
										},
										{
											"begin": 6825,
											"end": 6842,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 6819,
											"end": 6843,
											"name": "MLOAD",
											"source": 31
										},
										{
											"begin": 6815,
											"end": 6848,
											"name": "AND",
											"source": 31
										},
										{
											"begin": 6793,
											"end": 6813,
											"name": "SWAP3",
											"source": 31
										},
										{
											"begin": 6793,
											"end": 6813,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 6793,
											"end": 6813,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 6786,
											"end": 6849,
											"name": "SWAP3",
											"source": 31
										},
										{
											"begin": 6786,
											"end": 6849,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 6786,
											"end": 6849,
											"name": "SWAP3",
											"source": 31
										},
										{
											"begin": 6786,
											"end": 6849,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 1494,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "32"
										},
										{
											"begin": 6474,
											"end": 6855,
											"name": "JUMP",
											"source": 31
										},
										{
											"begin": 1208,
											"end": 1443,
											"name": "tag",
											"source": 29,
											"value": "22"
										},
										{
											"begin": 1208,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 1208,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "100"
										},
										{
											"begin": 1208,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "105"
										},
										{
											"begin": 1208,
											"end": 1443,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 4307,
											"end": 4764,
											"name": "tag",
											"source": 30,
											"value": "23"
										},
										{
											"begin": 4307,
											"end": 4764,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4307,
											"end": 4764,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "38"
										},
										{
											"begin": 4307,
											"end": 4764,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "108"
										},
										{
											"begin": 4307,
											"end": 4764,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 2647,
											"end": 2778,
											"name": "tag",
											"source": 30,
											"value": "24"
										},
										{
											"begin": 2647,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 2739,
											"end": 2770,
											"name": "PUSH",
											"source": 30,
											"value": "F"
										},
										{
											"begin": 2739,
											"end": 2770,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 2647,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "34"
										},
										{
											"begin": 2647,
											"end": 2778,
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 2755,
											"end": 2966,
											"name": "tag",
											"source": 29,
											"value": "31"
										},
										{
											"begin": 2755,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 2840,
											"end": 2844,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 2864,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "113"
										},
										{
											"begin": 2888,
											"end": 2899,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 2864,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "114"
										},
										{
											"begin": 2864,
											"end": 2900,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 2864,
											"end": 2900,
											"name": "tag",
											"source": 29,
											"value": "113"
										},
										{
											"begin": 2864,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 2864,
											"end": 2958,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 2864,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "115"
										},
										{
											"begin": 2864,
											"end": 2958,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A2E9C513"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2904,
											"end": 2958,
											"name": "DUP4",
											"source": 29
										},
										{
											"begin": 2904,
											"end": 2958,
											"name": "AND",
											"source": 29
										},
										{
											"begin": 2904,
											"end": 2958,
											"name": "EQ",
											"source": 29
										},
										{
											"begin": 2864,
											"end": 2958,
											"name": "tag",
											"source": 29,
											"value": "115"
										},
										{
											"begin": 2864,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 2857,
											"end": 2958,
											"name": "SWAP3",
											"source": 29
										},
										{
											"begin": 2755,
											"end": 2966,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2755,
											"end": 2966,
											"name": "JUMP",
											"source": 29,
											"value": "[out]"
										},
										{
											"begin": 693,
											"end": 711,
											"name": "tag",
											"source": 28,
											"value": "117"
										},
										{
											"begin": 693,
											"end": 711,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": 686,
											"end": 711,
											"name": "SWAP1",
											"source": 28
										},
										{
											"begin": 686,
											"end": 711,
											"name": "POP",
											"source": 28
										},
										{
											"begin": 611,
											"end": 719,
											"name": "SWAP1",
											"source": 28
										},
										{
											"begin": 611,
											"end": 719,
											"name": "JUMP",
											"source": 28,
											"value": "[out]"
										},
										{
											"begin": 3610,
											"end": 4261,
											"name": "tag",
											"source": 30,
											"value": "41"
										},
										{
											"begin": 3610,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 3692,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "120"
										},
										{
											"begin": 3692,
											"end": 3713,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "121"
										},
										{
											"begin": 3692,
											"end": 3715,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 3692,
											"end": 3715,
											"name": "tag",
											"source": 30,
											"value": "120"
										},
										{
											"begin": 3692,
											"end": 3715,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 3742,
											"end": 3770,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 3742,
											"end": 3770,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 3787,
											"end": 3817,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 3787,
											"end": 3817,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 3787,
											"end": 3817,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 3787,
											"end": 3817,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 3787,
											"end": 3817,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 3787,
											"end": 3817,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 3787,
											"end": 3817,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 3787,
											"end": 3817,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 3787,
											"end": 3817,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 3787,
											"end": 3817,
											"name": "PUSH",
											"source": 30,
											"value": "2"
										},
										{
											"begin": 3787,
											"end": 3817,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3787,
											"end": 3817,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20AD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3787,
											"end": 3817,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 3787,
											"end": 3817,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 3787,
											"end": 3817,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 3787,
											"end": 3817,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 3787,
											"end": 3817,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3734,
											"end": 3785,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 3726,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "122"
										},
										{
											"begin": 3726,
											"end": 3818,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 3726,
											"end": 3818,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 3726,
											"end": 3818,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3726,
											"end": 3818,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3726,
											"end": 3818,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 3726,
											"end": 3818,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 3726,
											"end": 3818,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 3726,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "123"
										},
										{
											"begin": 3726,
											"end": 3818,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 3726,
											"end": 3818,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 3726,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "79"
										},
										{
											"begin": 3726,
											"end": 3818,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 3726,
											"end": 3818,
											"name": "tag",
											"source": 30,
											"value": "123"
										},
										{
											"begin": 3726,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 3726,
											"end": 3818,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 3726,
											"end": 3818,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 3726,
											"end": 3818,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 3726,
											"end": 3818,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 3726,
											"end": 3818,
											"name": "SUB",
											"source": 30
										},
										{
											"begin": 3726,
											"end": 3818,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 3726,
											"end": 3818,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 3726,
											"end": 3818,
											"name": "tag",
											"source": 30,
											"value": "122"
										},
										{
											"begin": 3726,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 3726,
											"end": 3818,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 3876,
											"end": 3877,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3837,
											"end": 3878,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 3845,
											"end": 3854,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3837,
											"end": 3878,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 3837,
											"end": 3878,
											"name": "EQ",
											"source": 30
										},
										{
											"begin": 3837,
											"end": 3878,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 3880,
											"end": 3910,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 3880,
											"end": 3910,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 3880,
											"end": 3910,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 3880,
											"end": 3910,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 3880,
											"end": 3910,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 3880,
											"end": 3910,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 3880,
											"end": 3910,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 3880,
											"end": 3910,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 3880,
											"end": 3910,
											"name": "PUSH",
											"source": 30,
											"value": "2"
										},
										{
											"begin": 3880,
											"end": 3910,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3880,
											"end": 3910,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 3880,
											"end": 3910,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 3880,
											"end": 3910,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20AD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3880,
											"end": 3910,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3880,
											"end": 3910,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 3880,
											"end": 3910,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 3829,
											"end": 3911,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 3829,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "124"
										},
										{
											"begin": 3829,
											"end": 3911,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 3829,
											"end": 3911,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 3829,
											"end": 3911,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3829,
											"end": 3911,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3829,
											"end": 3911,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 3829,
											"end": 3911,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 3829,
											"end": 3911,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 3829,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "123"
										},
										{
											"begin": 3829,
											"end": 3911,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 3829,
											"end": 3911,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 3829,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "79"
										},
										{
											"begin": 3829,
											"end": 3911,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 3829,
											"end": 3911,
											"name": "tag",
											"source": 30,
											"value": "124"
										},
										{
											"begin": 3829,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3938,
											"end": 3957,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 3938,
											"end": 3957,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 3938,
											"end": 3957,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 3938,
											"end": 3957,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 3938,
											"end": 3957,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 3974,
											"end": 4004,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3974,
											"end": 4004,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 3974,
											"end": 4004,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 3974,
											"end": 4004,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 3974,
											"end": 4004,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 3974,
											"end": 4004,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 3974,
											"end": 4004,
											"name": "SWAP3",
											"source": 30
										},
										{
											"begin": 3974,
											"end": 4004,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 3974,
											"end": 4004,
											"name": "PUSH",
											"source": 30,
											"value": "2"
										},
										{
											"begin": 3974,
											"end": 4004,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 3974,
											"end": 4004,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20AD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3974,
											"end": 4004,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 3974,
											"end": 4004,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 3974,
											"end": 4004,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 3974,
											"end": 4004,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3930,
											"end": 3972,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 3922,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "126"
										},
										{
											"begin": 3922,
											"end": 4005,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 3922,
											"end": 4005,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 3922,
											"end": 4005,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3922,
											"end": 4005,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3922,
											"end": 4005,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 3922,
											"end": 4005,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 3922,
											"end": 4005,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 3922,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "123"
										},
										{
											"begin": 3922,
											"end": 4005,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 3922,
											"end": 4005,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 3922,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "79"
										},
										{
											"begin": 3922,
											"end": 4005,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 3922,
											"end": 4005,
											"name": "tag",
											"source": 30,
											"value": "126"
										},
										{
											"begin": 3922,
											"end": 4005,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4037,
											"name": "PUSH",
											"source": 30,
											"value": "3"
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "AND",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "SWAP4",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "DUP5",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "OR",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "SSTORE",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "DUP5",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "DUP5",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "DUP6",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "OR",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "SSTORE",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "DUP7",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "PUSH",
											"source": 30,
											"value": "5"
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "SWAP6",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "DUP7",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "OR",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "SWAP4",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "SSTORE",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4105,
											"end": 4139,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BBA32939"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "SWAP4",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4139,
											"name": "SWAP5",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4139,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4139,
											"name": "SWAP4",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4155,
											"name": "PUSH",
											"source": 30,
											"value": "BBA32939"
										},
										{
											"begin": 4105,
											"end": 4155,
											"name": "SWAP4",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "SWAP4",
											"source": 30
										},
										{
											"begin": 4016,
											"end": 4049,
											"name": "SWAP3",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "SUB",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4139,
											"name": "DUP7",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "EXTCODESIZE",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "128"
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "tag",
											"source": 30,
											"value": "128"
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "GAS",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "STATICCALL",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "130"
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "RETURNDATACOPY",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "tag",
											"source": 30,
											"value": "130"
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "PUSH",
											"source": 30,
											"value": "1F"
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "NOT",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "PUSH",
											"source": 30,
											"value": "1F"
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "131"
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "132"
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "tag",
											"source": 30,
											"value": "131"
										},
										{
											"begin": 4105,
											"end": 4157,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4087,
											"end": 4157,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "133"
										},
										{
											"begin": 4087,
											"end": 4157,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4087,
											"end": 4102,
											"name": "TIMESTAMP",
											"source": 30
										},
										{
											"begin": 4087,
											"end": 4157,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "134"
										},
										{
											"begin": 4087,
											"end": 4157,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 4087,
											"end": 4157,
											"name": "tag",
											"source": 30,
											"value": "133"
										},
										{
											"begin": 4087,
											"end": 4157,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4060,
											"end": 4084,
											"name": "PUSH",
											"source": 30,
											"value": "6"
										},
										{
											"begin": 4060,
											"end": 4157,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4060,
											"end": 4157,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4060,
											"end": 4157,
											"name": "SSTORE",
											"source": 30
										},
										{
											"begin": 4173,
											"end": 4253,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 4173,
											"end": 4253,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 4205,
											"end": 4215,
											"name": "CALLER",
											"source": 30
										},
										{
											"begin": 4205,
											"end": 4215,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 4194,
											"end": 4203,
											"name": "ORIGIN",
											"source": 30
										},
										{
											"begin": 4194,
											"end": 4203,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 4173,
											"end": 4253,
											"name": "PUSH",
											"source": 30,
											"value": "887CAB3184F7C02B16978AB31F8ACEE05979F59FC3DA6ABE5BF71105EC3179D"
										},
										{
											"begin": 4173,
											"end": 4253,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 4173,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "135"
										},
										{
											"begin": 4173,
											"end": 4253,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 4217,
											"end": 4226,
											"name": "DUP7",
											"source": 30
										},
										{
											"begin": 4217,
											"end": 4226,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 4060,
											"end": 4157,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4173,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "136"
										},
										{
											"begin": 4173,
											"end": 4253,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 4173,
											"end": 4253,
											"name": "tag",
											"source": 30,
											"value": "135"
										},
										{
											"begin": 4173,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4173,
											"end": 4253,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 4173,
											"end": 4253,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 4173,
											"end": 4253,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4173,
											"end": 4253,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 4173,
											"end": 4253,
											"name": "SUB",
											"source": 30
										},
										{
											"begin": 4173,
											"end": 4253,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4173,
											"end": 4253,
											"name": "LOG3",
											"source": 30
										},
										{
											"begin": 3610,
											"end": 4261,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 3610,
											"end": 4261,
											"name": "JUMP",
											"source": 30,
											"value": "[out]"
										},
										{
											"begin": 4322,
											"end": 4633,
											"name": "tag",
											"source": 29,
											"value": "45"
										},
										{
											"begin": 4322,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 4392,
											"end": 4425,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "138"
										},
										{
											"begin": 4421,
											"end": 4424,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 4392,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "139"
										},
										{
											"begin": 4392,
											"end": 4425,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 4392,
											"end": 4425,
											"name": "tag",
											"source": 29,
											"value": "138"
										},
										{
											"begin": 4392,
											"end": 4425,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 4561,
											"end": 4588,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 4561,
											"end": 4588,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 4561,
											"end": 4588,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 4561,
											"end": 4588,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 4561,
											"end": 4583,
											"name": "PUSH",
											"source": 29,
											"value": "7"
										},
										{
											"begin": 4561,
											"end": 4588,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 4561,
											"end": 4588,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 4561,
											"end": 4588,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 4561,
											"end": 4588,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 4561,
											"end": 4588,
											"name": "KECCAK256",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "SLOAD",
											"source": 29
										},
										{
											"begin": 4532,
											"end": 4535,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 4532,
											"end": 4535,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 4507,
											"end": 4517,
											"name": "CALLER",
											"source": 29
										},
										{
											"begin": 4507,
											"end": 4517,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 4483,
											"end": 4492,
											"name": "ORIGIN",
											"source": 29
										},
										{
											"begin": 4483,
											"end": 4492,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 4441,
											"end": 4625,
											"name": "PUSH",
											"source": 29,
											"value": "A363920F84C4A3E8F1FBB02A2F8B5F0D7438886CB05A7D98882AF9BD66D16426"
										},
										{
											"begin": 4441,
											"end": 4625,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "140"
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "141"
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "tag",
											"source": 29,
											"value": "140"
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "PUSH",
											"source": 29,
											"value": "1F"
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "DIV",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "MUL",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "SWAP3",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "SLOAD",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "142"
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "141"
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "tag",
											"source": 29,
											"value": "142"
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "ISZERO",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "143"
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "PUSH",
											"source": 29,
											"value": "1F"
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "LT",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "144"
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "PUSH",
											"source": 29,
											"value": "100"
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "DUP4",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "SLOAD",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "DIV",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "MUL",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "DUP4",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "143"
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "JUMP",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "tag",
											"source": 29,
											"value": "144"
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "KECCAK256",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "tag",
											"source": 29,
											"value": "145"
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "SLOAD",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "PUSH",
											"source": 29,
											"value": "1"
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "DUP4",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "GT",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "145"
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "SUB",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "PUSH",
											"source": 29,
											"value": "1F"
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "AND",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "tag",
											"source": 29,
											"value": "143"
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "146"
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "147"
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "tag",
											"source": 29,
											"value": "146"
										},
										{
											"begin": 4550,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 4441,
											"end": 4625,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 4441,
											"end": 4625,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": 3074,
											"end": 3087,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 3074,
											"end": 3087,
											"name": "MLOAD",
											"source": 31
										},
										{
											"begin": 3089,
											"end": 3099,
											"name": "PUSH",
											"source": 31,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3070,
											"end": 3100,
											"name": "AND",
											"source": 31
										},
										{
											"begin": 3052,
											"end": 3101,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 3052,
											"end": 3101,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 3040,
											"end": 3042,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 3025,
											"end": 3043,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 4441,
											"end": 4625,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 4441,
											"end": 4625,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": 4441,
											"end": 4625,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 4441,
											"end": 4625,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 4441,
											"end": 4625,
											"name": "SUB",
											"source": 29
										},
										{
											"begin": 4441,
											"end": 4625,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 4441,
											"end": 4625,
											"name": "LOG4",
											"source": 29
										},
										{
											"begin": 4322,
											"end": 4633,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 4322,
											"end": 4633,
											"name": "JUMP",
											"source": 29,
											"value": "[out]"
										},
										{
											"begin": 3905,
											"end": 4271,
											"name": "tag",
											"source": 29,
											"value": "56"
										},
										{
											"begin": 3905,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 4047,
											"end": 4048,
											"name": "PUSH",
											"source": 29,
											"value": "1"
										},
										{
											"begin": 4021,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "154"
										},
										{
											"begin": 4021,
											"end": 4044,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 4021,
											"end": 4044,
											"name": "DUP4",
											"source": 29
										},
										{
											"begin": 4021,
											"end": 4044,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 4021,
											"end": 4027,
											"name": "DUP4",
											"source": 29
										},
										{
											"begin": 4021,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "155"
										},
										{
											"begin": 4021,
											"end": 4044,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 4021,
											"end": 4044,
											"name": "tag",
											"source": 29,
											"value": "154"
										},
										{
											"begin": 4021,
											"end": 4044,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 4021,
											"end": 4048,
											"name": "PUSH",
											"source": 29,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4021,
											"end": 4048,
											"name": "AND",
											"source": 29
										},
										{
											"begin": 4021,
											"end": 4048,
											"name": "GT",
											"source": 29
										},
										{
											"begin": 4050,
											"end": 4083,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 4050,
											"end": 4083,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": 4050,
											"end": 4083,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 4050,
											"end": 4083,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 4050,
											"end": 4083,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 4050,
											"end": 4083,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 4050,
											"end": 4083,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 4050,
											"end": 4083,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 4050,
											"end": 4083,
											"name": "PUSH",
											"source": 29,
											"value": "4"
										},
										{
											"begin": 4050,
											"end": 4083,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 4050,
											"end": 4083,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 4050,
											"end": 4083,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 4050,
											"end": 4083,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C494D55"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4050,
											"end": 4083,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 4050,
											"end": 4083,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 4050,
											"end": 4083,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 4013,
											"end": 4084,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 4013,
											"end": 4084,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "156"
										},
										{
											"begin": 4013,
											"end": 4084,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 4013,
											"end": 4084,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 4013,
											"end": 4084,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4013,
											"end": 4084,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 4013,
											"end": 4084,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 4013,
											"end": 4084,
											"name": "PUSH",
											"source": 29,
											"value": "4"
										},
										{
											"begin": 4013,
											"end": 4084,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 4013,
											"end": 4084,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "123"
										},
										{
											"begin": 4013,
											"end": 4084,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 4013,
											"end": 4084,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 4013,
											"end": 4084,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "79"
										},
										{
											"begin": 4013,
											"end": 4084,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 4013,
											"end": 4084,
											"name": "tag",
											"source": 29,
											"value": "156"
										},
										{
											"begin": 4013,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 4013,
											"end": 4084,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "158"
										},
										{
											"begin": 4123,
											"end": 4126,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 4139,
											"end": 4145,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "159"
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "160"
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "tag",
											"source": 29,
											"value": "159"
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "DUP4",
											"source": 29
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "SUB",
											"source": 29
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "SUB",
											"source": 29
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 4095,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "161"
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "tag",
											"source": 29,
											"value": "158"
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 4226,
											"end": 4262,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 4226,
											"end": 4262,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 4226,
											"end": 4262,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 4226,
											"end": 4262,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 4226,
											"end": 4257,
											"name": "PUSH",
											"source": 29,
											"value": "9"
										},
										{
											"begin": 4226,
											"end": 4262,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 4226,
											"end": 4262,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 4226,
											"end": 4262,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 4226,
											"end": 4262,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 4226,
											"end": 4262,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 4226,
											"end": 4262,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 4226,
											"end": 4262,
											"name": "KECCAK256",
											"source": 29
										},
										{
											"begin": 4226,
											"end": 4262,
											"name": "SLOAD",
											"source": 29
										},
										{
											"begin": 4163,
											"end": 4263,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 4163,
											"end": 4263,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": 4213,
											"end": 4216,
											"name": "DUP4",
											"source": 29
										},
										{
											"begin": 4213,
											"end": 4216,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 4201,
											"end": 4211,
											"name": "CALLER",
											"source": 29
										},
										{
											"begin": 4201,
											"end": 4211,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 4190,
											"end": 4199,
											"name": "ORIGIN",
											"source": 29
										},
										{
											"begin": 4190,
											"end": 4199,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 4163,
											"end": 4263,
											"name": "PUSH",
											"source": 29,
											"value": "4CCEB02B6B172E9C19155FCCC4D799437A0D50AD922EA9F0F41B1CB3A17B12E8"
										},
										{
											"begin": 4163,
											"end": 4263,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 4163,
											"end": 4263,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "162"
										},
										{
											"begin": 4163,
											"end": 4263,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 4218,
											"end": 4224,
											"name": "DUP8",
											"source": 29
										},
										{
											"begin": 4218,
											"end": 4224,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 4163,
											"end": 4263,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "163"
										},
										{
											"begin": 4163,
											"end": 4263,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 4163,
											"end": 4263,
											"name": "tag",
											"source": 29,
											"value": "162"
										},
										{
											"begin": 4163,
											"end": 4263,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 4163,
											"end": 4263,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 4163,
											"end": 4263,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": 4163,
											"end": 4263,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 4163,
											"end": 4263,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 4163,
											"end": 4263,
											"name": "SUB",
											"source": 29
										},
										{
											"begin": 4163,
											"end": 4263,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 4163,
											"end": 4263,
											"name": "LOG4",
											"source": 29
										},
										{
											"begin": 3905,
											"end": 4271,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 3905,
											"end": 4271,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 3905,
											"end": 4271,
											"name": "JUMP",
											"source": 29,
											"value": "[out]"
										},
										{
											"begin": 2006,
											"end": 2344,
											"name": "tag",
											"source": 29,
											"value": "63"
										},
										{
											"begin": 2006,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2124,
											"end": 2157,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 2124,
											"end": 2157,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 2124,
											"end": 2157,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 2124,
											"end": 2157,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 2124,
											"end": 2152,
											"name": "PUSH",
											"source": 29,
											"value": "8"
										},
										{
											"begin": 2124,
											"end": 2157,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 2124,
											"end": 2157,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 2124,
											"end": 2157,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 2124,
											"end": 2157,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 2124,
											"end": 2157,
											"name": "KECCAK256",
											"source": 29
										},
										{
											"begin": 2124,
											"end": 2164,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 2124,
											"end": 2164,
											"name": "SLOAD",
											"source": 29
										},
										{
											"begin": 2124,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "168"
										},
										{
											"begin": 2124,
											"end": 2164,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 2124,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "141"
										},
										{
											"begin": 2124,
											"end": 2164,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 2124,
											"end": 2164,
											"name": "tag",
											"source": 29,
											"value": "168"
										},
										{
											"begin": 2124,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 2124,
											"end": 2169,
											"name": "ISZERO",
											"source": 29
										},
										{
											"begin": 2120,
											"end": 2249,
											"name": "ISZERO",
											"source": 29
										},
										{
											"begin": 2120,
											"end": 2249,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2120,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "169"
										},
										{
											"begin": 2120,
											"end": 2249,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2193,
											"end": 2237,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 2193,
											"end": 2237,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 2193,
											"end": 2237,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": 2193,
											"end": 2237,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 2193,
											"end": 2237,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 2193,
											"end": 2237,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 2193,
											"end": 2237,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 2193,
											"end": 2237,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 2193,
											"end": 2237,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2193,
											"end": 2237,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 2193,
											"end": 2237,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 2193,
											"end": 2237,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 2006,
											"end": 2344,
											"name": "JUMP",
											"source": 29,
											"value": "[out]"
										},
										{
											"begin": 2120,
											"end": 2249,
											"name": "tag",
											"source": 29,
											"value": "169"
										},
										{
											"begin": 2120,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 2277,
											"end": 2310,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 2277,
											"end": 2310,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 2277,
											"end": 2310,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 2277,
											"end": 2310,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 2277,
											"end": 2305,
											"name": "PUSH",
											"source": 29,
											"value": "8"
										},
										{
											"begin": 2277,
											"end": 2310,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 2277,
											"end": 2310,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 2277,
											"end": 2310,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 2277,
											"end": 2310,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 2277,
											"end": 2310,
											"name": "KECCAK256",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "SLOAD",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "170"
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "141"
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "tag",
											"source": 29,
											"value": "170"
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "PUSH",
											"source": 29,
											"value": "1F"
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "DIV",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "MUL",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "SWAP3",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "SLOAD",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "171"
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "141"
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "tag",
											"source": 29,
											"value": "171"
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "ISZERO",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "172"
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "PUSH",
											"source": 29,
											"value": "1F"
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "LT",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "173"
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "PUSH",
											"source": 29,
											"value": "100"
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "DUP4",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "SLOAD",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "DIV",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "MUL",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "DUP4",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "172"
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "JUMP",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "tag",
											"source": 29,
											"value": "173"
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "KECCAK256",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "tag",
											"source": 29,
											"value": "174"
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "SLOAD",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "PUSH",
											"source": 29,
											"value": "1"
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "DUP4",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "GT",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "174"
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "SUB",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "PUSH",
											"source": 29,
											"value": "1F"
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "AND",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "tag",
											"source": 29,
											"value": "172"
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "115"
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "147"
										},
										{
											"begin": 2266,
											"end": 2336,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 4684,
											"end": 5165,
											"name": "tag",
											"source": 29,
											"value": "69"
										},
										{
											"begin": 4684,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 4848,
											"end": 4865,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4878,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 4891,
											"end": 4904,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 4930,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "177"
										},
										{
											"begin": 4943,
											"end": 4949,
											"name": "DUP7",
											"source": 29
										},
										{
											"begin": 4930,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "178"
										},
										{
											"begin": 4930,
											"end": 4950,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 4930,
											"end": 4950,
											"name": "tag",
											"source": 29,
											"value": "177"
										},
										{
											"begin": 4930,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1912128B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 4915,
											"end": 4950,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 4915,
											"end": 4950,
											"name": "SWAP5",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4915,
											"end": 4950,
											"name": "SWAP3",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4915,
											"end": 4950,
											"name": "DUP4",
											"source": 29
										},
										{
											"begin": 4915,
											"end": 4950,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4998,
											"end": 5014,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 4998,
											"end": 5014,
											"name": "AND",
											"source": 29
										},
										{
											"begin": 4998,
											"end": 5014,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 4998,
											"end": 5014,
											"name": "PUSH",
											"source": 29,
											"value": "1912128B"
										},
										{
											"begin": 4998,
											"end": 5014,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "179"
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 4915,
											"end": 4950,
											"name": "DUP6",
											"source": 29
										},
										{
											"begin": 4915,
											"end": 4950,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 5020,
											"end": 5032,
											"name": "DUP12",
											"source": 29
										},
										{
											"begin": 5020,
											"end": 5032,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 5034,
											"end": 5038,
											"name": "DUP11",
											"source": 29
										},
										{
											"begin": 5034,
											"end": 5038,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 5040,
											"end": 5052,
											"name": "DUP11",
											"source": 29
										},
										{
											"begin": 5040,
											"end": 5052,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "PUSH",
											"source": 29,
											"value": "4"
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "180"
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "tag",
											"source": 29,
											"value": "179"
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "DUP4",
											"source": 29
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "SUB",
											"source": 29
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "DUP8",
											"source": 29
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "EXTCODESIZE",
											"source": 29
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "ISZERO",
											"source": 29
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "ISZERO",
											"source": 29
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "181"
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "REVERT",
											"source": 29
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "tag",
											"source": 29,
											"value": "181"
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "GAS",
											"source": 29
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "CALL",
											"source": 29
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "ISZERO",
											"source": 29
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "ISZERO",
											"source": 29
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "183"
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "RETURNDATASIZE",
											"source": 29
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "RETURNDATACOPY",
											"source": 29
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "RETURNDATASIZE",
											"source": 29
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "REVERT",
											"source": 29
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "tag",
											"source": 29,
											"value": "183"
										},
										{
											"begin": 4998,
											"end": 5053,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5120,
											"end": 5136,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 5120,
											"end": 5136,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 5120,
											"end": 5136,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": 10895,
											"end": 10903,
											"name": "PUSH",
											"source": 31,
											"value": "FFFFFF"
										},
										{
											"begin": 10883,
											"end": 10904,
											"name": "DUP10",
											"source": 31
										},
										{
											"begin": 10883,
											"end": 10904,
											"name": "AND",
											"source": 31
										},
										{
											"begin": 5120,
											"end": 5136,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 5120,
											"end": 5136,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 5120,
											"end": 5136,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 10865,
											"end": 10905,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 5094,
											"end": 5104,
											"name": "CALLER",
											"source": 29
										},
										{
											"begin": 5094,
											"end": 5104,
											"name": "SWAP4",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5083,
											"end": 5092,
											"name": "ORIGIN",
											"source": 29
										},
										{
											"begin": 5083,
											"end": 5092,
											"name": "SWAP3",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5069,
											"end": 5157,
											"name": "PUSH",
											"source": 29,
											"value": "8A4513C05D15DF8ECE912856923273E166E39F5C9C2B43D2B38594023494A0E0"
										},
										{
											"begin": 5069,
											"end": 5157,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 5106,
											"end": 5118,
											"name": "DUP12",
											"source": 29
										},
										{
											"begin": 5106,
											"end": 5118,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 5120,
											"end": 5136,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 5120,
											"end": 5136,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 5120,
											"end": 5136,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5120,
											"end": 5136,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 5120,
											"end": 5136,
											"name": "DUP5",
											"source": 29
										},
										{
											"begin": 5120,
											"end": 5136,
											"name": "SUB",
											"source": 29
										},
										{
											"begin": 5120,
											"end": 5136,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 5120,
											"end": 5136,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 5120,
											"end": 5136,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 5120,
											"end": 5136,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 5120,
											"end": 5136,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 5120,
											"end": 5136,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 5120,
											"end": 5136,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 5069,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "186"
										},
										{
											"begin": 5069,
											"end": 5157,
											"name": "SWAP3",
											"source": 29
										},
										{
											"begin": 5069,
											"end": 5157,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP13",
											"source": 29
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 5146,
											"end": 5151,
											"name": "DUP9",
											"source": 29
										},
										{
											"begin": 5146,
											"end": 5151,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 5153,
											"end": 5156,
											"name": "DUP11",
											"source": 29
										},
										{
											"begin": 5153,
											"end": 5156,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 5069,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "187"
										},
										{
											"begin": 5069,
											"end": 5157,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 5069,
											"end": 5157,
											"name": "tag",
											"source": 29,
											"value": "186"
										},
										{
											"begin": 5069,
											"end": 5157,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 5069,
											"end": 5157,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 5069,
											"end": 5157,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": 5069,
											"end": 5157,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 5069,
											"end": 5157,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 5069,
											"end": 5157,
											"name": "SUB",
											"source": 29
										},
										{
											"begin": 5069,
											"end": 5157,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 5069,
											"end": 5157,
											"name": "LOG3",
											"source": 29
										},
										{
											"begin": 4880,
											"end": 5165,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 4684,
											"end": 5165,
											"name": "SWAP5",
											"source": 29
										},
										{
											"begin": 4684,
											"end": 5165,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 4684,
											"end": 5165,
											"name": "SWAP5",
											"source": 29
										},
										{
											"begin": 4684,
											"end": 5165,
											"name": "SWAP3",
											"source": 29
										},
										{
											"begin": 4684,
											"end": 5165,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 4684,
											"end": 5165,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 4684,
											"end": 5165,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 4684,
											"end": 5165,
											"name": "JUMP",
											"source": 29,
											"value": "[out]"
										},
										{
											"begin": 237,
											"end": 358,
											"name": "tag",
											"source": 28,
											"value": "77"
										},
										{
											"begin": 237,
											"end": 358,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": 284,
											"end": 297,
											"name": "PUSH",
											"source": 28,
											"value": "60"
										},
										{
											"begin": 317,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "117"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "556E6956335661756C74476F7665726E616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 317,
											"end": 333,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "192"
										},
										{
											"begin": 317,
											"end": 350,
											"name": "JUMP",
											"source": 28,
											"value": "[in]"
										},
										{
											"begin": 2395,
											"end": 2718,
											"name": "tag",
											"source": 29,
											"value": "89"
										},
										{
											"begin": 2395,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2507,
											"end": 2534,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 2507,
											"end": 2534,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 2507,
											"end": 2534,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 2507,
											"end": 2534,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 2507,
											"end": 2529,
											"name": "PUSH",
											"source": 29,
											"value": "7"
										},
										{
											"begin": 2507,
											"end": 2534,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 2507,
											"end": 2534,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 2507,
											"end": 2534,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2534,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 2507,
											"end": 2534,
											"name": "KECCAK256",
											"source": 29
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "SLOAD",
											"source": 29
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "200"
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "141"
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "tag",
											"source": 29,
											"value": "200"
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 2507,
											"end": 2546,
											"name": "ISZERO",
											"source": 29
										},
										{
											"begin": 2503,
											"end": 2629,
											"name": "ISZERO",
											"source": 29
										},
										{
											"begin": 2503,
											"end": 2629,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2503,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "201"
										},
										{
											"begin": 2503,
											"end": 2629,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 2617,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 2570,
											"end": 2617,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 2570,
											"end": 2617,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": 2570,
											"end": 2617,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 2570,
											"end": 2617,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 2570,
											"end": 2617,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 2570,
											"end": 2617,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 2570,
											"end": 2617,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 2570,
											"end": 2617,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 2611,
											"end": 2615,
											"name": "PUSH",
											"source": 29,
											"value": "2A"
										},
										{
											"begin": 2570,
											"end": 2617,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 2570,
											"end": 2617,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 2570,
											"end": 2617,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 2395,
											"end": 2718,
											"name": "JUMP",
											"source": 29,
											"value": "[out]"
										},
										{
											"begin": 2503,
											"end": 2629,
											"name": "tag",
											"source": 29,
											"value": "201"
										},
										{
											"begin": 2503,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 2657,
											"end": 2684,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 2657,
											"end": 2684,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 2657,
											"end": 2684,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 2657,
											"end": 2684,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 2657,
											"end": 2679,
											"name": "PUSH",
											"source": 29,
											"value": "7"
										},
										{
											"begin": 2657,
											"end": 2684,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 2657,
											"end": 2684,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 2657,
											"end": 2684,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 2657,
											"end": 2684,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 2657,
											"end": 2684,
											"name": "KECCAK256",
											"source": 29
										},
										{
											"begin": 2646,
											"end": 2710,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 2646,
											"end": 2710,
											"name": "SLOAD",
											"source": 29
										},
										{
											"begin": 2646,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "170"
										},
										{
											"begin": 2646,
											"end": 2710,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 2646,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "141"
										},
										{
											"begin": 2646,
											"end": 2710,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 3580,
											"end": 3854,
											"name": "tag",
											"source": 29,
											"value": "92"
										},
										{
											"begin": 3580,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 3639,
											"end": 3669,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "209"
										},
										{
											"begin": 3639,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "210"
										},
										{
											"begin": 3639,
											"end": 3669,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 3639,
											"end": 3669,
											"name": "tag",
											"source": 29,
											"value": "209"
										},
										{
											"begin": 3639,
											"end": 3669,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 3751,
											"end": 3761,
											"name": "CALLER",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3685,
											"end": 3846,
											"name": "AND",
											"source": 29
										},
										{
											"begin": 3727,
											"end": 3736,
											"name": "ORIGIN",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3685,
											"end": 3846,
											"name": "AND",
											"source": 29
										},
										{
											"begin": 3685,
											"end": 3846,
											"name": "PUSH",
											"source": 29,
											"value": "B57A42E9F64DFC9C6B9E412EA001A45C0E4D3F26C8D160381A418FF92269D052"
										},
										{
											"begin": 3787,
											"end": 3809,
											"name": "PUSH",
											"source": 29,
											"value": "D"
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "SLOAD",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "211"
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "141"
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "tag",
											"source": 29,
											"value": "211"
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "PUSH",
											"source": 29,
											"value": "1F"
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "DIV",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "MUL",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "SWAP3",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "SLOAD",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "212"
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "141"
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "tag",
											"source": 29,
											"value": "212"
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "ISZERO",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "213"
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "PUSH",
											"source": 29,
											"value": "1F"
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "LT",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "214"
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "PUSH",
											"source": 29,
											"value": "100"
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "DUP4",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "SLOAD",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "DIV",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "MUL",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "DUP4",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "213"
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "JUMP",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "tag",
											"source": 29,
											"value": "214"
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "KECCAK256",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "tag",
											"source": 29,
											"value": "215"
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "SLOAD",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "PUSH",
											"source": 29,
											"value": "1"
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "DUP4",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "GT",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "215"
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "SUB",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "PUSH",
											"source": 29,
											"value": "1F"
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "AND",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "tag",
											"source": 29,
											"value": "213"
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "216"
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "217"
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "tag",
											"source": 29,
											"value": "216"
										},
										{
											"begin": 3776,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 3685,
											"end": 3846,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 3685,
											"end": 3846,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 3685,
											"end": 3846,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": 6758,
											"end": 6771,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 6758,
											"end": 6771,
											"name": "MLOAD",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6754,
											"end": 6776,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 6754,
											"end": 6776,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 6754,
											"end": 6776,
											"name": "AND",
											"source": 31
										},
										{
											"begin": 6736,
											"end": 6777,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 6736,
											"end": 6777,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 6837,
											"end": 6841,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 6825,
											"end": 6842,
											"name": "SWAP4",
											"source": 31
										},
										{
											"begin": 6825,
											"end": 6842,
											"name": "DUP5",
											"source": 31
										},
										{
											"begin": 6825,
											"end": 6842,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 6819,
											"end": 6843,
											"name": "MLOAD",
											"source": 31
										},
										{
											"begin": 6815,
											"end": 6848,
											"name": "AND",
											"source": 31
										},
										{
											"begin": 6793,
											"end": 6813,
											"name": "SWAP3",
											"source": 31
										},
										{
											"begin": 6793,
											"end": 6813,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 6793,
											"end": 6813,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 6786,
											"end": 6849,
											"name": "SWAP3",
											"source": 31
										},
										{
											"begin": 6786,
											"end": 6849,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 6786,
											"end": 6849,
											"name": "SWAP3",
											"source": 31
										},
										{
											"begin": 6786,
											"end": 6849,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 3685,
											"end": 3846,
											"name": "tag",
											"source": 29,
											"value": "218"
										},
										{
											"begin": 3685,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 3685,
											"end": 3846,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 3685,
											"end": 3846,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": 3685,
											"end": 3846,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 3685,
											"end": 3846,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 3685,
											"end": 3846,
											"name": "SUB",
											"source": 29
										},
										{
											"begin": 3685,
											"end": 3846,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 3685,
											"end": 3846,
											"name": "LOG3",
											"source": 29
										},
										{
											"begin": 3580,
											"end": 3854,
											"name": "JUMP",
											"source": 29,
											"value": "[out]"
										},
										{
											"begin": 476,
											"end": 603,
											"name": "tag",
											"source": 28,
											"value": "94"
										},
										{
											"begin": 476,
											"end": 603,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": 526,
											"end": 539,
											"name": "PUSH",
											"source": 28,
											"value": "60"
										},
										{
											"begin": 559,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "117"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "312E312E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 317,
											"end": 333,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "192"
										},
										{
											"begin": 317,
											"end": 350,
											"name": "JUMP",
											"source": 28,
											"value": "[in]"
										},
										{
											"begin": 3088,
											"end": 3529,
											"name": "tag",
											"source": 29,
											"value": "99"
										},
										{
											"begin": 3088,
											"end": 3529,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 3234,
											"end": 3235,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "223"
										},
										{
											"begin": 3199,
											"end": 3221,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 3199,
											"end": 3221,
											"name": "DUP4",
											"source": 29
										},
										{
											"begin": 3199,
											"end": 3221,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 3199,
											"end": 3205,
											"name": "DUP4",
											"source": 29
										},
										{
											"begin": 3199,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "224"
										},
										{
											"begin": 3199,
											"end": 3221,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 3199,
											"end": 3221,
											"name": "tag",
											"source": 29,
											"value": "223"
										},
										{
											"begin": 3199,
											"end": 3221,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3236,
											"name": "AND",
											"source": 29
										},
										{
											"begin": 3191,
											"end": 3236,
											"name": "EQ",
											"source": 29
										},
										{
											"begin": 3191,
											"end": 3236,
											"name": "ISZERO",
											"source": 29
										},
										{
											"begin": 3238,
											"end": 3268,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 3238,
											"end": 3268,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": 3238,
											"end": 3268,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 3238,
											"end": 3268,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 3238,
											"end": 3268,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 3238,
											"end": 3268,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 3238,
											"end": 3268,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 3238,
											"end": 3268,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 3238,
											"end": 3268,
											"name": "PUSH",
											"source": 29,
											"value": "2"
										},
										{
											"begin": 3238,
											"end": 3268,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 3238,
											"end": 3268,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 3238,
											"end": 3268,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 3238,
											"end": 3268,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20AD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3238,
											"end": 3268,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 3238,
											"end": 3268,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 3238,
											"end": 3268,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 3183,
											"end": 3269,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 3183,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "225"
										},
										{
											"begin": 3183,
											"end": 3269,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 3183,
											"end": 3269,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 3183,
											"end": 3269,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3183,
											"end": 3269,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 3183,
											"end": 3269,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 3183,
											"end": 3269,
											"name": "PUSH",
											"source": 29,
											"value": "4"
										},
										{
											"begin": 3183,
											"end": 3269,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 3183,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "123"
										},
										{
											"begin": 3183,
											"end": 3269,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 3183,
											"end": 3269,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 3183,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "79"
										},
										{
											"begin": 3183,
											"end": 3269,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 3183,
											"end": 3269,
											"name": "tag",
											"source": 29,
											"value": "225"
										},
										{
											"begin": 3183,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3322,
											"end": 3323,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3309,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "227"
										},
										{
											"begin": 3296,
											"end": 3309,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3309,
											"name": "DUP4",
											"source": 29
										},
										{
											"begin": 3296,
											"end": 3309,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 3296,
											"end": 3309,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 3296,
											"end": 3309,
											"name": "DUP5",
											"source": 29
										},
										{
											"begin": 3296,
											"end": 3309,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 3296,
											"end": 3309,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "224"
										},
										{
											"begin": 3296,
											"end": 3309,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 3296,
											"end": 3309,
											"name": "tag",
											"source": 29,
											"value": "227"
										},
										{
											"begin": 3296,
											"end": 3309,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3288,
											"end": 3324,
											"name": "AND",
											"source": 29
										},
										{
											"begin": 3288,
											"end": 3324,
											"name": "EQ",
											"source": 29
										},
										{
											"begin": 3288,
											"end": 3324,
											"name": "ISZERO",
											"source": 29
										},
										{
											"begin": 3326,
											"end": 3356,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 3326,
											"end": 3356,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": 3326,
											"end": 3356,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 3326,
											"end": 3356,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 3326,
											"end": 3356,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 3326,
											"end": 3356,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 3326,
											"end": 3356,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 3326,
											"end": 3356,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 3326,
											"end": 3356,
											"name": "PUSH",
											"source": 29,
											"value": "2"
										},
										{
											"begin": 3326,
											"end": 3356,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 3326,
											"end": 3356,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 3326,
											"end": 3356,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 3326,
											"end": 3356,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20AD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3326,
											"end": 3356,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 3326,
											"end": 3356,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 3326,
											"end": 3356,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 3280,
											"end": 3357,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 3280,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "229"
										},
										{
											"begin": 3280,
											"end": 3357,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 3280,
											"end": 3357,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 3280,
											"end": 3357,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3280,
											"end": 3357,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 3280,
											"end": 3357,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 3280,
											"end": 3357,
											"name": "PUSH",
											"source": 29,
											"value": "4"
										},
										{
											"begin": 3280,
											"end": 3357,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 3280,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "123"
										},
										{
											"begin": 3280,
											"end": 3357,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 3280,
											"end": 3357,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 3280,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "79"
										},
										{
											"begin": 3280,
											"end": 3357,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 3280,
											"end": 3357,
											"name": "tag",
											"source": 29,
											"value": "229"
										},
										{
											"begin": 3280,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 3280,
											"end": 3357,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 3368,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "231"
										},
										{
											"begin": 3407,
											"end": 3413,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "232"
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "233"
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "tag",
											"source": 29,
											"value": "232"
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "DUP4",
											"source": 29
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "SUB",
											"source": 29
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "SUB",
											"source": 29
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 3368,
											"end": 3395,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "234"
										},
										{
											"begin": 3368,
											"end": 3415,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 3368,
											"end": 3415,
											"name": "tag",
											"source": 29,
											"value": "231"
										},
										{
											"begin": 3368,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 3489,
											"end": 3520,
											"name": "PUSH",
											"source": 29,
											"value": "F"
										},
										{
											"begin": 3489,
											"end": 3520,
											"name": "SLOAD",
											"source": 29
										},
										{
											"begin": 3431,
											"end": 3521,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 3431,
											"end": 3521,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": 3469,
											"end": 3479,
											"name": "CALLER",
											"source": 29
										},
										{
											"begin": 3469,
											"end": 3479,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 3458,
											"end": 3467,
											"name": "ORIGIN",
											"source": 29
										},
										{
											"begin": 3458,
											"end": 3467,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 3431,
											"end": 3521,
											"name": "PUSH",
											"source": 29,
											"value": "88E619A5DCE560314FDD4895B08C256978617047A99FFC847D45400DF1F377A7"
										},
										{
											"begin": 3431,
											"end": 3521,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 3431,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "135"
										},
										{
											"begin": 3431,
											"end": 3521,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 3481,
											"end": 3487,
											"name": "DUP7",
											"source": 29
										},
										{
											"begin": 3481,
											"end": 3487,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 3489,
											"end": 3520,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 3431,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "236"
										},
										{
											"begin": 3431,
											"end": 3521,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 1494,
											"end": 1955,
											"name": "tag",
											"source": 29,
											"value": "101"
										},
										{
											"begin": 1494,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1601,
											"end": 1629,
											"name": "PUSH",
											"source": 29,
											"value": "E"
										},
										{
											"begin": 1601,
											"end": 1636,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 1601,
											"end": 1636,
											"name": "SLOAD",
											"source": 29
										},
										{
											"begin": 1601,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "240"
										},
										{
											"begin": 1601,
											"end": 1636,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 1601,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "141"
										},
										{
											"begin": 1601,
											"end": 1636,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 1601,
											"end": 1636,
											"name": "tag",
											"source": 29,
											"value": "240"
										},
										{
											"begin": 1601,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 1601,
											"end": 1641,
											"name": "ISZERO",
											"source": 29
										},
										{
											"begin": 1597,
											"end": 1865,
											"name": "ISZERO",
											"source": 29
										},
										{
											"begin": 1597,
											"end": 1865,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1597,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "241"
										},
										{
											"begin": 1597,
											"end": 1865,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1682,
											"end": 1853,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 1682,
											"end": 1853,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 1682,
											"end": 1853,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": 1682,
											"end": 1853,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 1682,
											"end": 1853,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 1682,
											"end": 1853,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 1682,
											"end": 1853,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 1682,
											"end": 1853,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 1682,
											"end": 1853,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1682,
											"end": 1853,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 1682,
											"end": 1853,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 1682,
											"end": 1853,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 1682,
											"end": 1853,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 1682,
											"end": 1853,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 1682,
											"end": 1853,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 1682,
											"end": 1853,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 1682,
											"end": 1853,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 1494,
											"end": 1955,
											"name": "JUMP",
											"source": 29,
											"value": "[out]"
										},
										{
											"begin": 1597,
											"end": 1865,
											"name": "tag",
											"source": 29,
											"value": "241"
										},
										{
											"begin": 1597,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 1893,
											"end": 1921,
											"name": "PUSH",
											"source": 29,
											"value": "E"
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "SLOAD",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "242"
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "141"
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "tag",
											"source": 29,
											"value": "242"
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "PUSH",
											"source": 29,
											"value": "1F"
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "DIV",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "MUL",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "SWAP3",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "SLOAD",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "243"
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "141"
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "tag",
											"source": 29,
											"value": "243"
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "ISZERO",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "244"
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "PUSH",
											"source": 29,
											"value": "1F"
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "LT",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "245"
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "PUSH",
											"source": 29,
											"value": "100"
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "DUP4",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "SLOAD",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "DIV",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "MUL",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "DUP4",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "244"
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "JUMP",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "tag",
											"source": 29,
											"value": "245"
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "KECCAK256",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "tag",
											"source": 29,
											"value": "246"
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "SLOAD",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "PUSH",
											"source": 29,
											"value": "1"
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "DUP4",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "GT",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "246"
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "JUMPI",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "SUB",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "PUSH",
											"source": 29,
											"value": "1F"
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "AND",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "DUP3",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "tag",
											"source": 29,
											"value": "244"
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "POP",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "PUSH",
											"source": 29,
											"value": "20"
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "MLOAD",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "DUP2",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "ADD",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "117"
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "SWAP2",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "217"
										},
										{
											"begin": 1882,
											"end": 1947,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 1208,
											"end": 1443,
											"name": "tag",
											"source": 29,
											"value": "105"
										},
										{
											"begin": 1208,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 29
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1387,
											"end": 1409,
											"name": "PUSH",
											"source": 29,
											"value": "D"
										},
										{
											"begin": 1376,
											"end": 1435,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 1376,
											"end": 1435,
											"name": "SLOAD",
											"source": 29
										},
										{
											"begin": 1376,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "242"
										},
										{
											"begin": 1376,
											"end": 1435,
											"name": "SWAP1",
											"source": 29
										},
										{
											"begin": 1376,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 29,
											"value": "141"
										},
										{
											"begin": 1376,
											"end": 1435,
											"name": "JUMP",
											"source": 29,
											"value": "[in]"
										},
										{
											"begin": 4307,
											"end": 4764,
											"name": "tag",
											"source": 30,
											"value": "108"
										},
										{
											"begin": 4307,
											"end": 4764,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4359,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "257"
										},
										{
											"begin": 4359,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "121"
										},
										{
											"begin": 4359,
											"end": 4382,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 4359,
											"end": 4382,
											"name": "tag",
											"source": 30,
											"value": "257"
										},
										{
											"begin": 4359,
											"end": 4382,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4401,
											"end": 4425,
											"name": "PUSH",
											"source": 30,
											"value": "6"
										},
										{
											"begin": 4401,
											"end": 4425,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 4432,
											"end": 4454,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 4432,
											"end": 4454,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4432,
											"end": 4454,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 4432,
											"end": 4454,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4432,
											"end": 4454,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 4432,
											"end": 4454,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4432,
											"end": 4454,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4432,
											"end": 4454,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 4432,
											"end": 4454,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 4432,
											"end": 4454,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 4432,
											"end": 4454,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4432,
											"end": 4454,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13955313"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4432,
											"end": 4454,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 4432,
											"end": 4454,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 4432,
											"end": 4454,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4432,
											"end": 4454,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 4432,
											"end": 4454,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4393,
											"end": 4455,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "258"
										},
										{
											"begin": 4393,
											"end": 4455,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 4393,
											"end": 4455,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 4393,
											"end": 4455,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4393,
											"end": 4455,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4393,
											"end": 4455,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 4393,
											"end": 4455,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 4393,
											"end": 4455,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4393,
											"end": 4455,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "123"
										},
										{
											"begin": 4393,
											"end": 4455,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 4393,
											"end": 4455,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4393,
											"end": 4455,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "79"
										},
										{
											"begin": 4393,
											"end": 4455,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 4393,
											"end": 4455,
											"name": "tag",
											"source": 30,
											"value": "258"
										},
										{
											"begin": 4393,
											"end": 4455,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4393,
											"end": 4455,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4493,
											"end": 4517,
											"name": "PUSH",
											"source": 30,
											"value": "6"
										},
										{
											"begin": 4493,
											"end": 4517,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 4474,
											"end": 4489,
											"name": "TIMESTAMP",
											"source": 30
										},
										{
											"begin": 4474,
											"end": 4517,
											"name": "LT",
											"source": 30
										},
										{
											"begin": 4474,
											"end": 4517,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 4519,
											"end": 4546,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 4519,
											"end": 4546,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 4519,
											"end": 4546,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4519,
											"end": 4546,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 4519,
											"end": 4546,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4519,
											"end": 4546,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 4519,
											"end": 4546,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 4519,
											"end": 4546,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4519,
											"end": 4546,
											"name": "PUSH",
											"source": 30,
											"value": "2"
										},
										{
											"begin": 4519,
											"end": 4546,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4519,
											"end": 4546,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 4519,
											"end": 4546,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 4519,
											"end": 4546,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5453"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4519,
											"end": 4546,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4519,
											"end": 4546,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 4519,
											"end": 4546,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4466,
											"end": 4547,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4466,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "260"
										},
										{
											"begin": 4466,
											"end": 4547,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 4466,
											"end": 4547,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 4466,
											"end": 4547,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4466,
											"end": 4547,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4466,
											"end": 4547,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 4466,
											"end": 4547,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 4466,
											"end": 4547,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4466,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "123"
										},
										{
											"begin": 4466,
											"end": 4547,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 4466,
											"end": 4547,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4466,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "79"
										},
										{
											"begin": 4466,
											"end": 4547,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 4466,
											"end": 4547,
											"name": "tag",
											"source": 30,
											"value": "260"
										},
										{
											"begin": 4466,
											"end": 4547,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4576,
											"end": 4597,
											"name": "PUSH",
											"source": 30,
											"value": "3"
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4573,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "DUP5",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "AND",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "SWAP3",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "OR",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "DUP5",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "SSTORE",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "DUP7",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "DUP8",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "OR",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "SSTORE",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "PUSH",
											"source": 30,
											"value": "5"
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "SWAP8",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "SWAP8",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "DUP10",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "DUP9",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "OR",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4558,
											"end": 4597,
											"name": "SSTORE",
											"source": 30
										},
										{
											"begin": 4615,
											"end": 4639,
											"name": "PUSH",
											"source": 30,
											"value": "6"
										},
										{
											"begin": 4608,
											"end": 4639,
											"name": "SWAP9",
											"source": 30
										},
										{
											"begin": 4608,
											"end": 4639,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4608,
											"end": 4639,
											"name": "SWAP9",
											"source": 30
										},
										{
											"begin": 4608,
											"end": 4639,
											"name": "SSTORE",
											"source": 30
										},
										{
											"begin": 4650,
											"end": 4678,
											"name": "SWAP8",
											"source": 30
										},
										{
											"begin": 4650,
											"end": 4678,
											"name": "DUP7",
											"source": 30
										},
										{
											"begin": 4650,
											"end": 4678,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 4650,
											"end": 4678,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4650,
											"end": 4678,
											"name": "SWAP9",
											"source": 30
										},
										{
											"begin": 4650,
											"end": 4678,
											"name": "SSTORE",
											"source": 30
										},
										{
											"begin": 4650,
											"end": 4678,
											"name": "DUP5",
											"source": 30
										},
										{
											"begin": 4650,
											"end": 4678,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 4650,
											"end": 4678,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4650,
											"end": 4678,
											"name": "SSTORE",
											"source": 30
										},
										{
											"begin": 4650,
											"end": 4678,
											"name": "SWAP3",
											"source": 30
										},
										{
											"begin": 4650,
											"end": 4678,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4650,
											"end": 4678,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 4650,
											"end": 4678,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 4650,
											"end": 4678,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4650,
											"end": 4678,
											"name": "SWAP3",
											"source": 30
										},
										{
											"begin": 4650,
											"end": 4678,
											"name": "SSTORE",
											"source": 30
										},
										{
											"begin": 4694,
											"end": 4756,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 4694,
											"end": 4756,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4694,
											"end": 4756,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 14272,
											"end": 14313,
											"name": "SWAP2",
											"source": 31
										},
										{
											"begin": 14272,
											"end": 14313,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 14272,
											"end": 14313,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 14344,
											"end": 14348,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 14329,
											"end": 14349,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 14329,
											"end": 14349,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 14322,
											"end": 14385,
											"name": "SWAP4",
											"source": 31
										},
										{
											"begin": 14322,
											"end": 14385,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 14322,
											"end": 14385,
											"name": "SWAP4",
											"source": 31
										},
										{
											"begin": 14322,
											"end": 14385,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 14401,
											"end": 14421,
											"name": "SWAP2",
											"source": 31
										},
										{
											"begin": 14401,
											"end": 14421,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 14401,
											"end": 14421,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 14394,
											"end": 14457,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 4728,
											"end": 4738,
											"name": "CALLER",
											"source": 30
										},
										{
											"begin": 4728,
											"end": 4738,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4717,
											"end": 4726,
											"name": "ORIGIN",
											"source": 30
										},
										{
											"begin": 4717,
											"end": 4726,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4694,
											"end": 4756,
											"name": "PUSH",
											"source": 30,
											"value": "EF3E4BC9725FA684957D7DE03C6DCD01078EE86CF78CEEF25C5F8346DF69CC99"
										},
										{
											"begin": 4694,
											"end": 4756,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 14222,
											"end": 14224,
											"name": "PUSH",
											"source": 31,
											"value": "60"
										},
										{
											"begin": 14207,
											"end": 14225,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 4694,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "218"
										},
										{
											"begin": 14027,
											"end": 14463,
											"name": "JUMP",
											"source": 31
										},
										{
											"begin": 3279,
											"end": 3493,
											"name": "tag",
											"source": 30,
											"value": "114"
										},
										{
											"begin": 3279,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 3372,
											"end": 3376,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3396,
											"end": 3485,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 3396,
											"end": 3485,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "115"
										},
										{
											"begin": 3396,
											"end": 3485,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3436,
											"end": 3485,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 3436,
											"end": 3485,
											"name": "AND",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EFFDA0F5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3436,
											"end": 3485,
											"name": "EQ",
											"source": 30
										},
										{
											"begin": 3389,
											"end": 3485,
											"name": "SWAP3",
											"source": 30
										},
										{
											"begin": 3279,
											"end": 3493,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3279,
											"end": 3493,
											"name": "JUMP",
											"source": 30,
											"value": "[out]"
										},
										{
											"begin": 5207,
											"end": 5365,
											"name": "tag",
											"source": 30,
											"value": "121"
										},
										{
											"begin": 5207,
											"end": 5365,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5288,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 5273,
											"end": 5307,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "935E01B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 5316,
											"end": 5326,
											"name": "CALLER",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 14614,
											"end": 14665,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5273,
											"end": 5307,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5307,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5307,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5307,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5315,
											"name": "PUSH",
											"source": 30,
											"value": "24D7806C"
										},
										{
											"begin": 5273,
											"end": 5315,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 14587,
											"end": 14605,
											"name": "PUSH",
											"source": 31,
											"value": "24"
										},
										{
											"begin": 14587,
											"end": 14605,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "SUB",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "DUP7",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "EXTCODESIZE",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "273"
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "tag",
											"source": 30,
											"value": "273"
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "GAS",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "STATICCALL",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "275"
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "RETURNDATACOPY",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "tag",
											"source": 30,
											"value": "275"
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "PUSH",
											"source": 30,
											"value": "1F"
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "NOT",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "PUSH",
											"source": 30,
											"value": "1F"
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "276"
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "277"
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "tag",
											"source": 30,
											"value": "276"
										},
										{
											"begin": 5273,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 5329,
											"end": 5356,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 5329,
											"end": 5356,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 5329,
											"end": 5356,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5329,
											"end": 5356,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 5329,
											"end": 5356,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 5329,
											"end": 5356,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 5329,
											"end": 5356,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 5329,
											"end": 5356,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5329,
											"end": 5356,
											"name": "PUSH",
											"source": 30,
											"value": "3"
										},
										{
											"begin": 5329,
											"end": 5356,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5329,
											"end": 5356,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 5329,
											"end": 5356,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 5329,
											"end": 5356,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "232921"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5329,
											"end": 5356,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5329,
											"end": 5356,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 5329,
											"end": 5356,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5265,
											"end": 5357,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 5265,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "278"
										},
										{
											"begin": 5265,
											"end": 5357,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 5265,
											"end": 5357,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 5265,
											"end": 5357,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5265,
											"end": 5357,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5265,
											"end": 5357,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 5265,
											"end": 5357,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 5265,
											"end": 5357,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 5265,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "123"
										},
										{
											"begin": 5265,
											"end": 5357,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 5265,
											"end": 5357,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 5265,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "79"
										},
										{
											"begin": 5265,
											"end": 5357,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 5265,
											"end": 5357,
											"name": "tag",
											"source": 30,
											"value": "278"
										},
										{
											"begin": 5265,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 5265,
											"end": 5357,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5207,
											"end": 5365,
											"name": "JUMP",
											"source": 30,
											"value": "[out]"
										},
										{
											"begin": 6948,
											"end": 7511,
											"name": "tag",
											"source": 30,
											"value": "139"
										},
										{
											"begin": 6948,
											"end": 7511,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 7019,
											"end": 7047,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "281"
										},
										{
											"begin": 7043,
											"end": 7046,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 7019,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "282"
										},
										{
											"begin": 7019,
											"end": 7047,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 7019,
											"end": 7047,
											"name": "tag",
											"source": 30,
											"value": "281"
										},
										{
											"begin": 7019,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 7058,
											"end": 7100,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 7103,
											"end": 7139,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 7103,
											"end": 7139,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 7103,
											"end": 7139,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 7103,
											"end": 7134,
											"name": "PUSH",
											"source": 30,
											"value": "9"
										},
										{
											"begin": 7103,
											"end": 7139,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 7103,
											"end": 7139,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 7103,
											"end": 7139,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 7103,
											"end": 7139,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 7103,
											"end": 7139,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 7103,
											"end": 7139,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 7103,
											"end": 7139,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 7103,
											"end": 7139,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 7103,
											"end": 7139,
											"name": "KECCAK256",
											"source": 30
										},
										{
											"begin": 7103,
											"end": 7139,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 7199,
											"end": 7221,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 7199,
											"end": 7221,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 7199,
											"end": 7221,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 7199,
											"end": 7221,
											"name": "DUP5",
											"source": 30
										},
										{
											"begin": 7199,
											"end": 7221,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 7199,
											"end": 7221,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 7199,
											"end": 7221,
											"name": "SWAP4",
											"source": 30
										},
										{
											"begin": 7199,
											"end": 7221,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 7199,
											"end": 7221,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 7199,
											"end": 7221,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 7199,
											"end": 7221,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13955313"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7199,
											"end": 7221,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 7199,
											"end": 7221,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 7199,
											"end": 7221,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 7199,
											"end": 7221,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 7199,
											"end": 7221,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 7199,
											"end": 7221,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 7199,
											"end": 7221,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 7103,
											"end": 7139,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 7158,
											"end": 7197,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 7150,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "283"
										},
										{
											"begin": 7150,
											"end": 7222,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 7150,
											"end": 7222,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 7150,
											"end": 7222,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7150,
											"end": 7222,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 7150,
											"end": 7222,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 7150,
											"end": 7222,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 7150,
											"end": 7222,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 7150,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "123"
										},
										{
											"begin": 7150,
											"end": 7222,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 7150,
											"end": 7222,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 7150,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "79"
										},
										{
											"begin": 7150,
											"end": 7222,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 7150,
											"end": 7222,
											"name": "tag",
											"source": 30,
											"value": "283"
										},
										{
											"begin": 7150,
											"end": 7222,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 7150,
											"end": 7222,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 7260,
											"end": 7294,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 7241,
											"end": 7256,
											"name": "TIMESTAMP",
											"source": 30
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "LT",
											"source": 30
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 7296,
											"end": 7323,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 7296,
											"end": 7323,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 7296,
											"end": 7323,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 7296,
											"end": 7323,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 7296,
											"end": 7323,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 7296,
											"end": 7323,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 7296,
											"end": 7323,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 7296,
											"end": 7323,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 7296,
											"end": 7323,
											"name": "PUSH",
											"source": 30,
											"value": "2"
										},
										{
											"begin": 7296,
											"end": 7323,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 7296,
											"end": 7323,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 7296,
											"end": 7323,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 7296,
											"end": 7323,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5453"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7296,
											"end": 7323,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 7296,
											"end": 7323,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 7296,
											"end": 7323,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 7233,
											"end": 7324,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 7233,
											"end": 7324,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "285"
										},
										{
											"begin": 7233,
											"end": 7324,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 7233,
											"end": 7324,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 7233,
											"end": 7324,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7233,
											"end": 7324,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 7233,
											"end": 7324,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 7233,
											"end": 7324,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 7233,
											"end": 7324,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 7233,
											"end": 7324,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "123"
										},
										{
											"begin": 7233,
											"end": 7324,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 7233,
											"end": 7324,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 7233,
											"end": 7324,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "79"
										},
										{
											"begin": 7233,
											"end": 7324,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 7233,
											"end": 7324,
											"name": "tag",
											"source": 30,
											"value": "285"
										},
										{
											"begin": 7233,
											"end": 7324,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7365,
											"end": 7398,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 7365,
											"end": 7398,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 7365,
											"end": 7398,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 7365,
											"end": 7398,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 7365,
											"end": 7393,
											"name": "PUSH",
											"source": 30,
											"value": "8"
										},
										{
											"begin": 7365,
											"end": 7398,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 7365,
											"end": 7398,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 7365,
											"end": 7398,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 7365,
											"end": 7398,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 7365,
											"end": 7398,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 7365,
											"end": 7398,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 7365,
											"end": 7398,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 7365,
											"end": 7398,
											"name": "KECCAK256",
											"source": 30
										},
										{
											"begin": 7335,
											"end": 7357,
											"name": "PUSH",
											"source": 30,
											"value": "7"
										},
										{
											"begin": 7335,
											"end": 7362,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 7335,
											"end": 7362,
											"name": "SWAP3",
											"source": 30
										},
										{
											"begin": 7335,
											"end": 7362,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 7335,
											"end": 7362,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 7335,
											"end": 7362,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 7335,
											"end": 7362,
											"name": "KECCAK256",
											"source": 30
										},
										{
											"begin": 7335,
											"end": 7398,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 7335,
											"end": 7398,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 7335,
											"end": 7362,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 7335,
											"end": 7362,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 7365,
											"end": 7398,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 7335,
											"end": 7398,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "287"
										},
										{
											"begin": 7335,
											"end": 7398,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 7335,
											"end": 7398,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "141"
										},
										{
											"begin": 7335,
											"end": 7398,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 7335,
											"end": 7398,
											"name": "tag",
											"source": 30,
											"value": "287"
										},
										{
											"begin": 7335,
											"end": 7398,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 7335,
											"end": 7398,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "288"
										},
										{
											"begin": 7335,
											"end": 7398,
											"name": "SWAP3",
											"source": 30
										},
										{
											"begin": 7335,
											"end": 7398,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 7335,
											"end": 7398,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 7335,
											"end": 7398,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "289"
										},
										{
											"begin": 7335,
											"end": 7398,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 7335,
											"end": 7398,
											"name": "tag",
											"source": 30,
											"value": "288"
										},
										{
											"begin": 7335,
											"end": 7398,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7416,
											"end": 7449,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 7416,
											"end": 7449,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 7416,
											"end": 7449,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 7416,
											"end": 7449,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 7416,
											"end": 7444,
											"name": "PUSH",
											"source": 30,
											"value": "8"
										},
										{
											"begin": 7416,
											"end": 7449,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 7416,
											"end": 7449,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 7416,
											"end": 7449,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 7416,
											"end": 7449,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 7416,
											"end": 7449,
											"name": "KECCAK256",
											"source": 30
										},
										{
											"begin": 7409,
											"end": 7449,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "290"
										},
										{
											"begin": 7409,
											"end": 7449,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 7409,
											"end": 7449,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "291"
										},
										{
											"begin": 7409,
											"end": 7449,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 7409,
											"end": 7449,
											"name": "tag",
											"source": 30,
											"value": "290"
										},
										{
											"begin": 7409,
											"end": 7449,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7467,
											"end": 7503,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 7467,
											"end": 7503,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 7467,
											"end": 7503,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 7467,
											"end": 7503,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 7467,
											"end": 7498,
											"name": "PUSH",
											"source": 30,
											"value": "9"
										},
										{
											"begin": 7467,
											"end": 7503,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 7467,
											"end": 7503,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 7467,
											"end": 7503,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 7467,
											"end": 7503,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 7467,
											"end": 7503,
											"name": "KECCAK256",
											"source": 30
										},
										{
											"begin": 7460,
											"end": 7503,
											"name": "SSTORE",
											"source": 30
										},
										{
											"begin": 6948,
											"end": 7511,
											"name": "JUMP",
											"source": 30,
											"value": "[out]"
										},
										{
											"begin": 6459,
											"end": 6892,
											"name": "tag",
											"source": 30,
											"value": "161"
										},
										{
											"begin": 6459,
											"end": 6892,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 6550,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "294"
										},
										{
											"begin": 6574,
											"end": 6577,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 6550,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "282"
										},
										{
											"begin": 6550,
											"end": 6578,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 6550,
											"end": 6578,
											"name": "tag",
											"source": 30,
											"value": "294"
										},
										{
											"begin": 6550,
											"end": 6578,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 6589,
											"end": 6622,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 6589,
											"end": 6622,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 6589,
											"end": 6622,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 6589,
											"end": 6622,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "PUSH",
											"source": 30,
											"value": "8"
										},
										{
											"begin": 6589,
											"end": 6622,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 6589,
											"end": 6622,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 6589,
											"end": 6622,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 6589,
											"end": 6622,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 6589,
											"end": 6622,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 6589,
											"end": 6622,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 6589,
											"end": 6622,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 6589,
											"end": 6622,
											"name": "KECCAK256",
											"source": 30
										},
										{
											"begin": 6589,
											"end": 6631,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 6589,
											"end": 6631,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 6589,
											"end": 6631,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "295"
										},
										{
											"begin": 6589,
											"end": 6631,
											"name": "SWAP3",
											"source": 30
										},
										{
											"begin": 6589,
											"end": 6631,
											"name": "DUP5",
											"source": 30
										},
										{
											"begin": 6589,
											"end": 6631,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 6589,
											"end": 6631,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 6589,
											"end": 6631,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "296"
										},
										{
											"begin": 6589,
											"end": 6631,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 6589,
											"end": 6631,
											"name": "tag",
											"source": 30,
											"value": "295"
										},
										{
											"begin": 6589,
											"end": 6631,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6642,
											"end": 6661,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 6664,
											"end": 6691,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 6664,
											"end": 6691,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 6664,
											"end": 6691,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 6664,
											"end": 6686,
											"name": "PUSH",
											"source": 30,
											"value": "7"
										},
										{
											"begin": 6664,
											"end": 6691,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 6664,
											"end": 6691,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 6664,
											"end": 6691,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 6664,
											"end": 6691,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 6664,
											"end": 6691,
											"name": "KECCAK256",
											"source": 30
										},
										{
											"begin": 6664,
											"end": 6698,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 6664,
											"end": 6698,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 6664,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "297"
										},
										{
											"begin": 6664,
											"end": 6698,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 6664,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "141"
										},
										{
											"begin": 6664,
											"end": 6698,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 6664,
											"end": 6698,
											"name": "tag",
											"source": 30,
											"value": "297"
										},
										{
											"begin": 6664,
											"end": 6698,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 6664,
											"end": 6703,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 6664,
											"end": 6703,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6664,
											"end": 6711,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "298"
										},
										{
											"begin": 6664,
											"end": 6711,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 6710,
											"end": 6711,
											"name": "PUSH",
											"source": 30,
											"value": "1"
										},
										{
											"begin": 6664,
											"end": 6711,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "299"
										},
										{
											"begin": 6664,
											"end": 6711,
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 6664,
											"end": 6711,
											"name": "tag",
											"source": 30,
											"value": "298"
										},
										{
											"begin": 6664,
											"end": 6711,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 6706,
											"end": 6707,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 6664,
											"end": 6711,
											"name": "tag",
											"source": 30,
											"value": "299"
										},
										{
											"begin": 6664,
											"end": 6711,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 6642,
											"end": 6711,
											"name": "PUSH",
											"source": 30,
											"value": "FF"
										},
										{
											"begin": 6642,
											"end": 6711,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 6642,
											"end": 6711,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 6642,
											"end": 6711,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 6873,
											"end": 6884,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6820,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 6805,
											"end": 6839,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6839,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6839,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 6805,
											"end": 6839,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6839,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6839,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6839,
											"name": "PUSH",
											"source": 30,
											"value": "100"
										},
										{
											"begin": 6805,
											"end": 6839,
											"name": "EXP",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6839,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6839,
											"name": "DIV",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6805,
											"end": 6839,
											"name": "AND",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6805,
											"end": 6855,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6855,
											"name": "PUSH",
											"source": 30,
											"value": "BBA32939"
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "PUSH",
											"source": 30,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "PUSH",
											"source": 30,
											"value": "E0"
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "SHL",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "SUB",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "DUP7",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "EXTCODESIZE",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "300"
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "tag",
											"source": 30,
											"value": "300"
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "GAS",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "STATICCALL",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "302"
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "RETURNDATACOPY",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "tag",
											"source": 30,
											"value": "302"
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "PUSH",
											"source": 30,
											"value": "1F"
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "NOT",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "PUSH",
											"source": 30,
											"value": "1F"
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "303"
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "132"
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "tag",
											"source": 30,
											"value": "303"
										},
										{
											"begin": 6805,
											"end": 6857,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6884,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "304"
										},
										{
											"begin": 6805,
											"end": 6884,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6884,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 6805,
											"end": 6884,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "305"
										},
										{
											"begin": 6805,
											"end": 6884,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 6805,
											"end": 6884,
											"name": "tag",
											"source": 30,
											"value": "304"
										},
										{
											"begin": 6805,
											"end": 6884,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 6774,
											"end": 6884,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "306"
										},
										{
											"begin": 6774,
											"end": 6884,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 6774,
											"end": 6789,
											"name": "TIMESTAMP",
											"source": 30
										},
										{
											"begin": 6774,
											"end": 6884,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "134"
										},
										{
											"begin": 6774,
											"end": 6884,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 6774,
											"end": 6884,
											"name": "tag",
											"source": 30,
											"value": "306"
										},
										{
											"begin": 6774,
											"end": 6884,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 6722,
											"end": 6758,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 6722,
											"end": 6758,
											"name": "SWAP4",
											"source": 30
										},
										{
											"begin": 6722,
											"end": 6758,
											"name": "DUP5",
											"source": 30
										},
										{
											"begin": 6722,
											"end": 6758,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 6722,
											"end": 6753,
											"name": "PUSH",
											"source": 30,
											"value": "9"
										},
										{
											"begin": 6722,
											"end": 6758,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 6722,
											"end": 6758,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 6722,
											"end": 6758,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 6722,
											"end": 6758,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 6722,
											"end": 6758,
											"name": "SWAP4",
											"source": 30
										},
										{
											"begin": 6722,
											"end": 6758,
											"name": "KECCAK256",
											"source": 30
										},
										{
											"begin": 6722,
											"end": 6884,
											"name": "SWAP3",
											"source": 30
										},
										{
											"begin": 6722,
											"end": 6884,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 6722,
											"end": 6884,
											"name": "SWAP3",
											"source": 30
										},
										{
											"begin": 6722,
											"end": 6884,
											"name": "SSTORE",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6459,
											"end": 6892,
											"name": "JUMP",
											"source": 30,
											"value": "[out]"
										},
										{
											"begin": 5703,
											"end": 6335,
											"name": "tag",
											"source": 30,
											"value": "178"
										},
										{
											"begin": 5703,
											"end": 6335,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 5758,
											"end": 5771,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 5858,
											"end": 5892,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5858,
											"end": 5892,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "63E85D2D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 5959,
											"end": 5969,
											"name": "CALLER",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 15301,
											"end": 15352,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 5858,
											"end": 5892,
											"name": "PUSH",
											"source": 30,
											"value": "1"
										},
										{
											"begin": 15368,
											"end": 15386,
											"name": "PUSH",
											"source": 31,
											"value": "24"
										},
										{
											"begin": 15368,
											"end": 15386,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 15368,
											"end": 15386,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 15361,
											"end": 15406,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 5758,
											"end": 5771,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 5758,
											"end": 5771,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5858,
											"end": 5892,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 5858,
											"end": 5892,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 5858,
											"end": 5892,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5858,
											"end": 5892,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 5958,
											"name": "PUSH",
											"source": 30,
											"value": "63E85D2D"
										},
										{
											"begin": 5926,
											"end": 5958,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 15274,
											"end": 15292,
											"name": "PUSH",
											"source": 31,
											"value": "44"
										},
										{
											"begin": 15274,
											"end": 15292,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "SUB",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "DUP7",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "EXTCODESIZE",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "310"
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "tag",
											"source": 30,
											"value": "310"
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "GAS",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "STATICCALL",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "312"
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "RETURNDATACOPY",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "tag",
											"source": 30,
											"value": "312"
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "PUSH",
											"source": 30,
											"value": "1F"
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "NOT",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "PUSH",
											"source": 30,
											"value": "1F"
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "313"
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "277"
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "tag",
											"source": 30,
											"value": "313"
										},
										{
											"begin": 5926,
											"end": 6005,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 6020,
											"end": 6047,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 6020,
											"end": 6047,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 6020,
											"end": 6047,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 6020,
											"end": 6047,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 6020,
											"end": 6047,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 6020,
											"end": 6047,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 6020,
											"end": 6047,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 6020,
											"end": 6047,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 6020,
											"end": 6047,
											"name": "PUSH",
											"source": 30,
											"value": "3"
										},
										{
											"begin": 6020,
											"end": 6047,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 6020,
											"end": 6047,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 6020,
											"end": 6047,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 6020,
											"end": 6047,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "232921"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6020,
											"end": 6047,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 6020,
											"end": 6047,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 6020,
											"end": 6047,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5904,
											"end": 6058,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 5904,
											"end": 6058,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "314"
										},
										{
											"begin": 5904,
											"end": 6058,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 5904,
											"end": 6058,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 5904,
											"end": 6058,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5904,
											"end": 6058,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5904,
											"end": 6058,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 5904,
											"end": 6058,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 5904,
											"end": 6058,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 5904,
											"end": 6058,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "123"
										},
										{
											"begin": 5904,
											"end": 6058,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 5904,
											"end": 6058,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 5904,
											"end": 6058,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "79"
										},
										{
											"begin": 5904,
											"end": 6058,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 5904,
											"end": 6058,
											"name": "tag",
											"source": 30,
											"value": "314"
										},
										{
											"begin": 5904,
											"end": 6058,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6100,
											"end": 6124,
											"name": "PUSH",
											"source": 30,
											"value": "1"
										},
										{
											"begin": 6100,
											"end": 6124,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1112EEE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6100,
											"end": 6124,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 6100,
											"end": 6124,
											"name": "SWAP3",
											"source": 30
										},
										{
											"begin": 6100,
											"end": 6124,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 6100,
											"end": 6124,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 6100,
											"end": 6124,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 6100,
											"end": 6124,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6166,
											"name": "PUSH",
											"source": 30,
											"value": "88977738"
										},
										{
											"begin": 6141,
											"end": 6166,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "SWAP3",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "SWAP3",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "SUB",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 6100,
											"end": 6124,
											"name": "DUP7",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "EXTCODESIZE",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "316"
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "tag",
											"source": 30,
											"value": "316"
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "GAS",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "STATICCALL",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "318"
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "RETURNDATACOPY",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "tag",
											"source": 30,
											"value": "318"
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "PUSH",
											"source": 30,
											"value": "1F"
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "NOT",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "PUSH",
											"source": 30,
											"value": "1F"
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "319"
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "132"
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "tag",
											"source": 30,
											"value": "319"
										},
										{
											"begin": 6141,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 6141,
											"end": 6172,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "320"
										},
										{
											"begin": 6141,
											"end": 6172,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 6171,
											"end": 6172,
											"name": "PUSH",
											"source": 30,
											"value": "1"
										},
										{
											"begin": 6141,
											"end": 6172,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "134"
										},
										{
											"begin": 6141,
											"end": 6172,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 6141,
											"end": 6172,
											"name": "tag",
											"source": 30,
											"value": "320"
										},
										{
											"begin": 6141,
											"end": 6172,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 6225,
											"end": 6250,
											"name": "PUSH",
											"source": 30,
											"value": "2"
										},
										{
											"begin": 6225,
											"end": 6250,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 6135,
											"end": 6172,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 6135,
											"end": 6172,
											"name": "SWAP4",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6191,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "321"
										},
										{
											"begin": 6191,
											"end": 6266,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6225,
											"end": 6250,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 6135,
											"end": 6172,
											"name": "DUP5",
											"source": 30
										},
										{
											"begin": 6191,
											"end": 6216,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "322"
										},
										{
											"begin": 6191,
											"end": 6266,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 6191,
											"end": 6266,
											"name": "tag",
											"source": 30,
											"value": "321"
										},
										{
											"begin": 6191,
											"end": 6266,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5C4FDF9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15647,
											"end": 15662,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 15647,
											"end": 15662,
											"name": "DUP4",
											"source": 31
										},
										{
											"begin": 15647,
											"end": 15662,
											"name": "AND",
											"source": 31
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 15629,
											"end": 15663,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 15699,
											"end": 15714,
											"name": "DUP8",
											"source": 31
										},
										{
											"begin": 15699,
											"end": 15714,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 15699,
											"end": 15714,
											"name": "AND",
											"source": 31
										},
										{
											"begin": 15679,
											"end": 15697,
											"name": "PUSH",
											"source": 31,
											"value": "24"
										},
										{
											"begin": 15679,
											"end": 15697,
											"name": "DUP4",
											"source": 31
										},
										{
											"begin": 15679,
											"end": 15697,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 15672,
											"end": 15715,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 6183,
											"end": 6266,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 6183,
											"end": 6266,
											"name": "SWAP6",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6277,
											"end": 6304,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6304,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6304,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6304,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6304,
											"name": "PUSH",
											"source": 30,
											"value": "5C4FDF9"
										},
										{
											"begin": 6277,
											"end": 6304,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 15564,
											"end": 15582,
											"name": "PUSH",
											"source": 31,
											"value": "44"
										},
										{
											"begin": 15564,
											"end": 15582,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "SUB",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "DUP8",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "EXTCODESIZE",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "325"
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "tag",
											"source": 30,
											"value": "325"
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "GAS",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "CALL",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "327"
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "RETURNDATACOPY",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "tag",
											"source": 30,
											"value": "327"
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "PUSH",
											"source": 30,
											"value": "1F"
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "NOT",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "PUSH",
											"source": 30,
											"value": "1F"
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "328"
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "132"
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "tag",
											"source": 30,
											"value": "328"
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 6277,
											"end": 6327,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5786,
											"end": 6335,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5786,
											"end": 6335,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5703,
											"end": 6335,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 5703,
											"end": 6335,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5703,
											"end": 6335,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 5703,
											"end": 6335,
											"name": "JUMP",
											"source": 30,
											"value": "[out]"
										},
										{
											"begin": 943,
											"end": 1337,
											"name": "tag",
											"source": 28,
											"value": "192"
										},
										{
											"begin": 943,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": 1035,
											"end": 1049,
											"name": "PUSH",
											"source": 28,
											"value": "40"
										},
										{
											"begin": 1035,
											"end": 1049,
											"name": "DUP1",
											"source": 28
										},
										{
											"begin": 1035,
											"end": 1049,
											"name": "MLOAD",
											"source": 28
										},
										{
											"begin": 1046,
											"end": 1048,
											"name": "PUSH",
											"source": 28,
											"value": "20"
										},
										{
											"begin": 1035,
											"end": 1049,
											"name": "DUP1",
											"source": 28
										},
										{
											"begin": 1035,
											"end": 1049,
											"name": "DUP3",
											"source": 28
										},
										{
											"begin": 1035,
											"end": 1049,
											"name": "MSTORE",
											"source": 28
										},
										{
											"begin": 1035,
											"end": 1049,
											"name": "DUP2",
											"source": 28
										},
										{
											"begin": 1035,
											"end": 1049,
											"name": "DUP4",
											"source": 28
										},
										{
											"begin": 1035,
											"end": 1049,
											"name": "ADD",
											"source": 28
										},
										{
											"begin": 1035,
											"end": 1049,
											"name": "SWAP1",
											"source": 28
										},
										{
											"begin": 1035,
											"end": 1049,
											"name": "SWAP3",
											"source": 28
										},
										{
											"begin": 1035,
											"end": 1049,
											"name": "MSTORE",
											"source": 28
										},
										{
											"begin": 1003,
											"end": 1018,
											"name": "PUSH",
											"source": 28,
											"value": "60"
										},
										{
											"begin": 1003,
											"end": 1018,
											"name": "SWAP2",
											"source": 28
										},
										{
											"begin": 1035,
											"end": 1049,
											"name": "PUSH",
											"source": 28,
											"value": "20"
										},
										{
											"begin": 1035,
											"end": 1049,
											"name": "DUP3",
											"source": 28
										},
										{
											"begin": 1035,
											"end": 1049,
											"name": "ADD",
											"source": 28
										},
										{
											"begin": 1035,
											"end": 1049,
											"name": "DUP2",
											"source": 28
										},
										{
											"begin": 1035,
											"end": 1049,
											"name": "DUP1",
											"source": 28
										},
										{
											"begin": 1035,
											"end": 1049,
											"name": "CALLDATASIZE",
											"source": 28
										},
										{
											"begin": 1035,
											"end": 1049,
											"name": "DUP4",
											"source": 28
										},
										{
											"begin": 1035,
											"end": 1049,
											"name": "CALLDATACOPY",
											"source": 28
										},
										{
											"begin": 1035,
											"end": 1049,
											"name": "ADD",
											"source": 28
										},
										{
											"begin": 1035,
											"end": 1049,
											"name": "SWAP1",
											"source": 28
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1031,
											"end": 1049,
											"name": "SWAP1",
											"source": 28
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 28,
											"value": "20"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "PUSH",
											"source": 28,
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1234,
											"name": "tag",
											"source": 28,
											"value": "334"
										},
										{
											"begin": 1087,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": 1111,
											"end": 1113,
											"name": "PUSH",
											"source": 28,
											"value": "20"
										},
										{
											"begin": 1107,
											"end": 1108,
											"name": "DUP2",
											"source": 28
										},
										{
											"begin": 1107,
											"end": 1113,
											"name": "LT",
											"source": 28
										},
										{
											"begin": 1087,
											"end": 1234,
											"name": "ISZERO",
											"source": 28
										},
										{
											"begin": 1087,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "335"
										},
										{
											"begin": 1087,
											"end": 1234,
											"name": "JUMPI",
											"source": 28
										},
										{
											"begin": 1145,
											"end": 1146,
											"name": "DUP4",
											"source": 28
										},
										{
											"begin": 1147,
											"end": 1148,
											"name": "DUP2",
											"source": 28
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 28,
											"value": "20"
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "DUP2",
											"source": 28
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "LT",
											"source": 28
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "338"
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "JUMPI",
											"source": 28
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "338"
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "339"
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "JUMP",
											"source": 28,
											"value": "[in]"
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "tag",
											"source": 28,
											"value": "338"
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "BYTE",
											"source": 28
										},
										{
											"begin": 1135,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "340"
										},
										{
											"begin": 1135,
											"end": 1223,
											"name": "JUMPI",
											"source": 28
										},
										{
											"begin": 1182,
											"end": 1183,
											"name": "DUP1",
											"source": 28
										},
										{
											"begin": 1176,
											"end": 1183,
											"name": "SWAP2",
											"source": 28
										},
										{
											"begin": 1176,
											"end": 1183,
											"name": "POP",
											"source": 28
										},
										{
											"begin": 1202,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "335"
										},
										{
											"begin": 1202,
											"end": 1207,
											"name": "JUMP",
											"source": 28
										},
										{
											"begin": 1135,
											"end": 1223,
											"name": "tag",
											"source": 28,
											"value": "340"
										},
										{
											"begin": 1135,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": 1115,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "341"
										},
										{
											"begin": 1115,
											"end": 1118,
											"name": "DUP2",
											"source": 28
										},
										{
											"begin": 1115,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "342"
										},
										{
											"begin": 1115,
											"end": 1118,
											"name": "JUMP",
											"source": 28,
											"value": "[in]"
										},
										{
											"begin": 1115,
											"end": 1118,
											"name": "tag",
											"source": 28,
											"value": "341"
										},
										{
											"begin": 1115,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": 1115,
											"end": 1118,
											"name": "SWAP1",
											"source": 28
										},
										{
											"begin": 1115,
											"end": 1118,
											"name": "POP",
											"source": 28
										},
										{
											"begin": 1087,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "334"
										},
										{
											"begin": 1087,
											"end": 1234,
											"name": "JUMP",
											"source": 28
										},
										{
											"begin": 1087,
											"end": 1234,
											"name": "tag",
											"source": 28,
											"value": "335"
										},
										{
											"begin": 1087,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1268,
											"end": 1282,
											"name": "DUP2",
											"source": 28
										},
										{
											"begin": 1268,
											"end": 1282,
											"name": "MSTORE",
											"source": 28
										},
										{
											"begin": 1310,
											"end": 1314,
											"name": "PUSH",
											"source": 28,
											"value": "20"
										},
										{
											"begin": 1303,
											"end": 1315,
											"name": "DUP2",
											"source": 28
										},
										{
											"begin": 1303,
											"end": 1315,
											"name": "ADD",
											"source": 28
										},
										{
											"begin": 1296,
											"end": 1319,
											"name": "SWAP2",
											"source": 28
										},
										{
											"begin": 1296,
											"end": 1319,
											"name": "SWAP1",
											"source": 28
										},
										{
											"begin": 1296,
											"end": 1319,
											"name": "SWAP2",
											"source": 28
										},
										{
											"begin": 1296,
											"end": 1319,
											"name": "MSTORE",
											"source": 28
										},
										{
											"begin": 1275,
											"end": 1276,
											"name": "SWAP1",
											"source": 28
										},
										{
											"begin": 943,
											"end": 1337,
											"name": "JUMP",
											"source": 28,
											"value": "[out]"
										},
										{
											"begin": 9344,
											"end": 9773,
											"name": "tag",
											"source": 30,
											"value": "210"
										},
										{
											"begin": 9344,
											"end": 9773,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 9404,
											"end": 9427,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "344"
										},
										{
											"begin": 9404,
											"end": 9425,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "121"
										},
										{
											"begin": 9404,
											"end": 9427,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 9404,
											"end": 9427,
											"name": "tag",
											"source": 30,
											"value": "344"
										},
										{
											"begin": 9404,
											"end": 9427,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 9446,
											"end": 9477,
											"name": "PUSH",
											"source": 30,
											"value": "F"
										},
										{
											"begin": 9446,
											"end": 9477,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13955313"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 9438,
											"end": 9507,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "345"
										},
										{
											"begin": 9438,
											"end": 9507,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 9438,
											"end": 9507,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 9438,
											"end": 9507,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9438,
											"end": 9507,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 9438,
											"end": 9507,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 9438,
											"end": 9507,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 9438,
											"end": 9507,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 9438,
											"end": 9507,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "123"
										},
										{
											"begin": 9438,
											"end": 9507,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 9438,
											"end": 9507,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 9438,
											"end": 9507,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "79"
										},
										{
											"begin": 9438,
											"end": 9507,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 9438,
											"end": 9507,
											"name": "tag",
											"source": 30,
											"value": "345"
										},
										{
											"begin": 9438,
											"end": 9507,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 9438,
											"end": 9507,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 9545,
											"end": 9576,
											"name": "PUSH",
											"source": 30,
											"value": "F"
										},
										{
											"begin": 9545,
											"end": 9576,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 9526,
											"end": 9541,
											"name": "TIMESTAMP",
											"source": 30
										},
										{
											"begin": 9526,
											"end": 9576,
											"name": "LT",
											"source": 30
										},
										{
											"begin": 9526,
											"end": 9576,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 9578,
											"end": 9605,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 9578,
											"end": 9605,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 9578,
											"end": 9605,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 9578,
											"end": 9605,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 9578,
											"end": 9605,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 9578,
											"end": 9605,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 9578,
											"end": 9605,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 9578,
											"end": 9605,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 9578,
											"end": 9605,
											"name": "PUSH",
											"source": 30,
											"value": "2"
										},
										{
											"begin": 9578,
											"end": 9605,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 9578,
											"end": 9605,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 9578,
											"end": 9605,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 9578,
											"end": 9605,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5453"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9578,
											"end": 9605,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 9578,
											"end": 9605,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 9578,
											"end": 9605,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 9518,
											"end": 9606,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 9518,
											"end": 9606,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "347"
										},
										{
											"begin": 9518,
											"end": 9606,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 9518,
											"end": 9606,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 9518,
											"end": 9606,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9518,
											"end": 9606,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 9518,
											"end": 9606,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 9518,
											"end": 9606,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 9518,
											"end": 9606,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 9518,
											"end": 9606,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "123"
										},
										{
											"begin": 9518,
											"end": 9606,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 9518,
											"end": 9606,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 9518,
											"end": 9606,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "79"
										},
										{
											"begin": 9518,
											"end": 9606,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 9518,
											"end": 9606,
											"name": "tag",
											"source": 30,
											"value": "347"
										},
										{
											"begin": 9518,
											"end": 9606,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 9518,
											"end": 9606,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 9642,
											"end": 9670,
											"name": "PUSH",
											"source": 30,
											"value": "E"
										},
										{
											"begin": 9617,
											"end": 9639,
											"name": "PUSH",
											"source": 30,
											"value": "D"
										},
										{
											"begin": 9617,
											"end": 9670,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 9617,
											"end": 9670,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 9617,
											"end": 9670,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 9617,
											"end": 9670,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "349"
										},
										{
											"begin": 9617,
											"end": 9670,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 9617,
											"end": 9670,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "141"
										},
										{
											"begin": 9617,
											"end": 9670,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 9617,
											"end": 9670,
											"name": "tag",
											"source": 30,
											"value": "349"
										},
										{
											"begin": 9617,
											"end": 9670,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 9617,
											"end": 9670,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "350"
										},
										{
											"begin": 9617,
											"end": 9670,
											"name": "SWAP3",
											"source": 30
										},
										{
											"begin": 9617,
											"end": 9670,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 9617,
											"end": 9670,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 9617,
											"end": 9670,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "289"
										},
										{
											"begin": 9617,
											"end": 9670,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 9617,
											"end": 9670,
											"name": "tag",
											"source": 30,
											"value": "350"
										},
										{
											"begin": 9617,
											"end": 9670,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9681,
											"end": 9716,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "351"
										},
										{
											"begin": 9688,
											"end": 9716,
											"name": "PUSH",
											"source": 30,
											"value": "E"
										},
										{
											"begin": 9688,
											"end": 9716,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 9681,
											"end": 9716,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "291"
										},
										{
											"begin": 9681,
											"end": 9716,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 9681,
											"end": 9716,
											"name": "tag",
											"source": 30,
											"value": "351"
										},
										{
											"begin": 9681,
											"end": 9716,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 9727,
											"end": 9765,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 9734,
											"end": 9765,
											"name": "PUSH",
											"source": 30,
											"value": "F"
										},
										{
											"begin": 9727,
											"end": 9765,
											"name": "SSTORE",
											"source": 30
										},
										{
											"begin": 9344,
											"end": 9773,
											"name": "JUMP",
											"source": 30,
											"value": "[out]"
										},
										{
											"begin": 8888,
											"end": 9288,
											"name": "tag",
											"source": 30,
											"value": "234"
										},
										{
											"begin": 8888,
											"end": 9288,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 8966,
											"end": 8989,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "353"
										},
										{
											"begin": 8966,
											"end": 8987,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "121"
										},
										{
											"begin": 8966,
											"end": 8989,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 8966,
											"end": 8989,
											"name": "tag",
											"source": 30,
											"value": "353"
										},
										{
											"begin": 8966,
											"end": 8989,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 9000,
											"end": 9019,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 9022,
											"end": 9044,
											"name": "PUSH",
											"source": 30,
											"value": "D"
										},
										{
											"begin": 9022,
											"end": 9051,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 9022,
											"end": 9051,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 9022,
											"end": 9051,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "354"
										},
										{
											"begin": 9022,
											"end": 9051,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 9022,
											"end": 9051,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "141"
										},
										{
											"begin": 9022,
											"end": 9051,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 9022,
											"end": 9051,
											"name": "tag",
											"source": 30,
											"value": "354"
										},
										{
											"begin": 9022,
											"end": 9051,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 9022,
											"end": 9056,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 9022,
											"end": 9056,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9022,
											"end": 9064,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "355"
										},
										{
											"begin": 9022,
											"end": 9064,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 9063,
											"end": 9064,
											"name": "PUSH",
											"source": 30,
											"value": "1"
										},
										{
											"begin": 9022,
											"end": 9064,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "356"
										},
										{
											"begin": 9022,
											"end": 9064,
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 9022,
											"end": 9064,
											"name": "tag",
											"source": 30,
											"value": "355"
										},
										{
											"begin": 9022,
											"end": 9064,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 9059,
											"end": 9060,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 9022,
											"end": 9064,
											"name": "tag",
											"source": 30,
											"value": "356"
										},
										{
											"begin": 9022,
											"end": 9064,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 9000,
											"end": 9064,
											"name": "PUSH",
											"source": 30,
											"value": "FF"
										},
										{
											"begin": 9000,
											"end": 9064,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 9000,
											"end": 9064,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 9000,
											"end": 9064,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 9106,
											"end": 9112,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 9075,
											"end": 9103,
											"name": "PUSH",
											"source": 30,
											"value": "E"
										},
										{
											"begin": 9075,
											"end": 9112,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 9075,
											"end": 9112,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 9075,
											"end": 9112,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 9075,
											"end": 9112,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 9075,
											"end": 9112,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 9075,
											"end": 9112,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 9075,
											"end": 9112,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 9075,
											"end": 9112,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "357"
										},
										{
											"begin": 9075,
											"end": 9112,
											"name": "SWAP3",
											"source": 30
										},
										{
											"begin": 9075,
											"end": 9112,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 9075,
											"end": 9112,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 9075,
											"end": 9112,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "296"
										},
										{
											"begin": 9075,
											"end": 9112,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 9075,
											"end": 9112,
											"name": "tag",
											"source": 30,
											"value": "357"
										},
										{
											"begin": 9075,
											"end": 9112,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9201,
											"end": 9216,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 9201,
											"end": 9235,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BBA32939"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 9269,
											"end": 9280,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 9269,
											"end": 9280,
											"name": "SWAP3",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9201,
											"end": 9235,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9235,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9251,
											"name": "PUSH",
											"source": 30,
											"value": "BBA32939"
										},
										{
											"begin": 9201,
											"end": 9251,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "SWAP3",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "SWAP3",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "SUB",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9235,
											"name": "DUP7",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "EXTCODESIZE",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "358"
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "tag",
											"source": 30,
											"value": "358"
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "GAS",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "STATICCALL",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "360"
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "RETURNDATACOPY",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "tag",
											"source": 30,
											"value": "360"
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "PUSH",
											"source": 30,
											"value": "1F"
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "NOT",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "PUSH",
											"source": 30,
											"value": "1F"
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "361"
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "132"
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "tag",
											"source": 30,
											"value": "361"
										},
										{
											"begin": 9201,
											"end": 9253,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9280,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "362"
										},
										{
											"begin": 9201,
											"end": 9280,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9280,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 9201,
											"end": 9280,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "305"
										},
										{
											"begin": 9201,
											"end": 9280,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 9201,
											"end": 9280,
											"name": "tag",
											"source": 30,
											"value": "362"
										},
										{
											"begin": 9201,
											"end": 9280,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 9170,
											"end": 9280,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "363"
										},
										{
											"begin": 9170,
											"end": 9280,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 9170,
											"end": 9185,
											"name": "TIMESTAMP",
											"source": 30
										},
										{
											"begin": 9170,
											"end": 9280,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "134"
										},
										{
											"begin": 9170,
											"end": 9280,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 9170,
											"end": 9280,
											"name": "tag",
											"source": 30,
											"value": "363"
										},
										{
											"begin": 9170,
											"end": 9280,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 9123,
											"end": 9154,
											"name": "PUSH",
											"source": 30,
											"value": "F"
										},
										{
											"begin": 9123,
											"end": 9280,
											"name": "SSTORE",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8888,
											"end": 9288,
											"name": "JUMP",
											"source": 30,
											"value": "[out]"
										},
										{
											"begin": 4839,
											"end": 5199,
											"name": "tag",
											"source": 30,
											"value": "282"
										},
										{
											"begin": 4839,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4948,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 4933,
											"end": 4967,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "935E01B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 4976,
											"end": 4986,
											"name": "CALLER",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 14614,
											"end": 14665,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4933,
											"end": 4967,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4967,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4967,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4967,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4975,
											"name": "PUSH",
											"source": 30,
											"value": "24D7806C"
										},
										{
											"begin": 4933,
											"end": 4975,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 14587,
											"end": 14605,
											"name": "PUSH",
											"source": 31,
											"value": "24"
										},
										{
											"begin": 14587,
											"end": 14605,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "SUB",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "DUP7",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "EXTCODESIZE",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "367"
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "tag",
											"source": 30,
											"value": "367"
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "GAS",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "STATICCALL",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "369"
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "RETURNDATACOPY",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "tag",
											"source": 30,
											"value": "369"
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "PUSH",
											"source": 30,
											"value": "1F"
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "NOT",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "PUSH",
											"source": 30,
											"value": "1F"
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "370"
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "277"
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "tag",
											"source": 30,
											"value": "370"
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 5063,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "371"
										},
										{
											"begin": 4933,
											"end": 5063,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5008,
											"end": 5032,
											"name": "PUSH",
											"source": 30,
											"value": "1"
										},
										{
											"begin": 5008,
											"end": 5032,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20604BF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 643,
											"end": 668,
											"name": "DUP4",
											"source": 31
										},
										{
											"begin": 643,
											"end": 668,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 643,
											"end": 668,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 5053,
											"end": 5063,
											"name": "CALLER",
											"source": 30
										},
										{
											"begin": 5053,
											"end": 5063,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5008,
											"end": 5032,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5032,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5044,
											"name": "PUSH",
											"source": 30,
											"value": "81812FC"
										},
										{
											"begin": 5008,
											"end": 5044,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 616,
											"end": 634,
											"name": "PUSH",
											"source": 31,
											"value": "24"
										},
										{
											"begin": 616,
											"end": 634,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "SUB",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "DUP7",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "EXTCODESIZE",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "373"
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "tag",
											"source": 30,
											"value": "373"
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "GAS",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "STATICCALL",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "375"
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "RETURNDATACOPY",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "tag",
											"source": 30,
											"value": "375"
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "PUSH",
											"source": 30,
											"value": "1F"
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "NOT",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "PUSH",
											"source": 30,
											"value": "1F"
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "376"
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "377"
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "tag",
											"source": 30,
											"value": "376"
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5008,
											"end": 5063,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 5008,
											"end": 5063,
											"name": "EQ",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 5063,
											"name": "tag",
											"source": 30,
											"value": "371"
										},
										{
											"begin": 4933,
											"end": 5063,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 5137,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 5137,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "378"
										},
										{
											"begin": 4933,
											"end": 5137,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5085,
											"end": 5109,
											"name": "PUSH",
											"source": 30,
											"value": "1"
										},
										{
											"begin": 5085,
											"end": 5109,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31A9108F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 643,
											"end": 668,
											"name": "DUP4",
											"source": 31
										},
										{
											"begin": 643,
											"end": 668,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 643,
											"end": 668,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 5126,
											"end": 5136,
											"name": "CALLER",
											"source": 30
										},
										{
											"begin": 5126,
											"end": 5136,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5085,
											"end": 5109,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5109,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5117,
											"name": "PUSH",
											"source": 30,
											"value": "6352211E"
										},
										{
											"begin": 5085,
											"end": 5117,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 616,
											"end": 634,
											"name": "PUSH",
											"source": 31,
											"value": "24"
										},
										{
											"begin": 616,
											"end": 634,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "SUB",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "DUP7",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "EXTCODESIZE",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "380"
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "tag",
											"source": 30,
											"value": "380"
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "GAS",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "STATICCALL",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "382"
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "RETURNDATACOPY",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "tag",
											"source": 30,
											"value": "382"
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "RETURNDATASIZE",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "PUSH",
											"source": 30,
											"value": "1F"
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "NOT",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "PUSH",
											"source": 30,
											"value": "1F"
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "383"
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "377"
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "tag",
											"source": 30,
											"value": "383"
										},
										{
											"begin": 5085,
											"end": 5122,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5085,
											"end": 5136,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 5085,
											"end": 5136,
											"name": "EQ",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 5137,
											"name": "tag",
											"source": 30,
											"value": "378"
										},
										{
											"begin": 4933,
											"end": 5137,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 5153,
											"end": 5180,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 5153,
											"end": 5180,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 5153,
											"end": 5180,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5153,
											"end": 5180,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 5153,
											"end": 5180,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 5153,
											"end": 5180,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 5153,
											"end": 5180,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 5153,
											"end": 5180,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5153,
											"end": 5180,
											"name": "PUSH",
											"source": 30,
											"value": "3"
										},
										{
											"begin": 5153,
											"end": 5180,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5153,
											"end": 5180,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 5153,
											"end": 5180,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 5153,
											"end": 5180,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "232921"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5153,
											"end": 5180,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5153,
											"end": 5180,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 5153,
											"end": 5180,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4910,
											"end": 5191,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4910,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "384"
										},
										{
											"begin": 4910,
											"end": 5191,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 4910,
											"end": 5191,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 4910,
											"end": 5191,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4910,
											"end": 5191,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4910,
											"end": 5191,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 4910,
											"end": 5191,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 4910,
											"end": 5191,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4910,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "123"
										},
										{
											"begin": 4910,
											"end": 5191,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 4910,
											"end": 5191,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4910,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "79"
										},
										{
											"begin": 4910,
											"end": 5191,
											"name": "JUMP",
											"source": 30,
											"value": "[in]"
										},
										{
											"begin": 4910,
											"end": 5191,
											"name": "tag",
											"source": 30,
											"value": "384"
										},
										{
											"begin": 4910,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4910,
											"end": 5191,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4839,
											"end": 5199,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4839,
											"end": 5199,
											"name": "JUMP",
											"source": 30,
											"value": "[out]"
										},
										{
											"begin": 1848,
											"end": 2398,
											"name": "tag",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 1848,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1948,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2004,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1994,
											"end": 2005,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3D602D80600A3D3981F3363D3D373D3D3D363D73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2025,
											"end": 2028,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2018,
											"end": 2097,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2157,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2137,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2133,
											"end": 2158,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2126,
											"end": 2130,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2121,
											"end": 2124,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2159,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5AF43D82803E903D91602B57FD5BF3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2188,
											"end": 2192,
											"name": "PUSH",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2183,
											"end": 2186,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2193,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2172,
											"end": 2262,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2313,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2307,
											"name": "PUSH",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2298,
											"end": 2301,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2295,
											"end": 2296,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2314,
											"name": "CREATE2",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2314,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2341,
											"end": 2363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2341,
											"end": 2363,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2333,
											"end": 2391,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2333,
											"end": 2391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2333,
											"end": 2391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16477,
											"end": 16479,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 2333,
											"end": 2391,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2333,
											"end": 2391,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16459,
											"end": 16480,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 16516,
											"end": 16518,
											"name": "PUSH",
											"source": 31,
											"value": "17"
										},
										{
											"begin": 16496,
											"end": 16514,
											"name": "PUSH",
											"source": 31,
											"value": "24"
										},
										{
											"begin": 16496,
											"end": 16514,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 16496,
											"end": 16514,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 16489,
											"end": 16519,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 16555,
											"end": 16580,
											"name": "PUSH",
											"source": 31,
											"value": "455243313136373A2063726561746532206661696C6564000000000000000000"
										},
										{
											"begin": 16535,
											"end": 16553,
											"name": "PUSH",
											"source": 31,
											"value": "44"
										},
										{
											"begin": 16535,
											"end": 16553,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 16535,
											"end": 16553,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 16528,
											"end": 16581,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 16598,
											"end": 16616,
											"name": "PUSH",
											"source": 31,
											"value": "64"
										},
										{
											"begin": 16598,
											"end": 16616,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 2333,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 16275,
											"end": 16622,
											"name": "JUMP",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "390"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "141"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "390"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "392"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "395"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "392"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "393"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "395"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "393"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "395"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "394"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "395"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "394"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "395"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "396"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "397"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "396"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "291"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "398"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "141"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "398"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "400"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "400"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "278"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "397"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "296"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "402"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "141"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "402"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "404"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "395"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "404"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "405"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "395"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "405"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "395"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "406"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "395"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "406"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "397"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "409"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "396"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "409"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 31,
											"value": "30"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 31
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 31
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 31
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 31
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "423"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 31
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 31
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 31,
											"value": "423"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 31
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 31
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "424"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 31
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 31
										},
										{
											"begin": 199,
											"end": 270,
											"name": "tag",
											"source": 31,
											"value": "424"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 31
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMP",
											"source": 31,
											"value": "[out]"
										},
										{
											"begin": 679,
											"end": 806,
											"name": "tag",
											"source": 31,
											"value": "332"
										},
										{
											"begin": 679,
											"end": 806,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 740,
											"end": 750,
											"name": "PUSH",
											"source": 31,
											"value": "4E487B71"
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 31,
											"value": "E0"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "SHL",
											"source": 31
										},
										{
											"begin": 728,
											"end": 729,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 721,
											"end": 752,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 771,
											"end": 775,
											"name": "PUSH",
											"source": 31,
											"value": "41"
										},
										{
											"begin": 768,
											"end": 769,
											"name": "PUSH",
											"source": 31,
											"value": "4"
										},
										{
											"begin": 761,
											"end": 776,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 795,
											"end": 799,
											"name": "PUSH",
											"source": 31,
											"value": "24"
										},
										{
											"begin": 792,
											"end": 793,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 800,
											"name": "REVERT",
											"source": 31
										},
										{
											"begin": 811,
											"end": 1086,
											"name": "tag",
											"source": 31,
											"value": "411"
										},
										{
											"begin": 811,
											"end": 1086,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 882,
											"end": 884,
											"name": "PUSH",
											"source": 31,
											"value": "40"
										},
										{
											"begin": 876,
											"end": 885,
											"name": "MLOAD",
											"source": 31
										},
										{
											"begin": 947,
											"end": 949,
											"name": "PUSH",
											"source": 31,
											"value": "1F"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 928,
											"end": 941,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 924,
											"end": 951,
											"name": "AND",
											"source": 31
										},
										{
											"begin": 912,
											"end": 952,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 912,
											"end": 952,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 982,
											"end": 1000,
											"name": "PUSH",
											"source": 31,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 967,
											"end": 1001,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 967,
											"end": 1001,
											"name": "GT",
											"source": 31
										},
										{
											"begin": 1003,
											"end": 1025,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 1003,
											"end": 1025,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 1003,
											"end": 1025,
											"name": "LT",
											"source": 31
										},
										{
											"begin": 964,
											"end": 1026,
											"name": "OR",
											"source": 31
										},
										{
											"begin": 961,
											"end": 1049,
											"name": "ISZERO",
											"source": 31
										},
										{
											"begin": 961,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "430"
										},
										{
											"begin": 961,
											"end": 1049,
											"name": "JUMPI",
											"source": 31
										},
										{
											"begin": 1029,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "430"
										},
										{
											"begin": 1029,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "332"
										},
										{
											"begin": 1029,
											"end": 1047,
											"name": "JUMP",
											"source": 31,
											"value": "[in]"
										},
										{
											"begin": 1029,
											"end": 1047,
											"name": "tag",
											"source": 31,
											"value": "430"
										},
										{
											"begin": 1029,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 1065,
											"end": 1067,
											"name": "PUSH",
											"source": 31,
											"value": "40"
										},
										{
											"begin": 1058,
											"end": 1080,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 811,
											"end": 1086,
											"name": "SWAP2",
											"source": 31
										},
										{
											"begin": 811,
											"end": 1086,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 811,
											"end": 1086,
											"name": "JUMP",
											"source": 31,
											"value": "[out]"
										},
										{
											"begin": 1091,
											"end": 1243,
											"name": "tag",
											"source": 31,
											"value": "412"
										},
										{
											"begin": 1091,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1187,
											"end": 1218,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 1187,
											"end": 1218,
											"name": "AND",
											"source": 31
										},
										{
											"begin": 1177,
											"end": 1219,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 1177,
											"end": 1219,
											"name": "EQ",
											"source": 31
										},
										{
											"begin": 1167,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "278"
										},
										{
											"begin": 1167,
											"end": 1237,
											"name": "JUMPI",
											"source": 31
										},
										{
											"begin": 1233,
											"end": 1234,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 1230,
											"end": 1231,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "REVERT",
											"source": 31
										},
										{
											"begin": 1248,
											"end": 2101,
											"name": "tag",
											"source": 31,
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 1339,
											"end": 1345,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1394,
											"name": "PUSH",
											"source": 31,
											"value": "60"
										},
										{
											"begin": 1380,
											"end": 1389,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 1371,
											"end": 1378,
											"name": "DUP5",
											"source": 31
										},
										{
											"begin": 1367,
											"end": 1390,
											"name": "SUB",
											"source": 31
										},
										{
											"begin": 1363,
											"end": 1395,
											"name": "SLT",
											"source": 31
										},
										{
											"begin": 1360,
											"end": 1412,
											"name": "ISZERO",
											"source": 31
										},
										{
											"begin": 1360,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "434"
										},
										{
											"begin": 1360,
											"end": 1412,
											"name": "JUMPI",
											"source": 31
										},
										{
											"begin": 1408,
											"end": 1409,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1406,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 1398,
											"end": 1410,
											"name": "REVERT",
											"source": 31
										},
										{
											"begin": 1360,
											"end": 1412,
											"name": "tag",
											"source": 31,
											"value": "434"
										},
										{
											"begin": 1360,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 1441,
											"end": 1443,
											"name": "PUSH",
											"source": 31,
											"value": "40"
										},
										{
											"begin": 1435,
											"end": 1444,
											"name": "MLOAD",
											"source": 31
										},
										{
											"begin": 1483,
											"end": 1485,
											"name": "PUSH",
											"source": 31,
											"value": "60"
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 1471,
											"end": 1486,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 1552,
											"end": 1558,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 1540,
											"end": 1550,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 1537,
											"end": 1559,
											"name": "LT",
											"source": 31
										},
										{
											"begin": 1516,
											"end": 1534,
											"name": "PUSH",
											"source": 31,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1504,
											"end": 1514,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 1501,
											"end": 1535,
											"name": "GT",
											"source": 31
										},
										{
											"begin": 1498,
											"end": 1560,
											"name": "OR",
											"source": 31
										},
										{
											"begin": 1495,
											"end": 1583,
											"name": "ISZERO",
											"source": 31
										},
										{
											"begin": 1495,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "436"
										},
										{
											"begin": 1495,
											"end": 1583,
											"name": "JUMPI",
											"source": 31
										},
										{
											"begin": 1563,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "436"
										},
										{
											"begin": 1563,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "332"
										},
										{
											"begin": 1563,
											"end": 1581,
											"name": "JUMP",
											"source": 31,
											"value": "[in]"
										},
										{
											"begin": 1563,
											"end": 1581,
											"name": "tag",
											"source": 31,
											"value": "436"
										},
										{
											"begin": 1563,
											"end": 1581,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 1599,
											"end": 1601,
											"name": "PUSH",
											"source": 31,
											"value": "40"
										},
										{
											"begin": 1592,
											"end": 1614,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 1636,
											"end": 1659,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 1636,
											"end": 1659,
											"name": "CALLDATALOAD",
											"source": 31
										},
										{
											"begin": 1668,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "437"
										},
										{
											"begin": 1636,
											"end": 1659,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 1668,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "412"
										},
										{
											"begin": 1668,
											"end": 1720,
											"name": "JUMP",
											"source": 31,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1720,
											"name": "tag",
											"source": 31,
											"value": "437"
										},
										{
											"begin": 1668,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 1729,
											"end": 1750,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 1729,
											"end": 1750,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 1802,
											"end": 1804,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 1787,
											"end": 1805,
											"name": "DUP4",
											"source": 31
										},
										{
											"begin": 1787,
											"end": 1805,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 1774,
											"end": 1806,
											"name": "CALLDATALOAD",
											"source": 31
										},
										{
											"begin": 1815,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "438"
										},
										{
											"begin": 1774,
											"end": 1806,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 1815,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "412"
										},
										{
											"begin": 1815,
											"end": 1869,
											"name": "JUMP",
											"source": 31,
											"value": "[in]"
										},
										{
											"begin": 1815,
											"end": 1869,
											"name": "tag",
											"source": 31,
											"value": "438"
										},
										{
											"begin": 1815,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 1897,
											"end": 1899,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 1885,
											"end": 1900,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 1885,
											"end": 1900,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 1878,
											"end": 1910,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 1962,
											"end": 1964,
											"name": "PUSH",
											"source": 31,
											"value": "40"
										},
										{
											"begin": 1947,
											"end": 1965,
											"name": "DUP4",
											"source": 31
										},
										{
											"begin": 1947,
											"end": 1965,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 1934,
											"end": 1966,
											"name": "CALLDATALOAD",
											"source": 31
										},
										{
											"begin": 1975,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "439"
										},
										{
											"begin": 1934,
											"end": 1966,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 1975,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "412"
										},
										{
											"begin": 1975,
											"end": 2029,
											"name": "JUMP",
											"source": 31,
											"value": "[in]"
										},
										{
											"begin": 1975,
											"end": 2029,
											"name": "tag",
											"source": 31,
											"value": "439"
										},
										{
											"begin": 1975,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 2057,
											"end": 2059,
											"name": "PUSH",
											"source": 31,
											"value": "40"
										},
										{
											"begin": 2045,
											"end": 2060,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 2045,
											"end": 2060,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 2038,
											"end": 2070,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 2049,
											"end": 2055,
											"name": "SWAP4",
											"source": 31
										},
										{
											"begin": 1248,
											"end": 2101,
											"name": "SWAP3",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 2101,
											"name": "JUMP",
											"source": 31,
											"value": "[out]"
										},
										{
											"begin": 2106,
											"end": 2286,
											"name": "tag",
											"source": 31,
											"value": "44"
										},
										{
											"begin": 2106,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 2165,
											"end": 2171,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 2218,
											"end": 2220,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 2206,
											"end": 2215,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 2197,
											"end": 2204,
											"name": "DUP5",
											"source": 31
										},
										{
											"begin": 2193,
											"end": 2216,
											"name": "SUB",
											"source": 31
										},
										{
											"begin": 2189,
											"end": 2221,
											"name": "SLT",
											"source": 31
										},
										{
											"begin": 2186,
											"end": 2238,
											"name": "ISZERO",
											"source": 31
										},
										{
											"begin": 2186,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "441"
										},
										{
											"begin": 2186,
											"end": 2238,
											"name": "JUMPI",
											"source": 31
										},
										{
											"begin": 2234,
											"end": 2235,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 2231,
											"end": 2232,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 2224,
											"end": 2236,
											"name": "REVERT",
											"source": 31
										},
										{
											"begin": 2186,
											"end": 2238,
											"name": "tag",
											"source": 31,
											"value": "441"
										},
										{
											"begin": 2186,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2257,
											"end": 2280,
											"name": "CALLDATALOAD",
											"source": 31
										},
										{
											"begin": 2257,
											"end": 2280,
											"name": "SWAP2",
											"source": 31
										},
										{
											"begin": 2106,
											"end": 2286,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2106,
											"end": 2286,
											"name": "JUMP",
											"source": 31,
											"value": "[out]"
										},
										{
											"begin": 2473,
											"end": 2823,
											"name": "tag",
											"source": 31,
											"value": "55"
										},
										{
											"begin": 2473,
											"end": 2823,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 2582,
											"end": 2588,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2596,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 2625,
											"end": 2632,
											"name": "DUP5",
											"source": 31
										},
										{
											"begin": 2621,
											"end": 2644,
											"name": "SUB",
											"source": 31
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 31,
											"value": "40"
										},
										{
											"begin": 2660,
											"end": 2662,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 2656,
											"end": 2667,
											"name": "SLT",
											"source": 31
										},
										{
											"begin": 2653,
											"end": 2684,
											"name": "ISZERO",
											"source": 31
										},
										{
											"begin": 2653,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "444"
										},
										{
											"begin": 2653,
											"end": 2684,
											"name": "JUMPI",
											"source": 31
										},
										{
											"begin": 2680,
											"end": 2681,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 2677,
											"end": 2678,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 2670,
											"end": 2682,
											"name": "REVERT",
											"source": 31
										},
										{
											"begin": 2653,
											"end": 2684,
											"name": "tag",
											"source": 31,
											"value": "444"
										},
										{
											"begin": 2653,
											"end": 2684,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 2703,
											"end": 2726,
											"name": "DUP4",
											"source": 31
										},
										{
											"begin": 2703,
											"end": 2726,
											"name": "CALLDATALOAD",
											"source": 31
										},
										{
											"begin": 2703,
											"end": 2726,
											"name": "SWAP3",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2760,
											"end": 2762,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2742,
											"end": 2758,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 2742,
											"end": 2758,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 2738,
											"end": 2763,
											"name": "SLT",
											"source": 31
										},
										{
											"begin": 2735,
											"end": 2780,
											"name": "ISZERO",
											"source": 31
										},
										{
											"begin": 2735,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "445"
										},
										{
											"begin": 2735,
											"end": 2780,
											"name": "JUMPI",
											"source": 31
										},
										{
											"begin": 2776,
											"end": 2777,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2774,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 2766,
											"end": 2778,
											"name": "REVERT",
											"source": 31
										},
										{
											"begin": 2735,
											"end": 2780,
											"name": "tag",
											"source": 31,
											"value": "445"
										},
										{
											"begin": 2735,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 2735,
											"end": 2780,
											"name": "POP",
											"source": 31
										},
										{
											"begin": 2814,
											"end": 2816,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 2803,
											"end": 2812,
											"name": "DUP4",
											"source": 31
										},
										{
											"begin": 2799,
											"end": 2817,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 2789,
											"end": 2817,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 2789,
											"end": 2817,
											"name": "POP",
											"source": 31
										},
										{
											"begin": 2473,
											"end": 2823,
											"name": "SWAP3",
											"source": 31
										},
										{
											"begin": 2473,
											"end": 2823,
											"name": "POP",
											"source": 31
										},
										{
											"begin": 2473,
											"end": 2823,
											"name": "SWAP3",
											"source": 31
										},
										{
											"begin": 2473,
											"end": 2823,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 2473,
											"end": 2823,
											"name": "POP",
											"source": 31
										},
										{
											"begin": 2473,
											"end": 2823,
											"name": "JUMP",
											"source": 31,
											"value": "[out]"
										},
										{
											"begin": 3112,
											"end": 3267,
											"name": "tag",
											"source": 31,
											"value": "413"
										},
										{
											"begin": 3112,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 3180,
											"end": 3200,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 3180,
											"end": 3200,
											"name": "CALLDATALOAD",
											"source": 31
										},
										{
											"begin": 3209,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "448"
										},
										{
											"begin": 3180,
											"end": 3200,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 3209,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "412"
										},
										{
											"begin": 3209,
											"end": 3261,
											"name": "JUMP",
											"source": 31,
											"value": "[in]"
										},
										{
											"begin": 3209,
											"end": 3261,
											"name": "tag",
											"source": 31,
											"value": "448"
										},
										{
											"begin": 3209,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 3112,
											"end": 3267,
											"name": "SWAP2",
											"source": 31
										},
										{
											"begin": 3112,
											"end": 3267,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 3112,
											"end": 3267,
											"name": "POP",
											"source": 31
										},
										{
											"begin": 3112,
											"end": 3267,
											"name": "JUMP",
											"source": 31,
											"value": "[out]"
										},
										{
											"begin": 3272,
											"end": 3433,
											"name": "tag",
											"source": 31,
											"value": "414"
										},
										{
											"begin": 3272,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 3339,
											"end": 3359,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 3339,
											"end": 3359,
											"name": "CALLDATALOAD",
											"source": 31
										},
										{
											"begin": 3399,
											"end": 3407,
											"name": "PUSH",
											"source": 31,
											"value": "FFFFFF"
										},
										{
											"begin": 3388,
											"end": 3408,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 3388,
											"end": 3408,
											"name": "AND",
											"source": 31
										},
										{
											"begin": 3378,
											"end": 3409,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 3378,
											"end": 3409,
											"name": "EQ",
											"source": 31
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "448"
										},
										{
											"begin": 3368,
											"end": 3427,
											"name": "JUMPI",
											"source": 31
										},
										{
											"begin": 3423,
											"end": 3424,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 3420,
											"end": 3421,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 3413,
											"end": 3425,
											"name": "REVERT",
											"source": 31
										},
										{
											"begin": 3438,
											"end": 4703,
											"name": "tag",
											"source": 31,
											"value": "68"
										},
										{
											"begin": 3438,
											"end": 4703,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 3548,
											"end": 3554,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 3556,
											"end": 3562,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 3564,
											"end": 3570,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 3572,
											"end": 3578,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 3625,
											"end": 3628,
											"name": "PUSH",
											"source": 31,
											"value": "80"
										},
										{
											"begin": 3613,
											"end": 3622,
											"name": "DUP6",
											"source": 31
										},
										{
											"begin": 3604,
											"end": 3611,
											"name": "DUP8",
											"source": 31
										},
										{
											"begin": 3600,
											"end": 3623,
											"name": "SUB",
											"source": 31
										},
										{
											"begin": 3596,
											"end": 3629,
											"name": "SLT",
											"source": 31
										},
										{
											"begin": 3593,
											"end": 3646,
											"name": "ISZERO",
											"source": 31
										},
										{
											"begin": 3593,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "452"
										},
										{
											"begin": 3593,
											"end": 3646,
											"name": "JUMPI",
											"source": 31
										},
										{
											"begin": 3642,
											"end": 3643,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 3639,
											"end": 3640,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 3632,
											"end": 3644,
											"name": "REVERT",
											"source": 31
										},
										{
											"begin": 3593,
											"end": 3646,
											"name": "tag",
											"source": 31,
											"value": "452"
										},
										{
											"begin": 3593,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 3682,
											"end": 3691,
											"name": "DUP5",
											"source": 31
										},
										{
											"begin": 3669,
											"end": 3692,
											"name": "CALLDATALOAD",
											"source": 31
										},
										{
											"begin": 3711,
											"end": 3729,
											"name": "PUSH",
											"source": 31,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3752,
											"end": 3754,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 3744,
											"end": 3750,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 3741,
											"end": 3755,
											"name": "GT",
											"source": 31
										},
										{
											"begin": 3738,
											"end": 3772,
											"name": "ISZERO",
											"source": 31
										},
										{
											"begin": 3738,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "453"
										},
										{
											"begin": 3738,
											"end": 3772,
											"name": "JUMPI",
											"source": 31
										},
										{
											"begin": 3768,
											"end": 3769,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 3765,
											"end": 3766,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 3758,
											"end": 3770,
											"name": "REVERT",
											"source": 31
										},
										{
											"begin": 3738,
											"end": 3772,
											"name": "tag",
											"source": 31,
											"value": "453"
										},
										{
											"begin": 3738,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 3806,
											"end": 3812,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 3795,
											"end": 3804,
											"name": "DUP8",
											"source": 31
										},
										{
											"begin": 3791,
											"end": 3813,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 3781,
											"end": 3813,
											"name": "SWAP2",
											"source": 31
										},
										{
											"begin": 3781,
											"end": 3813,
											"name": "POP",
											"source": 31
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "DUP8",
											"source": 31
										},
										{
											"begin": 3844,
											"end": 3848,
											"name": "PUSH",
											"source": 31,
											"value": "1F"
										},
										{
											"begin": 3840,
											"end": 3842,
											"name": "DUP4",
											"source": 31
										},
										{
											"begin": 3836,
											"end": 3849,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 3832,
											"end": 3859,
											"name": "SLT",
											"source": 31
										},
										{
											"begin": 3822,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "454"
										},
										{
											"begin": 3822,
											"end": 3877,
											"name": "JUMPI",
											"source": 31
										},
										{
											"begin": 3873,
											"end": 3874,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 3870,
											"end": 3871,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 3863,
											"end": 3875,
											"name": "REVERT",
											"source": 31
										},
										{
											"begin": 3822,
											"end": 3877,
											"name": "tag",
											"source": 31,
											"value": "454"
										},
										{
											"begin": 3822,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 3909,
											"end": 3911,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 3896,
											"end": 3912,
											"name": "CALLDATALOAD",
											"source": 31
										},
										{
											"begin": 3931,
											"end": 3935,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 3954,
											"end": 3956,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 3950,
											"end": 3952,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 3947,
											"end": 3957,
											"name": "GT",
											"source": 31
										},
										{
											"begin": 3944,
											"end": 3980,
											"name": "ISZERO",
											"source": 31
										},
										{
											"begin": 3944,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "456"
										},
										{
											"begin": 3944,
											"end": 3980,
											"name": "JUMPI",
											"source": 31
										},
										{
											"begin": 3960,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "456"
										},
										{
											"begin": 3960,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "332"
										},
										{
											"begin": 3960,
											"end": 3978,
											"name": "JUMP",
											"source": 31,
											"value": "[in]"
										},
										{
											"begin": 3960,
											"end": 3978,
											"name": "tag",
											"source": 31,
											"value": "456"
										},
										{
											"begin": 3960,
											"end": 3978,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 4006,
											"end": 4008,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 4003,
											"end": 4004,
											"name": "PUSH",
											"source": 31,
											"value": "5"
										},
										{
											"begin": 3999,
											"end": 4009,
											"name": "SHL",
											"source": 31
										},
										{
											"begin": 3989,
											"end": 4009,
											"name": "SWAP3",
											"source": 31
										},
										{
											"begin": 3989,
											"end": 4009,
											"name": "POP",
											"source": 31
										},
										{
											"begin": 4029,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "457"
										},
										{
											"begin": 4053,
											"end": 4055,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 4049,
											"end": 4051,
											"name": "DUP5",
											"source": 31
										},
										{
											"begin": 4045,
											"end": 4056,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 4029,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "411"
										},
										{
											"begin": 4029,
											"end": 4057,
											"name": "JUMP",
											"source": 31,
											"value": "[in]"
										},
										{
											"begin": 4029,
											"end": 4057,
											"name": "tag",
											"source": 31,
											"value": "457"
										},
										{
											"begin": 4029,
											"end": 4057,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 4091,
											"end": 4106,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 4091,
											"end": 4106,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 4091,
											"end": 4106,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 4161,
											"end": 4172,
											"name": "SWAP3",
											"source": 31
										},
										{
											"begin": 4161,
											"end": 4172,
											"name": "DUP5",
											"source": 31
										},
										{
											"begin": 4161,
											"end": 4172,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 4157,
											"end": 4177,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 4157,
											"end": 4177,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 4157,
											"end": 4177,
											"name": "SWAP3",
											"source": 31
										},
										{
											"begin": 4122,
											"end": 4134,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 4122,
											"end": 4134,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 4122,
											"end": 4134,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 4122,
											"end": 4134,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 4189,
											"end": 4208,
											"name": "DUP12",
											"source": 31
										},
										{
											"begin": 4189,
											"end": 4208,
											"name": "DUP6",
											"source": 31
										},
										{
											"begin": 4189,
											"end": 4208,
											"name": "GT",
											"source": 31
										},
										{
											"begin": 4186,
											"end": 4225,
											"name": "ISZERO",
											"source": 31
										},
										{
											"begin": 4186,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "458"
										},
										{
											"begin": 4186,
											"end": 4225,
											"name": "JUMPI",
											"source": 31
										},
										{
											"begin": 4221,
											"end": 4222,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 4218,
											"end": 4219,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 4211,
											"end": 4223,
											"name": "REVERT",
											"source": 31
										},
										{
											"begin": 4186,
											"end": 4225,
											"name": "tag",
											"source": 31,
											"value": "458"
										},
										{
											"begin": 4186,
											"end": 4225,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 4245,
											"end": 4256,
											"name": "SWAP5",
											"source": 31
										},
										{
											"begin": 4245,
											"end": 4256,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 4245,
											"end": 4256,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 4245,
											"end": 4256,
											"name": "SWAP5",
											"source": 31
										},
										{
											"begin": 4265,
											"end": 4503,
											"name": "tag",
											"source": 31,
											"value": "459"
										},
										{
											"begin": 4265,
											"end": 4503,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 4281,
											"end": 4287,
											"name": "DUP5",
											"source": 31
										},
										{
											"begin": 4276,
											"end": 4279,
											"name": "DUP7",
											"source": 31
										},
										{
											"begin": 4273,
											"end": 4288,
											"name": "LT",
											"source": 31
										},
										{
											"begin": 4265,
											"end": 4503,
											"name": "ISZERO",
											"source": 31
										},
										{
											"begin": 4265,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "461"
										},
										{
											"begin": 4265,
											"end": 4503,
											"name": "JUMPI",
											"source": 31
										},
										{
											"begin": 4361,
											"end": 4364,
											"name": "DUP6",
											"source": 31
										},
										{
											"begin": 4348,
											"end": 4365,
											"name": "CALLDATALOAD",
											"source": 31
										},
										{
											"begin": 4335,
											"end": 4365,
											"name": "SWAP4",
											"source": 31
										},
										{
											"begin": 4335,
											"end": 4365,
											"name": "POP",
											"source": 31
										},
										{
											"begin": 4378,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "462"
										},
										{
											"begin": 4424,
											"end": 4429,
											"name": "DUP5",
											"source": 31
										},
										{
											"begin": 4378,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "412"
										},
										{
											"begin": 4378,
											"end": 4430,
											"name": "JUMP",
											"source": 31,
											"value": "[in]"
										},
										{
											"begin": 4378,
											"end": 4430,
											"name": "tag",
											"source": 31,
											"value": "462"
										},
										{
											"begin": 4378,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 4443,
											"end": 4461,
											"name": "DUP4",
											"source": 31
										},
										{
											"begin": 4443,
											"end": 4461,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 4443,
											"end": 4461,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 4298,
											"end": 4310,
											"name": "SWAP5",
											"source": 31
										},
										{
											"begin": 4298,
											"end": 4310,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 4298,
											"end": 4310,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 4298,
											"end": 4310,
											"name": "SWAP5",
											"source": 31
										},
										{
											"begin": 4481,
											"end": 4493,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 4481,
											"end": 4493,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 4481,
											"end": 4493,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 4481,
											"end": 4493,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 4265,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "459"
										},
										{
											"begin": 4265,
											"end": 4503,
											"name": "JUMP",
											"source": 31
										},
										{
											"begin": 4265,
											"end": 4503,
											"name": "tag",
											"source": 31,
											"value": "461"
										},
										{
											"begin": 4265,
											"end": 4503,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 4522,
											"end": 4527,
											"name": "SWAP9",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4546,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "463"
										},
										{
											"begin": 4546,
											"end": 4584,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4565,
											"end": 4583,
											"name": "DUP10",
											"source": 31
										},
										{
											"begin": 4565,
											"end": 4583,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 4565,
											"end": 4583,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 4546,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "413"
										},
										{
											"begin": 4546,
											"end": 4584,
											"name": "JUMP",
											"source": 31,
											"value": "[in]"
										},
										{
											"begin": 4546,
											"end": 4584,
											"name": "tag",
											"source": 31,
											"value": "463"
										},
										{
											"begin": 4546,
											"end": 4584,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 4536,
											"end": 4584,
											"name": "SWAP7",
											"source": 31
										},
										{
											"begin": 4536,
											"end": 4584,
											"name": "POP",
											"source": 31
										},
										{
											"begin": 4536,
											"end": 4584,
											"name": "POP",
											"source": 31
										},
										{
											"begin": 4536,
											"end": 4584,
											"name": "POP",
											"source": 31
										},
										{
											"begin": 4536,
											"end": 4584,
											"name": "POP",
											"source": 31
										},
										{
											"begin": 4536,
											"end": 4584,
											"name": "POP",
											"source": 31
										},
										{
											"begin": 4603,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "464"
										},
										{
											"begin": 4636,
											"end": 4638,
											"name": "PUSH",
											"source": 31,
											"value": "40"
										},
										{
											"begin": 4625,
											"end": 4634,
											"name": "DUP7",
											"source": 31
										},
										{
											"begin": 4621,
											"end": 4639,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 4603,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "414"
										},
										{
											"begin": 4603,
											"end": 4640,
											"name": "JUMP",
											"source": 31,
											"value": "[in]"
										},
										{
											"begin": 4603,
											"end": 4640,
											"name": "tag",
											"source": 31,
											"value": "464"
										},
										{
											"begin": 4603,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 4593,
											"end": 4640,
											"name": "SWAP2",
											"source": 31
										},
										{
											"begin": 4593,
											"end": 4640,
											"name": "POP",
											"source": 31
										},
										{
											"begin": 4659,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "465"
										},
										{
											"begin": 4693,
											"end": 4695,
											"name": "PUSH",
											"source": 31,
											"value": "60"
										},
										{
											"begin": 4682,
											"end": 4691,
											"name": "DUP7",
											"source": 31
										},
										{
											"begin": 4678,
											"end": 4696,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 4659,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "413"
										},
										{
											"begin": 4659,
											"end": 4697,
											"name": "JUMP",
											"source": 31,
											"value": "[in]"
										},
										{
											"begin": 4659,
											"end": 4697,
											"name": "tag",
											"source": 31,
											"value": "465"
										},
										{
											"begin": 4659,
											"end": 4697,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 4649,
											"end": 4697,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 4649,
											"end": 4697,
											"name": "POP",
											"source": 31
										},
										{
											"begin": 3438,
											"end": 4703,
											"name": "SWAP3",
											"source": 31
										},
										{
											"begin": 3438,
											"end": 4703,
											"name": "SWAP6",
											"source": 31
										},
										{
											"begin": 3438,
											"end": 4703,
											"name": "SWAP2",
											"source": 31
										},
										{
											"begin": 3438,
											"end": 4703,
											"name": "SWAP5",
											"source": 31
										},
										{
											"begin": 3438,
											"end": 4703,
											"name": "POP",
											"source": 31
										},
										{
											"begin": 3438,
											"end": 4703,
											"name": "SWAP3",
											"source": 31
										},
										{
											"begin": 3438,
											"end": 4703,
											"name": "POP",
											"source": 31
										},
										{
											"begin": 3438,
											"end": 4703,
											"name": "JUMP",
											"source": 31,
											"value": "[out]"
										},
										{
											"begin": 5007,
											"end": 5479,
											"name": "tag",
											"source": 31,
											"value": "415"
										},
										{
											"begin": 5007,
											"end": 5479,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 5049,
											"end": 5052,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 5087,
											"end": 5092,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 5081,
											"end": 5093,
											"name": "MLOAD",
											"source": 31
										},
										{
											"begin": 5114,
											"end": 5120,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 5109,
											"end": 5112,
											"name": "DUP5",
											"source": 31
										},
										{
											"begin": 5102,
											"end": 5121,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 5139,
											"end": 5140,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 5149,
											"end": 5311,
											"name": "tag",
											"source": 31,
											"value": "468"
										},
										{
											"begin": 5149,
											"end": 5311,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 5163,
											"end": 5169,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 5160,
											"end": 5161,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 5157,
											"end": 5170,
											"name": "LT",
											"source": 31
										},
										{
											"begin": 5149,
											"end": 5311,
											"name": "ISZERO",
											"source": 31
										},
										{
											"begin": 5149,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "470"
										},
										{
											"begin": 5149,
											"end": 5311,
											"name": "JUMPI",
											"source": 31
										},
										{
											"begin": 5225,
											"end": 5229,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 5281,
											"end": 5294,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 5281,
											"end": 5294,
											"name": "DUP6",
											"source": 31
										},
										{
											"begin": 5281,
											"end": 5294,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 5277,
											"end": 5299,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 5277,
											"end": 5299,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 5271,
											"end": 5300,
											"name": "MLOAD",
											"source": 31
										},
										{
											"begin": 5253,
											"end": 5264,
											"name": "DUP7",
											"source": 31
										},
										{
											"begin": 5253,
											"end": 5264,
											"name": "DUP4",
											"source": 31
										},
										{
											"begin": 5253,
											"end": 5264,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 5249,
											"end": 5269,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 5249,
											"end": 5269,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 5242,
											"end": 5301,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 5178,
											"end": 5190,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 5149,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "468"
										},
										{
											"begin": 5149,
											"end": 5311,
											"name": "JUMP",
											"source": 31
										},
										{
											"begin": 5149,
											"end": 5311,
											"name": "tag",
											"source": 31,
											"value": "470"
										},
										{
											"begin": 5149,
											"end": 5311,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 5329,
											"end": 5335,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 5326,
											"end": 5327,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 5323,
											"end": 5336,
											"name": "GT",
											"source": 31
										},
										{
											"begin": 5320,
											"end": 5407,
											"name": "ISZERO",
											"source": 31
										},
										{
											"begin": 5320,
											"end": 5407,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "471"
										},
										{
											"begin": 5320,
											"end": 5407,
											"name": "JUMPI",
											"source": 31
										},
										{
											"begin": 5395,
											"end": 5396,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 5388,
											"end": 5392,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 5379,
											"end": 5385,
											"name": "DUP4",
											"source": 31
										},
										{
											"begin": 5374,
											"end": 5377,
											"name": "DUP8",
											"source": 31
										},
										{
											"begin": 5370,
											"end": 5386,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 5366,
											"end": 5393,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 5359,
											"end": 5397,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 5320,
											"end": 5407,
											"name": "tag",
											"source": 31,
											"value": "471"
										},
										{
											"begin": 5320,
											"end": 5407,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5461,
											"end": 5463,
											"name": "PUSH",
											"source": 31,
											"value": "1F"
										},
										{
											"begin": 5440,
											"end": 5455,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5436,
											"end": 5465,
											"name": "AND",
											"source": 31
										},
										{
											"begin": 5427,
											"end": 5466,
											"name": "SWAP3",
											"source": 31
										},
										{
											"begin": 5427,
											"end": 5466,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 5427,
											"end": 5466,
											"name": "SWAP3",
											"source": 31
										},
										{
											"begin": 5427,
											"end": 5466,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 5468,
											"end": 5472,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 5423,
											"end": 5473,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 5423,
											"end": 5473,
											"name": "SWAP3",
											"source": 31
										},
										{
											"begin": 5007,
											"end": 5479,
											"name": "SWAP2",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5007,
											"end": 5479,
											"name": "JUMP",
											"source": 31,
											"value": "[out]"
										},
										{
											"begin": 5484,
											"end": 5704,
											"name": "tag",
											"source": 31,
											"value": "79"
										},
										{
											"begin": 5484,
											"end": 5704,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 5633,
											"end": 5635,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 5622,
											"end": 5631,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 5615,
											"end": 5636,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 5596,
											"end": 5600,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 5653,
											"end": 5698,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "424"
										},
										{
											"begin": 5694,
											"end": 5696,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 5683,
											"end": 5692,
											"name": "DUP4",
											"source": 31
										},
										{
											"begin": 5679,
											"end": 5697,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 5671,
											"end": 5677,
											"name": "DUP5",
											"source": 31
										},
										{
											"begin": 5653,
											"end": 5698,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "415"
										},
										{
											"begin": 5653,
											"end": 5698,
											"name": "JUMP",
											"source": 31,
											"value": "[in]"
										},
										{
											"begin": 5990,
											"end": 6257,
											"name": "tag",
											"source": 31,
											"value": "83"
										},
										{
											"begin": 5990,
											"end": 6257,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 6188,
											"end": 6190,
											"name": "PUSH",
											"source": 31,
											"value": "60"
										},
										{
											"begin": 6173,
											"end": 6191,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 6173,
											"end": 6191,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 6200,
											"end": 6251,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "115"
										},
										{
											"begin": 6177,
											"end": 6186,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 6233,
											"end": 6239,
											"name": "DUP5",
											"source": 31
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "MLOAD",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5827,
											"end": 5848,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 5827,
											"end": 5848,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 5827,
											"end": 5848,
											"name": "AND",
											"source": 31
										},
										{
											"begin": 5815,
											"end": 5849,
											"name": "DUP4",
											"source": 31
										},
										{
											"begin": 5815,
											"end": 5849,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 5902,
											"end": 5906,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 5891,
											"end": 5907,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 5891,
											"end": 5907,
											"name": "DUP4",
											"source": 31
										},
										{
											"begin": 5891,
											"end": 5907,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 5885,
											"end": 5908,
											"name": "MLOAD",
											"source": 31
										},
										{
											"begin": 5881,
											"end": 5913,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 5881,
											"end": 5913,
											"name": "AND",
											"source": 31
										},
										{
											"begin": 5865,
											"end": 5879,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 5865,
											"end": 5879,
											"name": "DUP5",
											"source": 31
										},
										{
											"begin": 5865,
											"end": 5879,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 5858,
											"end": 5914,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 5967,
											"end": 5971,
											"name": "PUSH",
											"source": 31,
											"value": "40"
										},
										{
											"begin": 5956,
											"end": 5972,
											"name": "SWAP2",
											"source": 31
										},
										{
											"begin": 5956,
											"end": 5972,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 5956,
											"end": 5972,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 5950,
											"end": 5973,
											"name": "MLOAD",
											"source": 31
										},
										{
											"begin": 5946,
											"end": 5978,
											"name": "AND",
											"source": 31
										},
										{
											"begin": 5930,
											"end": 5944,
											"name": "SWAP2",
											"source": 31
										},
										{
											"begin": 5930,
											"end": 5944,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 5923,
											"end": 5979,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 5709,
											"end": 5985,
											"name": "JUMP",
											"source": 31
										},
										{
											"begin": 6262,
											"end": 6469,
											"name": "tag",
											"source": 31,
											"value": "98"
										},
										{
											"begin": 6262,
											"end": 6469,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 6362,
											"end": 6368,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 6415,
											"end": 6417,
											"name": "PUSH",
											"source": 31,
											"value": "40"
										},
										{
											"begin": 6403,
											"end": 6412,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 6394,
											"end": 6401,
											"name": "DUP5",
											"source": 31
										},
										{
											"begin": 6390,
											"end": 6413,
											"name": "SUB",
											"source": 31
										},
										{
											"begin": 6386,
											"end": 6418,
											"name": "SLT",
											"source": 31
										},
										{
											"begin": 6383,
											"end": 6435,
											"name": "ISZERO",
											"source": 31
										},
										{
											"begin": 6383,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "478"
										},
										{
											"begin": 6383,
											"end": 6435,
											"name": "JUMPI",
											"source": 31
										},
										{
											"begin": 6431,
											"end": 6432,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 6428,
											"end": 6429,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 6421,
											"end": 6433,
											"name": "REVERT",
											"source": 31
										},
										{
											"begin": 6383,
											"end": 6435,
											"name": "tag",
											"source": 31,
											"value": "478"
										},
										{
											"begin": 6383,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6454,
											"end": 6463,
											"name": "SWAP2",
											"source": 31
										},
										{
											"begin": 6262,
											"end": 6469,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6262,
											"end": 6469,
											"name": "JUMP",
											"source": 31,
											"value": "[out]"
										},
										{
											"begin": 6860,
											"end": 7044,
											"name": "tag",
											"source": 31,
											"value": "132"
										},
										{
											"begin": 6860,
											"end": 7044,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 6930,
											"end": 6936,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 6983,
											"end": 6985,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 6971,
											"end": 6980,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 6962,
											"end": 6969,
											"name": "DUP5",
											"source": 31
										},
										{
											"begin": 6958,
											"end": 6981,
											"name": "SUB",
											"source": 31
										},
										{
											"begin": 6954,
											"end": 6986,
											"name": "SLT",
											"source": 31
										},
										{
											"begin": 6951,
											"end": 7003,
											"name": "ISZERO",
											"source": 31
										},
										{
											"begin": 6951,
											"end": 7003,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "481"
										},
										{
											"begin": 6951,
											"end": 7003,
											"name": "JUMPI",
											"source": 31
										},
										{
											"begin": 6999,
											"end": 7000,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 6996,
											"end": 6997,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 6989,
											"end": 7001,
											"name": "REVERT",
											"source": 31
										},
										{
											"begin": 6951,
											"end": 7003,
											"name": "tag",
											"source": 31,
											"value": "481"
										},
										{
											"begin": 6951,
											"end": 7003,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7022,
											"end": 7038,
											"name": "MLOAD",
											"source": 31
										},
										{
											"begin": 7022,
											"end": 7038,
											"name": "SWAP2",
											"source": 31
										},
										{
											"begin": 6860,
											"end": 7044,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6860,
											"end": 7044,
											"name": "JUMP",
											"source": 31,
											"value": "[out]"
										},
										{
											"begin": 7049,
											"end": 7176,
											"name": "tag",
											"source": 31,
											"value": "417"
										},
										{
											"begin": 7049,
											"end": 7176,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 7110,
											"end": 7120,
											"name": "PUSH",
											"source": 31,
											"value": "4E487B71"
										},
										{
											"begin": 7105,
											"end": 7108,
											"name": "PUSH",
											"source": 31,
											"value": "E0"
										},
										{
											"begin": 7101,
											"end": 7121,
											"name": "SHL",
											"source": 31
										},
										{
											"begin": 7098,
											"end": 7099,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 7091,
											"end": 7122,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 7141,
											"end": 7145,
											"name": "PUSH",
											"source": 31,
											"value": "11"
										},
										{
											"begin": 7138,
											"end": 7139,
											"name": "PUSH",
											"source": 31,
											"value": "4"
										},
										{
											"begin": 7131,
											"end": 7146,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 7165,
											"end": 7169,
											"name": "PUSH",
											"source": 31,
											"value": "24"
										},
										{
											"begin": 7162,
											"end": 7163,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 7155,
											"end": 7170,
											"name": "REVERT",
											"source": 31
										},
										{
											"begin": 7181,
											"end": 7309,
											"name": "tag",
											"source": 31,
											"value": "134"
										},
										{
											"begin": 7181,
											"end": 7309,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 7221,
											"end": 7224,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7253,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 7248,
											"end": 7254,
											"name": "NOT",
											"source": 31
										},
										{
											"begin": 7245,
											"end": 7246,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 7242,
											"end": 7255,
											"name": "GT",
											"source": 31
										},
										{
											"begin": 7239,
											"end": 7278,
											"name": "ISZERO",
											"source": 31
										},
										{
											"begin": 7239,
											"end": 7278,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "485"
										},
										{
											"begin": 7239,
											"end": 7278,
											"name": "JUMPI",
											"source": 31
										},
										{
											"begin": 7258,
											"end": 7276,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "485"
										},
										{
											"begin": 7258,
											"end": 7276,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "417"
										},
										{
											"begin": 7258,
											"end": 7276,
											"name": "JUMP",
											"source": 31,
											"value": "[in]"
										},
										{
											"begin": 7258,
											"end": 7276,
											"name": "tag",
											"source": 31,
											"value": "485"
										},
										{
											"begin": 7258,
											"end": 7276,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7294,
											"end": 7303,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 7294,
											"end": 7303,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 7181,
											"end": 7309,
											"name": "JUMP",
											"source": 31,
											"value": "[out]"
										},
										{
											"begin": 7314,
											"end": 7653,
											"name": "tag",
											"source": 31,
											"value": "136"
										},
										{
											"begin": 7314,
											"end": 7653,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 7540,
											"end": 7543,
											"name": "PUSH",
											"source": 31,
											"value": "80"
										},
										{
											"begin": 7525,
											"end": 7544,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 7525,
											"end": 7544,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 7553,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "487"
										},
										{
											"begin": 7529,
											"end": 7538,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 7586,
											"end": 7592,
											"name": "DUP6",
											"source": 31
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "MLOAD",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5827,
											"end": 5848,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 5827,
											"end": 5848,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 5827,
											"end": 5848,
											"name": "AND",
											"source": 31
										},
										{
											"begin": 5815,
											"end": 5849,
											"name": "DUP4",
											"source": 31
										},
										{
											"begin": 5815,
											"end": 5849,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 5902,
											"end": 5906,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 5891,
											"end": 5907,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 5891,
											"end": 5907,
											"name": "DUP4",
											"source": 31
										},
										{
											"begin": 5891,
											"end": 5907,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 5885,
											"end": 5908,
											"name": "MLOAD",
											"source": 31
										},
										{
											"begin": 5881,
											"end": 5913,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 5881,
											"end": 5913,
											"name": "AND",
											"source": 31
										},
										{
											"begin": 5865,
											"end": 5879,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 5865,
											"end": 5879,
											"name": "DUP5",
											"source": 31
										},
										{
											"begin": 5865,
											"end": 5879,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 5858,
											"end": 5914,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 5967,
											"end": 5971,
											"name": "PUSH",
											"source": 31,
											"value": "40"
										},
										{
											"begin": 5956,
											"end": 5972,
											"name": "SWAP2",
											"source": 31
										},
										{
											"begin": 5956,
											"end": 5972,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 5956,
											"end": 5972,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 5950,
											"end": 5973,
											"name": "MLOAD",
											"source": 31
										},
										{
											"begin": 5946,
											"end": 5978,
											"name": "AND",
											"source": 31
										},
										{
											"begin": 5930,
											"end": 5944,
											"name": "SWAP2",
											"source": 31
										},
										{
											"begin": 5930,
											"end": 5944,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 5923,
											"end": 5979,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 5709,
											"end": 5985,
											"name": "JUMP",
											"source": 31
										},
										{
											"begin": 7553,
											"end": 7604,
											"name": "tag",
											"source": 31,
											"value": "487"
										},
										{
											"begin": 7553,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 7640,
											"end": 7646,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 7635,
											"end": 7637,
											"name": "PUSH",
											"source": 31,
											"value": "60"
										},
										{
											"begin": 7624,
											"end": 7633,
											"name": "DUP4",
											"source": 31
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 7613,
											"end": 7647,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 7314,
											"end": 7653,
											"name": "SWAP4",
											"source": 31
										},
										{
											"begin": 7314,
											"end": 7653,
											"name": "SWAP3",
											"source": 31
										},
										{
											"begin": 7314,
											"end": 7653,
											"name": "POP",
											"source": 31
										},
										{
											"begin": 7314,
											"end": 7653,
											"name": "POP",
											"source": 31
										},
										{
											"begin": 7314,
											"end": 7653,
											"name": "POP",
											"source": 31
										},
										{
											"begin": 7314,
											"end": 7653,
											"name": "JUMP",
											"source": 31,
											"value": "[out]"
										},
										{
											"begin": 7658,
											"end": 8038,
											"name": "tag",
											"source": 31,
											"value": "141"
										},
										{
											"begin": 7658,
											"end": 8038,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 7737,
											"end": 7738,
											"name": "PUSH",
											"source": 31,
											"value": "1"
										},
										{
											"begin": 7733,
											"end": 7745,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 7733,
											"end": 7745,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 7733,
											"end": 7745,
											"name": "SHR",
											"source": 31
										},
										{
											"begin": 7733,
											"end": 7745,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 7780,
											"end": 7792,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 7780,
											"end": 7792,
											"name": "AND",
											"source": 31
										},
										{
											"begin": 7780,
											"end": 7792,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 7801,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "489"
										},
										{
											"begin": 7801,
											"end": 7862,
											"name": "JUMPI",
											"source": 31
										},
										{
											"begin": 7855,
											"end": 7859,
											"name": "PUSH",
											"source": 31,
											"value": "7F"
										},
										{
											"begin": 7847,
											"end": 7853,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 7843,
											"end": 7860,
											"name": "AND",
											"source": 31
										},
										{
											"begin": 7833,
											"end": 7860,
											"name": "SWAP2",
											"source": 31
										},
										{
											"begin": 7833,
											"end": 7860,
											"name": "POP",
											"source": 31
										},
										{
											"begin": 7801,
											"end": 7862,
											"name": "tag",
											"source": 31,
											"value": "489"
										},
										{
											"begin": 7801,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 7908,
											"end": 7910,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 7900,
											"end": 7906,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 7897,
											"end": 7911,
											"name": "LT",
											"source": 31
										},
										{
											"begin": 7877,
											"end": 7895,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 7874,
											"end": 7912,
											"name": "EQ",
											"source": 31
										},
										{
											"begin": 7871,
											"end": 8032,
											"name": "ISZERO",
											"source": 31
										},
										{
											"begin": 7871,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "478"
										},
										{
											"begin": 7871,
											"end": 8032,
											"name": "JUMPI",
											"source": 31
										},
										{
											"begin": 7954,
											"end": 7964,
											"name": "PUSH",
											"source": 31,
											"value": "4E487B71"
										},
										{
											"begin": 7949,
											"end": 7952,
											"name": "PUSH",
											"source": 31,
											"value": "E0"
										},
										{
											"begin": 7945,
											"end": 7965,
											"name": "SHL",
											"source": 31
										},
										{
											"begin": 7942,
											"end": 7943,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 7935,
											"end": 7966,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 7989,
											"end": 7993,
											"name": "PUSH",
											"source": 31,
											"value": "22"
										},
										{
											"begin": 7986,
											"end": 7987,
											"name": "PUSH",
											"source": 31,
											"value": "4"
										},
										{
											"begin": 7979,
											"end": 7994,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 8017,
											"end": 8021,
											"name": "PUSH",
											"source": 31,
											"value": "24"
										},
										{
											"begin": 8014,
											"end": 8015,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 8007,
											"end": 8022,
											"name": "REVERT",
											"source": 31
										},
										{
											"begin": 8043,
											"end": 8164,
											"name": "tag",
											"source": 31,
											"value": "418"
										},
										{
											"begin": 8043,
											"end": 8164,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 8128,
											"end": 8138,
											"name": "PUSH",
											"source": 31,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8121,
											"end": 8126,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 8117,
											"end": 8139,
											"name": "AND",
											"source": 31
										},
										{
											"begin": 8110,
											"end": 8115,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 8107,
											"end": 8140,
											"name": "EQ",
											"source": 31
										},
										{
											"begin": 8097,
											"end": 8158,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "278"
										},
										{
											"begin": 8097,
											"end": 8158,
											"name": "JUMPI",
											"source": 31
										},
										{
											"begin": 8154,
											"end": 8155,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 8151,
											"end": 8152,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 8144,
											"end": 8156,
											"name": "REVERT",
											"source": 31
										},
										{
											"begin": 8169,
											"end": 8691,
											"name": "tag",
											"source": 31,
											"value": "147"
										},
										{
											"begin": 8169,
											"end": 8691,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 8278,
											"end": 8284,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 8331,
											"end": 8333,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 8319,
											"end": 8328,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 8310,
											"end": 8317,
											"name": "DUP5",
											"source": 31
										},
										{
											"begin": 8306,
											"end": 8329,
											"name": "SUB",
											"source": 31
										},
										{
											"begin": 8302,
											"end": 8334,
											"name": "SLT",
											"source": 31
										},
										{
											"begin": 8299,
											"end": 8351,
											"name": "ISZERO",
											"source": 31
										},
										{
											"begin": 8299,
											"end": 8351,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "494"
										},
										{
											"begin": 8299,
											"end": 8351,
											"name": "JUMPI",
											"source": 31
										},
										{
											"begin": 8347,
											"end": 8348,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 8344,
											"end": 8345,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 8337,
											"end": 8349,
											"name": "REVERT",
											"source": 31
										},
										{
											"begin": 8299,
											"end": 8351,
											"name": "tag",
											"source": 31,
											"value": "494"
										},
										{
											"begin": 8299,
											"end": 8351,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 8380,
											"end": 8382,
											"name": "PUSH",
											"source": 31,
											"value": "40"
										},
										{
											"begin": 8374,
											"end": 8383,
											"name": "MLOAD",
											"source": 31
										},
										{
											"begin": 8422,
											"end": 8424,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 8414,
											"end": 8420,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 8410,
											"end": 8425,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 8491,
											"end": 8497,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 8479,
											"end": 8489,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 8476,
											"end": 8498,
											"name": "LT",
											"source": 31
										},
										{
											"begin": 8455,
											"end": 8473,
											"name": "PUSH",
											"source": 31,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8443,
											"end": 8453,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 8440,
											"end": 8474,
											"name": "GT",
											"source": 31
										},
										{
											"begin": 8437,
											"end": 8499,
											"name": "OR",
											"source": 31
										},
										{
											"begin": 8434,
											"end": 8522,
											"name": "ISZERO",
											"source": 31
										},
										{
											"begin": 8434,
											"end": 8522,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "496"
										},
										{
											"begin": 8434,
											"end": 8522,
											"name": "JUMPI",
											"source": 31
										},
										{
											"begin": 8502,
											"end": 8520,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "496"
										},
										{
											"begin": 8502,
											"end": 8520,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "332"
										},
										{
											"begin": 8502,
											"end": 8520,
											"name": "JUMP",
											"source": 31,
											"value": "[in]"
										},
										{
											"begin": 8502,
											"end": 8520,
											"name": "tag",
											"source": 31,
											"value": "496"
										},
										{
											"begin": 8502,
											"end": 8520,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 8538,
											"end": 8540,
											"name": "PUSH",
											"source": 31,
											"value": "40"
										},
										{
											"begin": 8531,
											"end": 8553,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 8575,
											"end": 8591,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 8575,
											"end": 8591,
											"name": "MLOAD",
											"source": 31
										},
										{
											"begin": 8600,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "497"
										},
										{
											"begin": 8575,
											"end": 8591,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 8600,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "418"
										},
										{
											"begin": 8600,
											"end": 8630,
											"name": "JUMP",
											"source": 31,
											"value": "[in]"
										},
										{
											"begin": 8600,
											"end": 8630,
											"name": "tag",
											"source": 31,
											"value": "497"
										},
										{
											"begin": 8600,
											"end": 8630,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 8639,
											"end": 8660,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 8639,
											"end": 8660,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 8646,
											"end": 8652,
											"name": "SWAP4",
											"source": 31
										},
										{
											"begin": 8169,
											"end": 8691,
											"name": "SWAP3",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8169,
											"end": 8691,
											"name": "JUMP",
											"source": 31,
											"value": "[out]"
										},
										{
											"begin": 8696,
											"end": 8941,
											"name": "tag",
											"source": 31,
											"value": "155"
										},
										{
											"begin": 8696,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 8754,
											"end": 8760,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 8807,
											"end": 8809,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 8795,
											"end": 8804,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 8786,
											"end": 8793,
											"name": "DUP5",
											"source": 31
										},
										{
											"begin": 8782,
											"end": 8805,
											"name": "SUB",
											"source": 31
										},
										{
											"begin": 8778,
											"end": 8810,
											"name": "SLT",
											"source": 31
										},
										{
											"begin": 8775,
											"end": 8827,
											"name": "ISZERO",
											"source": 31
										},
										{
											"begin": 8775,
											"end": 8827,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "499"
										},
										{
											"begin": 8775,
											"end": 8827,
											"name": "JUMPI",
											"source": 31
										},
										{
											"begin": 8823,
											"end": 8824,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 8820,
											"end": 8821,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 8813,
											"end": 8825,
											"name": "REVERT",
											"source": 31
										},
										{
											"begin": 8775,
											"end": 8827,
											"name": "tag",
											"source": 31,
											"value": "499"
										},
										{
											"begin": 8775,
											"end": 8827,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 8862,
											"end": 8871,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 8849,
											"end": 8872,
											"name": "CALLDATALOAD",
											"source": 31
										},
										{
											"begin": 8881,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "424"
										},
										{
											"begin": 8905,
											"end": 8910,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 8881,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "418"
										},
										{
											"begin": 8881,
											"end": 8911,
											"name": "JUMP",
											"source": 31,
											"value": "[in]"
										},
										{
											"begin": 8946,
											"end": 9300,
											"name": "tag",
											"source": 31,
											"value": "160"
										},
										{
											"begin": 8946,
											"end": 9300,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 9160,
											"end": 9162,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 9145,
											"end": 9163,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 9145,
											"end": 9163,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 9185,
											"end": 9205,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 9185,
											"end": 9205,
											"name": "CALLDATALOAD",
											"source": 31
										},
										{
											"begin": 9214,
											"end": 9244,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "502"
										},
										{
											"begin": 9185,
											"end": 9205,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 9214,
											"end": 9244,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "418"
										},
										{
											"begin": 9214,
											"end": 9244,
											"name": "JUMP",
											"source": 31,
											"value": "[in]"
										},
										{
											"begin": 9214,
											"end": 9244,
											"name": "tag",
											"source": 31,
											"value": "502"
										},
										{
											"begin": 9214,
											"end": 9244,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 9282,
											"end": 9292,
											"name": "PUSH",
											"source": 31,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9271,
											"end": 9293,
											"name": "AND",
											"source": 31
										},
										{
											"begin": 9253,
											"end": 9294,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 9253,
											"end": 9294,
											"name": "SWAP2",
											"source": 31
										},
										{
											"begin": 9253,
											"end": 9294,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 8946,
											"end": 9300,
											"name": "SWAP2",
											"source": 31
										},
										{
											"begin": 8946,
											"end": 9300,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8946,
											"end": 9300,
											"name": "JUMP",
											"source": 31,
											"value": "[out]"
										},
										{
											"begin": 9305,
											"end": 9730,
											"name": "tag",
											"source": 31,
											"value": "163"
										},
										{
											"begin": 9305,
											"end": 9730,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 9547,
											"end": 9549,
											"name": "PUSH",
											"source": 31,
											"value": "40"
										},
										{
											"begin": 9532,
											"end": 9550,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 9532,
											"end": 9550,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 9572,
											"end": 9592,
											"name": "DUP4",
											"source": 31
										},
										{
											"begin": 9572,
											"end": 9592,
											"name": "CALLDATALOAD",
											"source": 31
										},
										{
											"begin": 9601,
											"end": 9631,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "504"
										},
										{
											"begin": 9572,
											"end": 9592,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 9601,
											"end": 9631,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "418"
										},
										{
											"begin": 9601,
											"end": 9631,
											"name": "JUMP",
											"source": 31,
											"value": "[in]"
										},
										{
											"begin": 9601,
											"end": 9631,
											"name": "tag",
											"source": 31,
											"value": "504"
										},
										{
											"begin": 9601,
											"end": 9631,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 9669,
											"end": 9679,
											"name": "PUSH",
											"source": 31,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9658,
											"end": 9680,
											"name": "AND",
											"source": 31
										},
										{
											"begin": 9640,
											"end": 9681,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 9640,
											"end": 9681,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 9712,
											"end": 9714,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 9697,
											"end": 9715,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 9697,
											"end": 9715,
											"name": "SWAP2",
											"source": 31
										},
										{
											"begin": 9697,
											"end": 9715,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 9690,
											"end": 9724,
											"name": "SWAP2",
											"source": 31
										},
										{
											"begin": 9690,
											"end": 9724,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 9690,
											"end": 9724,
											"name": "SWAP2",
											"source": 31
										},
										{
											"begin": 9690,
											"end": 9724,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 9305,
											"end": 9730,
											"name": "SWAP2",
											"source": 31
										},
										{
											"begin": 9305,
											"end": 9730,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9305,
											"end": 9730,
											"name": "JUMP",
											"source": 31,
											"value": "[out]"
										},
										{
											"begin": 9735,
											"end": 10196,
											"name": "tag",
											"source": 31,
											"value": "419"
										},
										{
											"begin": 9735,
											"end": 10196,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 9788,
											"end": 9791,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 9826,
											"end": 9831,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 9820,
											"end": 9832,
											"name": "MLOAD",
											"source": 31
										},
										{
											"begin": 9853,
											"end": 9859,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 9848,
											"end": 9851,
											"name": "DUP5",
											"source": 31
										},
										{
											"begin": 9841,
											"end": 9860,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 9879,
											"end": 9883,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 9908,
											"end": 9910,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 9903,
											"end": 9906,
											"name": "DUP6",
											"source": 31
										},
										{
											"begin": 9899,
											"end": 9911,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 9892,
											"end": 9911,
											"name": "SWAP5",
											"source": 31
										},
										{
											"begin": 9892,
											"end": 9911,
											"name": "POP",
											"source": 31
										},
										{
											"begin": 9945,
											"end": 9947,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 9938,
											"end": 9943,
											"name": "DUP5",
											"source": 31
										},
										{
											"begin": 9934,
											"end": 9948,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 9966,
											"end": 9967,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 9976,
											"end": 10171,
											"name": "tag",
											"source": 31,
											"value": "506"
										},
										{
											"begin": 9976,
											"end": 10171,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 9990,
											"end": 9996,
											"name": "DUP4",
											"source": 31
										},
										{
											"begin": 9987,
											"end": 9988,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 9984,
											"end": 9997,
											"name": "LT",
											"source": 31
										},
										{
											"begin": 9976,
											"end": 10171,
											"name": "ISZERO",
											"source": 31
										},
										{
											"begin": 9976,
											"end": 10171,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "508"
										},
										{
											"begin": 9976,
											"end": 10171,
											"name": "JUMPI",
											"source": 31
										},
										{
											"begin": 10055,
											"end": 10068,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 10055,
											"end": 10068,
											"name": "MLOAD",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10051,
											"end": 10090,
											"name": "AND",
											"source": 31
										},
										{
											"begin": 10039,
											"end": 10091,
											"name": "DUP8",
											"source": 31
										},
										{
											"begin": 10039,
											"end": 10091,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 10111,
											"end": 10123,
											"name": "SWAP6",
											"source": 31
										},
										{
											"begin": 10111,
											"end": 10123,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 10111,
											"end": 10123,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 10111,
											"end": 10123,
											"name": "SWAP6",
											"source": 31
										},
										{
											"begin": 10146,
											"end": 10161,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 10146,
											"end": 10161,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 10146,
											"end": 10161,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 10146,
											"end": 10161,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 10087,
											"end": 10088,
											"name": "PUSH",
											"source": 31,
											"value": "1"
										},
										{
											"begin": 10005,
											"end": 10014,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 9976,
											"end": 10171,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "506"
										},
										{
											"begin": 9976,
											"end": 10171,
											"name": "JUMP",
											"source": 31
										},
										{
											"begin": 9976,
											"end": 10171,
											"name": "tag",
											"source": 31,
											"value": "508"
										},
										{
											"begin": 9976,
											"end": 10171,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10187,
											"end": 10190,
											"name": "SWAP5",
											"source": 31
										},
										{
											"begin": 10187,
											"end": 10190,
											"name": "SWAP6",
											"source": 31
										},
										{
											"begin": 9735,
											"end": 10196,
											"name": "SWAP5",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9735,
											"end": 10196,
											"name": "JUMP",
											"source": 31,
											"value": "[out]"
										},
										{
											"begin": 10201,
											"end": 10716,
											"name": "tag",
											"source": 31,
											"value": "180"
										},
										{
											"begin": 10201,
											"end": 10716,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 10462,
											"end": 10468,
											"name": "DUP5",
											"source": 31
										},
										{
											"begin": 10451,
											"end": 10460,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 10444,
											"end": 10469,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 10505,
											"end": 10508,
											"name": "PUSH",
											"source": 31,
											"value": "80"
										},
										{
											"begin": 10500,
											"end": 10502,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 10489,
											"end": 10498,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 10485,
											"end": 10503,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 10478,
											"end": 10509,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 10425,
											"end": 10429,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 10526,
											"end": 10583,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "510"
										},
										{
											"begin": 10578,
											"end": 10581,
											"name": "PUSH",
											"source": 31,
											"value": "80"
										},
										{
											"begin": 10567,
											"end": 10576,
											"name": "DUP4",
											"source": 31
										},
										{
											"begin": 10563,
											"end": 10582,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 10555,
											"end": 10561,
											"name": "DUP7",
											"source": 31
										},
										{
											"begin": 10526,
											"end": 10583,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "419"
										},
										{
											"begin": 10526,
											"end": 10583,
											"name": "JUMP",
											"source": 31,
											"value": "[in]"
										},
										{
											"begin": 10526,
											"end": 10583,
											"name": "tag",
											"source": 31,
											"value": "510"
										},
										{
											"begin": 10526,
											"end": 10583,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 10631,
											"end": 10639,
											"name": "PUSH",
											"source": 31,
											"value": "FFFFFF"
										},
										{
											"begin": 10619,
											"end": 10640,
											"name": "SWAP5",
											"source": 31
										},
										{
											"begin": 10619,
											"end": 10640,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 10619,
											"end": 10640,
											"name": "SWAP5",
											"source": 31
										},
										{
											"begin": 10619,
											"end": 10640,
											"name": "AND",
											"source": 31
										},
										{
											"begin": 10614,
											"end": 10616,
											"name": "PUSH",
											"source": 31,
											"value": "40"
										},
										{
											"begin": 10599,
											"end": 10617,
											"name": "DUP4",
											"source": 31
										},
										{
											"begin": 10599,
											"end": 10617,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 10592,
											"end": 10641,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10677,
											"end": 10709,
											"name": "SWAP2",
											"source": 31
										},
										{
											"begin": 10677,
											"end": 10709,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 10677,
											"end": 10709,
											"name": "SWAP2",
											"source": 31
										},
										{
											"begin": 10677,
											"end": 10709,
											"name": "AND",
											"source": 31
										},
										{
											"begin": 10672,
											"end": 10674,
											"name": "PUSH",
											"source": 31,
											"value": "60"
										},
										{
											"begin": 10657,
											"end": 10675,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 10657,
											"end": 10675,
											"name": "SWAP2",
											"source": 31
										},
										{
											"begin": 10657,
											"end": 10675,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 10650,
											"end": 10710,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 10518,
											"end": 10583,
											"name": "SWAP3",
											"source": 31
										},
										{
											"begin": 10201,
											"end": 10716,
											"name": "SWAP2",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10201,
											"end": 10716,
											"name": "JUMP",
											"source": 31,
											"value": "[out]"
										},
										{
											"begin": 10916,
											"end": 11610,
											"name": "tag",
											"source": 31,
											"value": "187"
										},
										{
											"begin": 10916,
											"end": 11610,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 11225,
											"end": 11228,
											"name": "PUSH",
											"source": 31,
											"value": "A0"
										},
										{
											"begin": 11214,
											"end": 11223,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 11207,
											"end": 11229,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 11188,
											"end": 11192,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 11252,
											"end": 11309,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "513"
										},
										{
											"begin": 11304,
											"end": 11307,
											"name": "PUSH",
											"source": 31,
											"value": "A0"
										},
										{
											"begin": 11293,
											"end": 11302,
											"name": "DUP4",
											"source": 31
										},
										{
											"begin": 11289,
											"end": 11308,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 11281,
											"end": 11287,
											"name": "DUP9",
											"source": 31
										},
										{
											"begin": 11252,
											"end": 11309,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "419"
										},
										{
											"begin": 11252,
											"end": 11309,
											"name": "JUMP",
											"source": 31,
											"value": "[in]"
										},
										{
											"begin": 11252,
											"end": 11309,
											"name": "tag",
											"source": 31,
											"value": "513"
										},
										{
											"begin": 11252,
											"end": 11309,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 11357,
											"end": 11366,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 11349,
											"end": 11355,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 11345,
											"end": 11367,
											"name": "SUB",
											"source": 31
										},
										{
											"begin": 11340,
											"end": 11342,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 11329,
											"end": 11338,
											"name": "DUP5",
											"source": 31
										},
										{
											"begin": 11325,
											"end": 11343,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 11318,
											"end": 11368,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 11385,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "514"
										},
										{
											"begin": 11411,
											"end": 11417,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 11403,
											"end": 11409,
											"name": "DUP9",
											"source": 31
										},
										{
											"begin": 11385,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "415"
										},
										{
											"begin": 11385,
											"end": 11418,
											"name": "JUMP",
											"source": 31,
											"value": "[in]"
										},
										{
											"begin": 11385,
											"end": 11418,
											"name": "tag",
											"source": 31,
											"value": "514"
										},
										{
											"begin": 11385,
											"end": 11418,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11492,
											"end": 11507,
											"name": "SWAP7",
											"source": 31
										},
										{
											"begin": 11492,
											"end": 11507,
											"name": "DUP8",
											"source": 31
										},
										{
											"begin": 11492,
											"end": 11507,
											"name": "AND",
											"source": 31
										},
										{
											"begin": 11487,
											"end": 11489,
											"name": "PUSH",
											"source": 31,
											"value": "40"
										},
										{
											"begin": 11472,
											"end": 11490,
											"name": "DUP6",
											"source": 31
										},
										{
											"begin": 11472,
											"end": 11490,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 11465,
											"end": 11508,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 11544,
											"end": 11559,
											"name": "SWAP5",
											"source": 31
										},
										{
											"begin": 11544,
											"end": 11559,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 11544,
											"end": 11559,
											"name": "SWAP6",
											"source": 31
										},
										{
											"begin": 11544,
											"end": 11559,
											"name": "AND",
											"source": 31
										},
										{
											"begin": 11539,
											"end": 11541,
											"name": "PUSH",
											"source": 31,
											"value": "60"
										},
										{
											"begin": 11524,
											"end": 11542,
											"name": "DUP4",
											"source": 31
										},
										{
											"begin": 11524,
											"end": 11542,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 11517,
											"end": 11560,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11591,
											"end": 11594,
											"name": "PUSH",
											"source": 31,
											"value": "80"
										},
										{
											"begin": 11576,
											"end": 11595,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 11569,
											"end": 11604,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 11377,
											"end": 11418,
											"name": "SWAP4",
											"source": 31
										},
										{
											"begin": 10916,
											"end": 11610,
											"name": "SWAP3",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10916,
											"end": 11610,
											"name": "JUMP",
											"source": 31,
											"value": "[out]"
										},
										{
											"begin": 11615,
											"end": 12312,
											"name": "tag",
											"source": 31,
											"value": "217"
										},
										{
											"begin": 11615,
											"end": 12312,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 11724,
											"end": 11730,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 11777,
											"end": 11779,
											"name": "PUSH",
											"source": 31,
											"value": "40"
										},
										{
											"begin": 11765,
											"end": 11774,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 11756,
											"end": 11763,
											"name": "DUP5",
											"source": 31
										},
										{
											"begin": 11752,
											"end": 11775,
											"name": "SUB",
											"source": 31
										},
										{
											"begin": 11748,
											"end": 11780,
											"name": "SLT",
											"source": 31
										},
										{
											"begin": 11745,
											"end": 11797,
											"name": "ISZERO",
											"source": 31
										},
										{
											"begin": 11745,
											"end": 11797,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "516"
										},
										{
											"begin": 11745,
											"end": 11797,
											"name": "JUMPI",
											"source": 31
										},
										{
											"begin": 11793,
											"end": 11794,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 11790,
											"end": 11791,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 11783,
											"end": 11795,
											"name": "REVERT",
											"source": 31
										},
										{
											"begin": 11745,
											"end": 11797,
											"name": "tag",
											"source": 31,
											"value": "516"
										},
										{
											"begin": 11745,
											"end": 11797,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 11826,
											"end": 11828,
											"name": "PUSH",
											"source": 31,
											"value": "40"
										},
										{
											"begin": 11820,
											"end": 11829,
											"name": "MLOAD",
											"source": 31
										},
										{
											"begin": 11868,
											"end": 11870,
											"name": "PUSH",
											"source": 31,
											"value": "40"
										},
										{
											"begin": 11860,
											"end": 11866,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 11856,
											"end": 11871,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 11937,
											"end": 11943,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 11925,
											"end": 11935,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 11922,
											"end": 11944,
											"name": "LT",
											"source": 31
										},
										{
											"begin": 11901,
											"end": 11919,
											"name": "PUSH",
											"source": 31,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11889,
											"end": 11899,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 11886,
											"end": 11920,
											"name": "GT",
											"source": 31
										},
										{
											"begin": 11883,
											"end": 11945,
											"name": "OR",
											"source": 31
										},
										{
											"begin": 11880,
											"end": 11968,
											"name": "ISZERO",
											"source": 31
										},
										{
											"begin": 11880,
											"end": 11968,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "518"
										},
										{
											"begin": 11880,
											"end": 11968,
											"name": "JUMPI",
											"source": 31
										},
										{
											"begin": 11948,
											"end": 11966,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "518"
										},
										{
											"begin": 11948,
											"end": 11966,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "332"
										},
										{
											"begin": 11948,
											"end": 11966,
											"name": "JUMP",
											"source": 31,
											"value": "[in]"
										},
										{
											"begin": 11948,
											"end": 11966,
											"name": "tag",
											"source": 31,
											"value": "518"
										},
										{
											"begin": 11948,
											"end": 11966,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 11984,
											"end": 11986,
											"name": "PUSH",
											"source": 31,
											"value": "40"
										},
										{
											"begin": 11977,
											"end": 11999,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 12021,
											"end": 12037,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 12021,
											"end": 12037,
											"name": "MLOAD",
											"source": 31
										},
										{
											"begin": 12046,
											"end": 12098,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "519"
										},
										{
											"begin": 12021,
											"end": 12037,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 12046,
											"end": 12098,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "412"
										},
										{
											"begin": 12046,
											"end": 12098,
											"name": "JUMP",
											"source": 31,
											"value": "[in]"
										},
										{
											"begin": 12046,
											"end": 12098,
											"name": "tag",
											"source": 31,
											"value": "519"
										},
										{
											"begin": 12046,
											"end": 12098,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 12107,
											"end": 12128,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 12107,
											"end": 12128,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 12173,
											"end": 12175,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 12158,
											"end": 12176,
											"name": "DUP4",
											"source": 31
										},
										{
											"begin": 12158,
											"end": 12176,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 12152,
											"end": 12177,
											"name": "MLOAD",
											"source": 31
										},
										{
											"begin": 12186,
											"end": 12240,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "520"
										},
										{
											"begin": 12152,
											"end": 12177,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 12186,
											"end": 12240,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "412"
										},
										{
											"begin": 12186,
											"end": 12240,
											"name": "JUMP",
											"source": 31,
											"value": "[in]"
										},
										{
											"begin": 12186,
											"end": 12240,
											"name": "tag",
											"source": 31,
											"value": "520"
										},
										{
											"begin": 12186,
											"end": 12240,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 12268,
											"end": 12270,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 12256,
											"end": 12271,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 12256,
											"end": 12271,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 12249,
											"end": 12281,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 12260,
											"end": 12266,
											"name": "SWAP4",
											"source": 31
										},
										{
											"begin": 11615,
											"end": 12312,
											"name": "SWAP3",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11615,
											"end": 12312,
											"name": "JUMP",
											"source": 31,
											"value": "[out]"
										},
										{
											"begin": 12317,
											"end": 12620,
											"name": "tag",
											"source": 31,
											"value": "224"
										},
										{
											"begin": 12317,
											"end": 12620,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 12411,
											"end": 12417,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 12464,
											"end": 12466,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 12452,
											"end": 12461,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 12443,
											"end": 12450,
											"name": "DUP5",
											"source": 31
										},
										{
											"begin": 12439,
											"end": 12462,
											"name": "SUB",
											"source": 31
										},
										{
											"begin": 12435,
											"end": 12467,
											"name": "SLT",
											"source": 31
										},
										{
											"begin": 12432,
											"end": 12484,
											"name": "ISZERO",
											"source": 31
										},
										{
											"begin": 12432,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "522"
										},
										{
											"begin": 12432,
											"end": 12484,
											"name": "JUMPI",
											"source": 31
										},
										{
											"begin": 12480,
											"end": 12481,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 12477,
											"end": 12478,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 12470,
											"end": 12482,
											"name": "REVERT",
											"source": 31
										},
										{
											"begin": 12432,
											"end": 12484,
											"name": "tag",
											"source": 31,
											"value": "522"
										},
										{
											"begin": 12432,
											"end": 12484,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 12519,
											"end": 12528,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 12506,
											"end": 12529,
											"name": "CALLDATALOAD",
											"source": 31
										},
										{
											"begin": 12538,
											"end": 12590,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "424"
										},
										{
											"begin": 12584,
											"end": 12589,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 12538,
											"end": 12590,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "412"
										},
										{
											"begin": 12538,
											"end": 12590,
											"name": "JUMP",
											"source": 31,
											"value": "[in]"
										},
										{
											"begin": 12914,
											"end": 13343,
											"name": "tag",
											"source": 31,
											"value": "420"
										},
										{
											"begin": 12914,
											"end": 13343,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 13026,
											"end": 13031,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 13013,
											"end": 13032,
											"name": "CALLDATALOAD",
											"source": 31
										},
										{
											"begin": 13041,
											"end": 13095,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "528"
										},
										{
											"begin": 13087,
											"end": 13094,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 13041,
											"end": 13095,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "412"
										},
										{
											"begin": 13041,
											"end": 13095,
											"name": "JUMP",
											"source": 31,
											"value": "[in]"
										},
										{
											"begin": 13041,
											"end": 13095,
											"name": "tag",
											"source": 31,
											"value": "528"
										},
										{
											"begin": 13041,
											"end": 13095,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13154,
											"end": 13170,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 13154,
											"end": 13170,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 13154,
											"end": 13170,
											"name": "AND",
											"source": 31
										},
										{
											"begin": 13142,
											"end": 13171,
											"name": "DUP4",
											"source": 31
										},
										{
											"begin": 13142,
											"end": 13171,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 13219,
											"end": 13223,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 13208,
											"end": 13224,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 13208,
											"end": 13224,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 13195,
											"end": 13225,
											"name": "CALLDATALOAD",
											"source": 31
										},
										{
											"begin": 13195,
											"end": 13225,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 13234,
											"end": 13288,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "529"
										},
										{
											"begin": 13195,
											"end": 13225,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 13234,
											"end": 13288,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "412"
										},
										{
											"begin": 13234,
											"end": 13288,
											"name": "JUMP",
											"source": 31,
											"value": "[in]"
										},
										{
											"begin": 13234,
											"end": 13288,
											"name": "tag",
											"source": 31,
											"value": "529"
										},
										{
											"begin": 13234,
											"end": 13288,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 13333,
											"end": 13335,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 13324,
											"end": 13331,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 13320,
											"end": 13336,
											"name": "AND",
											"source": 31
										},
										{
											"begin": 13313,
											"end": 13317,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 13308,
											"end": 13311,
											"name": "DUP6",
											"source": 31
										},
										{
											"begin": 13304,
											"end": 13318,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 13297,
											"end": 13337,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 13297,
											"end": 13337,
											"name": "POP",
											"source": 31
										},
										{
											"begin": 13297,
											"end": 13337,
											"name": "POP",
											"source": 31
										},
										{
											"begin": 12914,
											"end": 13343,
											"name": "POP",
											"source": 31
										},
										{
											"begin": 12914,
											"end": 13343,
											"name": "POP",
											"source": 31
										},
										{
											"begin": 12914,
											"end": 13343,
											"name": "JUMP",
											"source": 31,
											"value": "[out]"
										},
										{
											"begin": 13348,
											"end": 13647,
											"name": "tag",
											"source": 31,
											"value": "233"
										},
										{
											"begin": 13348,
											"end": 13647,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 13562,
											"end": 13564,
											"name": "PUSH",
											"source": 31,
											"value": "40"
										},
										{
											"begin": 13547,
											"end": 13565,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 13547,
											"end": 13565,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 13574,
											"end": 13641,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "115"
										},
										{
											"begin": 13551,
											"end": 13560,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 13623,
											"end": 13629,
											"name": "DUP5",
											"source": 31
										},
										{
											"begin": 13574,
											"end": 13641,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "420"
										},
										{
											"begin": 13574,
											"end": 13641,
											"name": "JUMP",
											"source": 31,
											"value": "[in]"
										},
										{
											"begin": 13652,
											"end": 14022,
											"name": "tag",
											"source": 31,
											"value": "236"
										},
										{
											"begin": 13652,
											"end": 14022,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 13894,
											"end": 13896,
											"name": "PUSH",
											"source": 31,
											"value": "60"
										},
										{
											"begin": 13879,
											"end": 13897,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 13879,
											"end": 13897,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 13906,
											"end": 13973,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "533"
										},
										{
											"begin": 13883,
											"end": 13892,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 13955,
											"end": 13961,
											"name": "DUP6",
											"source": 31
										},
										{
											"begin": 13906,
											"end": 13973,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "420"
										},
										{
											"begin": 13906,
											"end": 13973,
											"name": "JUMP",
											"source": 31,
											"value": "[in]"
										},
										{
											"begin": 13906,
											"end": 13973,
											"name": "tag",
											"source": 31,
											"value": "533"
										},
										{
											"begin": 13906,
											"end": 13973,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 14009,
											"end": 14015,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 14004,
											"end": 14006,
											"name": "PUSH",
											"source": 31,
											"value": "40"
										},
										{
											"begin": 13993,
											"end": 14002,
											"name": "DUP4",
											"source": 31
										},
										{
											"begin": 13989,
											"end": 14007,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 13982,
											"end": 14016,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 13652,
											"end": 14022,
											"name": "SWAP4",
											"source": 31
										},
										{
											"begin": 13652,
											"end": 14022,
											"name": "SWAP3",
											"source": 31
										},
										{
											"begin": 13652,
											"end": 14022,
											"name": "POP",
											"source": 31
										},
										{
											"begin": 13652,
											"end": 14022,
											"name": "POP",
											"source": 31
										},
										{
											"begin": 13652,
											"end": 14022,
											"name": "POP",
											"source": 31
										},
										{
											"begin": 13652,
											"end": 14022,
											"name": "JUMP",
											"source": 31,
											"value": "[out]"
										},
										{
											"begin": 14676,
											"end": 14953,
											"name": "tag",
											"source": 31,
											"value": "277"
										},
										{
											"begin": 14676,
											"end": 14953,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 14743,
											"end": 14749,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 14796,
											"end": 14798,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 14784,
											"end": 14793,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 14775,
											"end": 14782,
											"name": "DUP5",
											"source": 31
										},
										{
											"begin": 14771,
											"end": 14794,
											"name": "SUB",
											"source": 31
										},
										{
											"begin": 14767,
											"end": 14799,
											"name": "SLT",
											"source": 31
										},
										{
											"begin": 14764,
											"end": 14816,
											"name": "ISZERO",
											"source": 31
										},
										{
											"begin": 14764,
											"end": 14816,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "537"
										},
										{
											"begin": 14764,
											"end": 14816,
											"name": "JUMPI",
											"source": 31
										},
										{
											"begin": 14812,
											"end": 14813,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 14809,
											"end": 14810,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 14802,
											"end": 14814,
											"name": "REVERT",
											"source": 31
										},
										{
											"begin": 14764,
											"end": 14816,
											"name": "tag",
											"source": 31,
											"value": "537"
										},
										{
											"begin": 14764,
											"end": 14816,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 14844,
											"end": 14853,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 14838,
											"end": 14854,
											"name": "MLOAD",
											"source": 31
										},
										{
											"begin": 14897,
											"end": 14902,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 14890,
											"end": 14903,
											"name": "ISZERO",
											"source": 31
										},
										{
											"begin": 14883,
											"end": 14904,
											"name": "ISZERO",
											"source": 31
										},
										{
											"begin": 14876,
											"end": 14881,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 14873,
											"end": 14905,
											"name": "EQ",
											"source": 31
										},
										{
											"begin": 14863,
											"end": 14923,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "424"
										},
										{
											"begin": 14863,
											"end": 14923,
											"name": "JUMPI",
											"source": 31
										},
										{
											"begin": 14919,
											"end": 14920,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 14916,
											"end": 14917,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 14909,
											"end": 14921,
											"name": "REVERT",
											"source": 31
										},
										{
											"begin": 14958,
											"end": 15126,
											"name": "tag",
											"source": 31,
											"value": "305"
										},
										{
											"begin": 14958,
											"end": 15126,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 14998,
											"end": 15005,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 15064,
											"end": 15065,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 15060,
											"end": 15061,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 15056,
											"end": 15062,
											"name": "NOT",
											"source": 31
										},
										{
											"begin": 15052,
											"end": 15066,
											"name": "DIV",
											"source": 31
										},
										{
											"begin": 15049,
											"end": 15050,
											"name": "DUP4",
											"source": 31
										},
										{
											"begin": 15046,
											"end": 15067,
											"name": "GT",
											"source": 31
										},
										{
											"begin": 15041,
											"end": 15042,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 15034,
											"end": 15043,
											"name": "ISZERO",
											"source": 31
										},
										{
											"begin": 15027,
											"end": 15044,
											"name": "ISZERO",
											"source": 31
										},
										{
											"begin": 15023,
											"end": 15068,
											"name": "AND",
											"source": 31
										},
										{
											"begin": 15020,
											"end": 15091,
											"name": "ISZERO",
											"source": 31
										},
										{
											"begin": 15020,
											"end": 15091,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "541"
										},
										{
											"begin": 15020,
											"end": 15091,
											"name": "JUMPI",
											"source": 31
										},
										{
											"begin": 15071,
											"end": 15089,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "541"
										},
										{
											"begin": 15071,
											"end": 15089,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "417"
										},
										{
											"begin": 15071,
											"end": 15089,
											"name": "JUMP",
											"source": 31,
											"value": "[in]"
										},
										{
											"begin": 15071,
											"end": 15089,
											"name": "tag",
											"source": 31,
											"value": "541"
										},
										{
											"begin": 15071,
											"end": 15089,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15111,
											"end": 15120,
											"name": "MUL",
											"source": 31
										},
										{
											"begin": 15111,
											"end": 15120,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 14958,
											"end": 15126,
											"name": "JUMP",
											"source": 31,
											"value": "[out]"
										},
										{
											"begin": 15726,
											"end": 15853,
											"name": "tag",
											"source": 31,
											"value": "339"
										},
										{
											"begin": 15726,
											"end": 15853,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 15787,
											"end": 15797,
											"name": "PUSH",
											"source": 31,
											"value": "4E487B71"
										},
										{
											"begin": 15782,
											"end": 15785,
											"name": "PUSH",
											"source": 31,
											"value": "E0"
										},
										{
											"begin": 15778,
											"end": 15798,
											"name": "SHL",
											"source": 31
										},
										{
											"begin": 15775,
											"end": 15776,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 15768,
											"end": 15799,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 15818,
											"end": 15822,
											"name": "PUSH",
											"source": 31,
											"value": "32"
										},
										{
											"begin": 15815,
											"end": 15816,
											"name": "PUSH",
											"source": 31,
											"value": "4"
										},
										{
											"begin": 15808,
											"end": 15823,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 15842,
											"end": 15846,
											"name": "PUSH",
											"source": 31,
											"value": "24"
										},
										{
											"begin": 15839,
											"end": 15840,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 15832,
											"end": 15847,
											"name": "REVERT",
											"source": 31
										},
										{
											"begin": 15858,
											"end": 15993,
											"name": "tag",
											"source": 31,
											"value": "342"
										},
										{
											"begin": 15858,
											"end": 15993,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 15897,
											"end": 15900,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15918,
											"end": 15935,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 15918,
											"end": 15935,
											"name": "EQ",
											"source": 31
										},
										{
											"begin": 15915,
											"end": 15958,
											"name": "ISZERO",
											"source": 31
										},
										{
											"begin": 15915,
											"end": 15958,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "547"
										},
										{
											"begin": 15915,
											"end": 15958,
											"name": "JUMPI",
											"source": 31
										},
										{
											"begin": 15938,
											"end": 15956,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "547"
										},
										{
											"begin": 15938,
											"end": 15956,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "417"
										},
										{
											"begin": 15938,
											"end": 15956,
											"name": "JUMP",
											"source": 31,
											"value": "[in]"
										},
										{
											"begin": 15938,
											"end": 15956,
											"name": "tag",
											"source": 31,
											"value": "547"
										},
										{
											"begin": 15938,
											"end": 15956,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15985,
											"end": 15986,
											"name": "PUSH",
											"source": 31,
											"value": "1"
										},
										{
											"begin": 15974,
											"end": 15987,
											"name": "ADD",
											"source": 31
										},
										{
											"begin": 15974,
											"end": 15987,
											"name": "SWAP1",
											"source": 31
										},
										{
											"begin": 15858,
											"end": 15993,
											"name": "JUMP",
											"source": 31,
											"value": "[out]"
										},
										{
											"begin": 15998,
											"end": 16270,
											"name": "tag",
											"source": 31,
											"value": "377"
										},
										{
											"begin": 15998,
											"end": 16270,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 16068,
											"end": 16074,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 16121,
											"end": 16123,
											"name": "PUSH",
											"source": 31,
											"value": "20"
										},
										{
											"begin": 16109,
											"end": 16118,
											"name": "DUP3",
											"source": 31
										},
										{
											"begin": 16100,
											"end": 16107,
											"name": "DUP5",
											"source": 31
										},
										{
											"begin": 16096,
											"end": 16119,
											"name": "SUB",
											"source": 31
										},
										{
											"begin": 16092,
											"end": 16124,
											"name": "SLT",
											"source": 31
										},
										{
											"begin": 16089,
											"end": 16141,
											"name": "ISZERO",
											"source": 31
										},
										{
											"begin": 16089,
											"end": 16141,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "549"
										},
										{
											"begin": 16089,
											"end": 16141,
											"name": "JUMPI",
											"source": 31
										},
										{
											"begin": 16137,
											"end": 16138,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 16134,
											"end": 16135,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 16127,
											"end": 16139,
											"name": "REVERT",
											"source": 31
										},
										{
											"begin": 16089,
											"end": 16141,
											"name": "tag",
											"source": 31,
											"value": "549"
										},
										{
											"begin": 16089,
											"end": 16141,
											"name": "JUMPDEST",
											"source": 31
										},
										{
											"begin": 16169,
											"end": 16178,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 16163,
											"end": 16179,
											"name": "MLOAD",
											"source": 31
										},
										{
											"begin": 16188,
											"end": 16240,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "424"
										},
										{
											"begin": 16234,
											"end": 16239,
											"name": "DUP2",
											"source": 31
										},
										{
											"begin": 16188,
											"end": 16240,
											"name": "PUSH [tag]",
											"source": 31,
											"value": "412"
										},
										{
											"begin": 16188,
											"end": 16240,
											"name": "JUMP",
											"source": 31,
											"value": "[in]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"commitDelayedProtocolParams()": "98347a5d",
							"commitDelayedStrategyParams(uint256)": "0bdedd56",
							"commitInternalParams()": "d4a07d34",
							"contractName()": "75d0c0dc",
							"contractNameBytes()": "0e3e80ac",
							"contractVersion()": "a0a8e460",
							"contractVersionBytes()": "06a46239",
							"createVault(address[],address,uint24,address)": "66c153e9",
							"delayedProtocolParams()": "d34cc380",
							"delayedProtocolParamsTimestamp()": "e4af6e79",
							"delayedProtocolPerVaultParamsTimestamp(uint256)": "511ce798",
							"delayedStrategyParams(uint256)": "8860d248",
							"delayedStrategyParamsTimestamp(uint256)": "6707acee",
							"internalParams()": "7ac46fbb",
							"internalParamsTimestamp()": "1c7f4c73",
							"stageDelayedProtocolParams((address,address))": "b2fe31ad",
							"stageDelayedStrategyParams(uint256,(uint32))": "25281714",
							"stageInternalParams((address,address,address))": "09946538",
							"stagedDelayedProtocolParams()": "c2cbdc67",
							"stagedDelayedStrategyParams(uint256)": "59f3dae7",
							"stagedInternalParams()": "86c6be3e",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"internalParams_\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract INonfungiblePositionManager\",\"name\":\"positionManager\",\"type\":\"address\"},{\"internalType\":\"contract IOracle\",\"name\":\"oracle\",\"type\":\"address\"}],\"internalType\":\"struct IUniV3VaultGovernance.DelayedProtocolParams\",\"name\":\"delayedProtocolParams_\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract INonfungiblePositionManager\",\"name\":\"positionManager\",\"type\":\"address\"},{\"internalType\":\"contract IOracle\",\"name\":\"oracle\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct IUniV3VaultGovernance.DelayedProtocolParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"CommitDelayedProtocolParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"safetyIndicesSet\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IUniV3VaultGovernance.DelayedStrategyParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"CommitDelayedStrategyParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"CommitedInternalParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"vaultTokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vaultAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultNft\",\"type\":\"uint256\"}],\"name\":\"DeployedVault\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract INonfungiblePositionManager\",\"name\":\"positionManager\",\"type\":\"address\"},{\"internalType\":\"contract IOracle\",\"name\":\"oracle\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct IUniV3VaultGovernance.DelayedProtocolParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"when\",\"type\":\"uint256\"}],\"name\":\"StageDelayedProtocolParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"safetyIndicesSet\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IUniV3VaultGovernance.DelayedStrategyParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"when\",\"type\":\"uint256\"}],\"name\":\"StageDelayedStrategyParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"when\",\"type\":\"uint256\"}],\"name\":\"StagedInternalParams\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"commitDelayedProtocolParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"commitDelayedStrategyParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commitInternalParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractNameBytes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersionBytes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"vaultTokens_\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee_\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"uniV3Helper_\",\"type\":\"address\"}],\"name\":\"createVault\",\"outputs\":[{\"internalType\":\"contract IUniV3Vault\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delayedProtocolParams\",\"outputs\":[{\"components\":[{\"internalType\":\"contract INonfungiblePositionManager\",\"name\":\"positionManager\",\"type\":\"address\"},{\"internalType\":\"contract IOracle\",\"name\":\"oracle\",\"type\":\"address\"}],\"internalType\":\"struct IUniV3VaultGovernance.DelayedProtocolParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delayedProtocolParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"delayedProtocolPerVaultParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"delayedStrategyParams\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"safetyIndicesSet\",\"type\":\"uint32\"}],\"internalType\":\"struct IUniV3VaultGovernance.DelayedStrategyParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"delayedStrategyParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"internalParams\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"internalParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract INonfungiblePositionManager\",\"name\":\"positionManager\",\"type\":\"address\"},{\"internalType\":\"contract IOracle\",\"name\":\"oracle\",\"type\":\"address\"}],\"internalType\":\"struct IUniV3VaultGovernance.DelayedProtocolParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"stageDelayedProtocolParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"safetyIndicesSet\",\"type\":\"uint32\"}],\"internalType\":\"struct IUniV3VaultGovernance.DelayedStrategyParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"stageDelayedStrategyParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"newParams\",\"type\":\"tuple\"}],\"name\":\"stageInternalParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stagedDelayedProtocolParams\",\"outputs\":[{\"components\":[{\"internalType\":\"contract INonfungiblePositionManager\",\"name\":\"positionManager\",\"type\":\"address\"},{\"internalType\":\"contract IOracle\",\"name\":\"oracle\",\"type\":\"address\"}],\"internalType\":\"struct IUniV3VaultGovernance.DelayedProtocolParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"stagedDelayedStrategyParams\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"safetyIndicesSet\",\"type\":\"uint32\"}],\"internalType\":\"struct IUniV3VaultGovernance.DelayedStrategyParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stagedInternalParams\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"CommitDelayedProtocolParams(address,address,(address,address))\":{\"params\":{\"origin\":\"Origin of the transaction (tx.origin)\",\"params\":\"New params that are committed\",\"sender\":\"Sender of the call (msg.sender)\"}},\"CommitDelayedStrategyParams(address,address,uint256,(uint32))\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\",\"origin\":\"Origin of the transaction (tx.origin)\",\"params\":\"New params that are committed\",\"sender\":\"Sender of the call (msg.sender)\"}},\"StageDelayedProtocolParams(address,address,(address,address),uint256)\":{\"params\":{\"origin\":\"Origin of the transaction (tx.origin)\",\"params\":\"New params that were staged for commit\",\"sender\":\"Sender of the call (msg.sender)\",\"when\":\"When the params could be committed\"}},\"StageDelayedStrategyParams(address,address,uint256,(uint32),uint256)\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\",\"origin\":\"Origin of the transaction (tx.origin)\",\"params\":\"New params that were staged for commit\",\"sender\":\"Sender of the call (msg.sender)\",\"when\":\"When the params could be committed\"}}},\"kind\":\"dev\",\"methods\":{\"commitDelayedStrategyParams(uint256)\":{\"details\":\"Can only be called after delayedStrategyParamsTimestamp\",\"params\":{\"nft\":\"VaultRegistry NFT of the vault\"}},\"constructor\":{\"params\":{\"delayedProtocolParams_\":\"Initial Protocol Params\",\"internalParams_\":\"Initial Internal Params\"}},\"createVault(address[],address,uint24,address)\":{\"params\":{\"fee_\":\"Fee of the UniV3 pool\",\"owner_\":\"Owner of the vault NFT\",\"uniV3Helper_\":\"address of helper for UniV3 arithmetic with ticks\",\"vaultTokens_\":\"ERC20 tokens that will be managed by this Vault\"}},\"delayedProtocolPerVaultParamsTimestamp(uint256)\":{\"params\":{\"nft\":\"Nft of the vault\"}},\"delayedStrategyParams(uint256)\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\"}},\"delayedStrategyParamsTimestamp(uint256)\":{\"params\":{\"nft\":\"Nft of the vault\"}},\"stageDelayedProtocolParams((address,address))\":{\"params\":{\"params\":\"New params\"}},\"stageDelayedStrategyParams(uint256,(uint32))\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\",\"params\":\"New params\"}},\"stageInternalParams((address,address,address))\":{\"params\":{\"newParams\":\"New Internal Params\"}},\"stagedDelayedStrategyParams(uint256)\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\"}},\"stagedInternalParams()\":{\"details\":\"The Internal Params could be committed after internalParamsTimestamp\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"events\":{\"CommitDelayedProtocolParams(address,address,(address,address))\":{\"notice\":\"Emitted when new DelayedProtocolParams are committed\"},\"CommitDelayedStrategyParams(address,address,uint256,(uint32))\":{\"notice\":\"Emitted when new DelayedStrategyParams are committed\"},\"CommitedInternalParams(address,address,(address,address,address))\":{\"notice\":\"Emitted when InternalParams are staged for commit\"},\"DeployedVault(address,address,address[],bytes,address,address,uint256)\":{\"notice\":\"Emitted when New Vault is deployed\"},\"StageDelayedProtocolParams(address,address,(address,address),uint256)\":{\"notice\":\"Emitted when new DelayedProtocolParams are staged for commit\"},\"StageDelayedStrategyParams(address,address,uint256,(uint32),uint256)\":{\"notice\":\"Emitted when new DelayedStrategyParams are staged for commit\"},\"StagedInternalParams(address,address,(address,address,address),uint256)\":{\"notice\":\"Emitted when InternalParams are staged for commit\"}},\"kind\":\"user\",\"methods\":{\"commitDelayedProtocolParams()\":{\"notice\":\"Commit Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay.\"},\"commitDelayedStrategyParams(uint256)\":{\"notice\":\"Commit Delayed Strategy Params, i.e. Params that could be changed by Strategy or Protocol Governance with Protocol Governance delay.\"},\"commitInternalParams()\":{\"notice\":\"Commit staged Internal Params.\"},\"constructor\":{\"notice\":\"Creates a new contract.\"},\"createVault(address[],address,uint24,address)\":{\"notice\":\"Deploys a new vault.\"},\"delayedProtocolParams()\":{\"notice\":\"Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay.\"},\"delayedProtocolParamsTimestamp()\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Protocol Params could be committed.\"},\"delayedProtocolPerVaultParamsTimestamp(uint256)\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Protocol Params Per Vault could be committed.\"},\"delayedStrategyParams(uint256)\":{\"notice\":\"Delayed Strategy Params\"},\"delayedStrategyParamsTimestamp(uint256)\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Strategy Params could be committed.\"},\"internalParams()\":{\"notice\":\"Internal Params of the contract.\"},\"internalParamsTimestamp()\":{\"notice\":\"Timestamp in unix time seconds after which staged Internal Params could be committed.\"},\"stageDelayedProtocolParams((address,address))\":{\"notice\":\"Stage Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay.\"},\"stageDelayedStrategyParams(uint256,(uint32))\":{\"notice\":\"Stage Delayed Strategy Params, i.e. Params that could be changed by Strategy or Protocol Governance with Protocol Governance delay.\"},\"stageInternalParams((address,address,address))\":{\"notice\":\"Stage new Internal Params.\"},\"stagedDelayedProtocolParams()\":{\"notice\":\"Delayed Protocol Params staged for commit after delay.\"},\"stagedDelayedStrategyParams(uint256)\":{\"notice\":\"Delayed Strategy Params staged for commit after delay.\"},\"stagedInternalParams()\":{\"notice\":\"Staged new Internal Params.\"}},\"notice\":\"Governance that manages all UniV3 Vaults params and can deploy a new UniV3 Vault.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vaults/UniV3VaultGovernance.sol\":\"UniV3VaultGovernance\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x693d1a6333975d5bd166fcc844874f96affecbf45dc5c34fa7d172248d74c06b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e7e0a870c4c25c619d8cef3c646ac78b9e9d4ac15d50f8f2b6729bd04cae47c\",\"dweb:/ipfs/QmNj6rGpNzq6HDnfyBNr8joZCGm23M5kWHAhYfg3BwN7JF\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0x3c3ef4fb25def71f5f18af554ca938950eb9cf218fda073ed2c69b9203c03455\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8083924ad8ee40a1254bb235c59360165b3cac1bc1e9bfd926beecc50c75cffd\",\"dweb:/ipfs/Qme9trL3Q7GAP2B18XAg1DynP1EyQ2K1GcM6MwWgKM97p5\"]},\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0xb0ff3f5c37c94cfa0da555a4c7d9034c46d70d0479917bed63612a9fc7092672\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d92b14d2421dde24a46c0b0bf71e0fd992d704c3930fbdda0cbd63ac139f801\",\"dweb:/ipfs/QmUxyqzwRvHLtsosLRh7i3CynAaojXfRJYcE1aBmeUeWrd\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x872ba21af7c1f0ae04a715beca31e8fcac764d6c8762940b0fe1bfb6ed8e86f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://497017741d74878b56a67ad51e98061bd9ec0e6e4fdbfef0e2ab51523f4c16de\",\"dweb:/ipfs/QmWfkpRHksy8jFywqYxdmMqdkQ1hxrGTPoNBXbZ48zTvyv\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x483b106386dd309f168672928252a19f30c30efb4d17d4b8e2b0f587ca784a11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://189a39d066c6886ddbe86c79bb36d6cbe66e98bc6a94956e28f5503dae4ad406\",\"dweb:/ipfs/QmT3s3PwCdXqHLJk26kcnedrRGTC9T18z52i9Be7PV9ppc\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x905cd0ecd91d1de79a4679d745b79cf852ca8ccda5d25d1c49c6bd17a5edc0cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dd1601fcd370546d8c06ea1902d7e7364fc490fbf0ebc3004230ef1f5db473c\",\"dweb:/ipfs/Qmb8zbC3TjWFtcuyP3KEEaegMkPcfeKAcPrwzvkAoMR3cZ\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x6aa521718bf139b44ce56f194f6aea1d590cacef995b5a84703fb1579fa49be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://100f8d367b5e94eb9cb991914f1de133cf272654c0708faa893bbc17a5b35b93\",\"dweb:/ipfs/QmZeBojmgXq821dL1TJKFb58B1FogM9jL3u7hXQ8hTEBKT\"]},\"contracts/interfaces/IProtocolGovernance.sol\":{\"keccak256\":\"0xda6b37c257d780a870b289b4e44badc6afb7f2301f500a440c4c020abedd98e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93ce78b05dd9bdaea807380cd44e220c217ee4bb27f311993f28ea27c82fd215\",\"dweb:/ipfs/QmcxSoA8MBtwt1FFGVcGo4LCzCSUAB3jfX5TkiafAVQbqx\"]},\"contracts/interfaces/IUnitPricesGovernance.sol\":{\"keccak256\":\"0x300050e0de7d02134592f130cdb90752dc8fcea6cab2e58eb9dafd3a7e3f4e5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1065d39058393c0da9550a424a34e2832882a530e4ddce33f5ddd17bd2d56a72\",\"dweb:/ipfs/QmX1zjA1as8jxrvZCwTyGPVAkCyh7Gg6G89757aJLoGC47\"]},\"contracts/interfaces/IVaultRegistry.sol\":{\"keccak256\":\"0x66ba86bbbe472a039ab45b556eb235c9ed64ea0d43de4f22fdf64b9b41e3f4ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8fb21d42fb95e7f8df33c227ae1b2363c7d86288f8d88a076c0163f28c2687e\",\"dweb:/ipfs/QmQboWcs8qDG1kqjoKr5QAVa6oWCHagGoYxcsmNbgYhka3\"]},\"contracts/interfaces/external/erc/IERC1271.sol\":{\"keccak256\":\"0x2081de4db31bc623043b8305bf55c676c55250a3b51deb293281d97f1ca7e9c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://712dbbd43245e0bb9ca5573170507fabb506ffe7610dc39f13b4716220479fba\",\"dweb:/ipfs/QmZybwDeFoWpzkZEmMxqPA6Jx1fn8P5ygVHSDFk4uM7xS7\"]},\"contracts/interfaces/external/univ3/INonfungiblePositionManager.sol\":{\"keccak256\":\"0x2cf07283a70e7c61de51ad6bb067fbf35219872572dfc10b3388e0e43163f9f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://35790b7ff53f908c7fb2650ebd7dafd9cd23d526db63ef7c7836cbe440efe1d2\",\"dweb:/ipfs/QmQ2R6qZoDGPRnG9FrvDBEUHbuhb6VrAw9QaqheAAqhu3B\"]},\"contracts/interfaces/external/univ3/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x4580b2db1a3e6e749dcc1d9854036b80ea83651df0670a49f1596d7bd4abae13\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e77ef1fe49205ab1f85341e2de918b7058228d2637796b8eee9fb7247270caa2\",\"dweb:/ipfs/Qme2Hpmgui9Nm24zkhPHpQBnt73ginNfkWUDxv2JT8YUBA\"]},\"contracts/interfaces/external/univ3/IUniswapV3Pool.sol\":{\"keccak256\":\"0x5ed3604a829824e7a494212a297c7df61ea3eac9e1be66b43d7e4934d66a50fb\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://741461dc04e7a02feff6db5d6a6a4b8638ed14dbef8b6d73afb85e6de77d71c5\",\"dweb:/ipfs/QmdvEiTZpsyEWLab3pyZDosJBywhLqB7QZp3ppMzshsX2N\"]},\"contracts/interfaces/external/univ3/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0xc0bbb3ed984dff71351269a84eb6e8e05b80fa82f8db633d3c79cce902b10062\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1203ca3fd412d00b180941863d57ac4fb7d87612af5cd130f5f7fad4a9434be5\",\"dweb:/ipfs/QmZxjkYTmDqmyJvTBdAkens6MpoXJ4CHuvhKe5UtYawKBV\"]},\"contracts/interfaces/external/univ3/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xa0b05b8e81826ab8b998d01e9aa5be259d1d00fc8133077969fe81ff2815fa37\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://69c1895b6b0930464290d7d5ae2ed4468965d0053ca4b8ad05793705c465eac2\",\"dweb:/ipfs/QmQXE6AqVpy5ebkTarwk1ZfRkbTGeoYpayc5KfWUdijb3L\"]},\"contracts/interfaces/external/univ3/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0x4c110f8100d8bdd61abfa008dc37dc5f98c12b5b25222ac8ac8bf99ced935300\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ef3fd138626582293a67630e3aeb17065bcc04fb018255ff89c459a81e3bd8da\",\"dweb:/ipfs/QmV7q5EoCzNJsZGkozzb55b1iM6F1kinSKrYdARf2ZkCGb\"]},\"contracts/interfaces/external/univ3/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x9eaa533e27dc574ccd9feb3323ecc892b5153c255aeb4727c161ab9885d761f0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://31989ea5752d8fa6fd3ebe743e1fbb98ec6b0d159dfbf4864958824673748664\",\"dweb:/ipfs/QmWT6hgfaAPo3yFbRx69x6SJwbizmvF95YkPxhbVipRHh6\"]},\"contracts/interfaces/oracles/IOracle.sol\":{\"keccak256\":\"0x4629a653a356248a9683d6e02a6fb738802b60086b1cb8cdbfa05385f1914b5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b733f94000de360f16dd43a6ef2ad51c42f03520f7c6827919922de5d0e1149\",\"dweb:/ipfs/QmZsdkkSrjG5cViQF5qxmU9wvnLmLKgyBvANRhTYTPaisJ\"]},\"contracts/interfaces/utils/IContractMeta.sol\":{\"keccak256\":\"0x71ab67daf730f37610ce5964dda62744edb347fa5b12210f9bb7c9239ff66e2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6f38640781fbb7476777544c34457723765be302d0b208a7e841a6361967812\",\"dweb:/ipfs/QmRKa7A3FZJvjrJwZnhKUuddfdH7J7HuRTQBbdfBwiU4rU\"]},\"contracts/interfaces/utils/IDefaultAccessControl.sol\":{\"keccak256\":\"0x847c664c3e293a19109ec872e341f254a86c6f93548cea827f4e8a485cf994cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95fc19492725d54c1792afc736ec501a1f3a46975ecf584bfd3c0bfd83b140eb\",\"dweb:/ipfs/QmXnawUkM3xxj2ytaTaekvj8FB3JeoiTrrBazhYg47wjSc\"]},\"contracts/interfaces/vaults/IIntegrationVault.sol\":{\"keccak256\":\"0xad9b4303b547c9304e51078cffc69552de4308a30036b1d07cc02a05ce5476d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ddd09b0d3b58bb44b45555f2a363db98e93016cae4518511c4d3e68736b30b5\",\"dweb:/ipfs/QmYME2tp5jr9G5JhCALziJqPLysB7tgAUTkVE7rtkydA5E\"]},\"contracts/interfaces/vaults/IUniV3Vault.sol\":{\"keccak256\":\"0xea220692057c5684a52a33e43cbdcaf0de486caa77f8e0a3c07863f08e2d0143\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://43f7df00ae6ce5ab6dbb4074a958f2566d70208d687b255c55bcdfe7aab1bef4\",\"dweb:/ipfs/QmZXUpkFgKGrYmJgcHRmd4ZDLS3ftP68LtuqM35xtPURcG\"]},\"contracts/interfaces/vaults/IUniV3VaultGovernance.sol\":{\"keccak256\":\"0xf2344aac7597dfb24e081a2ea9f420eea6802772249d79aa6e774ecd5ab46193\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b2d883233a22377b21caf31f8efdaf209af5592096fbefa89ac3168e5ad7ce64\",\"dweb:/ipfs/QmaU1Q81SGHDweFC1mihAwrXQcEfFaJ7QRdxmFh6Ahrja7\"]},\"contracts/interfaces/vaults/IVault.sol\":{\"keccak256\":\"0x9e74850f8f3ecd6eab0f6b1adaad960c443b14c128007a77260d2bb6bcb686d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87c2e0bdacc0a3fe9825f07a2de8ece41a6cc477872b10bd2b083400a13f4b8e\",\"dweb:/ipfs/QmWWvR4uQY7rXboGbVBEnDH9QvTRJW9pSmSoPq8f9p8JgT\"]},\"contracts/interfaces/vaults/IVaultGovernance.sol\":{\"keccak256\":\"0xa5b24cd080393cb094d7887bbdc04fb4361fde90280e8bf9856428b6b6ebd90d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6ce19e4c8a5b788963f895c6ebde1c84a294a284e76d9733d9bf89f75d2eca2\",\"dweb:/ipfs/QmWFXkhuaaCr3VaRaKSe12hs6DKeebQhDUqAd4z6TeByJq\"]},\"contracts/libraries/ExceptionsLibrary.sol\":{\"keccak256\":\"0x9d3c5dbb4f630168c4c2dc8954dfefd3160632c3253ac7d9fab740db83a8debe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0f1054e7ebc130cb46db7da57a16a350699020ab2e31b453677be318aaab72\",\"dweb:/ipfs/QmbNiK1uTZmhvaN9KeCvEXiKnERcaU6fxAnKPGMbUmqk9r\"]},\"contracts/libraries/PermissionIdsLibrary.sol\":{\"keccak256\":\"0x8f78667de19682976b7b5f2f13eac15d2344a0387164e819895d363e19c6058c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e94cb83c512a6dce844323b3b448fc129ae12f80305567193d472d26e852c9de\",\"dweb:/ipfs/QmUo5NYGfQPUGphL5LSTzfqtG4Gpn5JSH5SF8yy8hbv1Ha\"]},\"contracts/utils/ContractMeta.sol\":{\"keccak256\":\"0x4fbcc859f5a0e284485afbd6dd6ec95010dfa08cc278f50c884f5d8f8add3682\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4c7adf6e64fb38c9d1a19ad1c32e95358930f542b52ed02558b8fddc1440a45c\",\"dweb:/ipfs/QmZ8sj3pL6WCasw1evkHNNQu9bwCfBYzKhVy43XU6Qwqdy\"]},\"contracts/vaults/UniV3VaultGovernance.sol\":{\"keccak256\":\"0x1e5f49da6e00fe36ad4495d08134f43586a603c165c7c54d8e8eb6e2c756cd18\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a477fadec3f2800a7bff511e5312ec77618e10be95f772180fd865f512590152\",\"dweb:/ipfs/QmdKTrpPr1w4faJeaXq9Av9nSbhh7vNZEJPTndB5wWstrB\"]},\"contracts/vaults/VaultGovernance.sol\":{\"keccak256\":\"0x6c28cb23d4c00f119e8b1e2fe8c8c440160ccab9391120396bdbb1611c1a8b2c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ffb6e278d062c1ea7e53f14c6ca3e96cc263e3b42fe624072baa729841ecd888\",\"dweb:/ipfs/QmUN7c3buqgS5umRnpfP57SHXyeJDbmNEHUHd5mJfPs5Cz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2375,
								"contract": "contracts/vaults/UniV3VaultGovernance.sol:UniV3VaultGovernance",
								"label": "_internalParams",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(InternalParams)1633_storage"
							},
							{
								"astId": 2378,
								"contract": "contracts/vaults/UniV3VaultGovernance.sol:UniV3VaultGovernance",
								"label": "_stagedInternalParams",
								"offset": 0,
								"slot": "3",
								"type": "t_struct(InternalParams)1633_storage"
							},
							{
								"astId": 2380,
								"contract": "contracts/vaults/UniV3VaultGovernance.sol:UniV3VaultGovernance",
								"label": "_internalParamsTimestamp",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 2384,
								"contract": "contracts/vaults/UniV3VaultGovernance.sol:UniV3VaultGovernance",
								"label": "_delayedStrategyParams",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_bytes_storage)"
							},
							{
								"astId": 2388,
								"contract": "contracts/vaults/UniV3VaultGovernance.sol:UniV3VaultGovernance",
								"label": "_stagedDelayedStrategyParams",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_bytes_storage)"
							},
							{
								"astId": 2392,
								"contract": "contracts/vaults/UniV3VaultGovernance.sol:UniV3VaultGovernance",
								"label": "_delayedStrategyParamsTimestamp",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 2396,
								"contract": "contracts/vaults/UniV3VaultGovernance.sol:UniV3VaultGovernance",
								"label": "_delayedProtocolPerVaultParams",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_bytes_storage)"
							},
							{
								"astId": 2400,
								"contract": "contracts/vaults/UniV3VaultGovernance.sol:UniV3VaultGovernance",
								"label": "_stagedDelayedProtocolPerVaultParams",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_uint256,t_bytes_storage)"
							},
							{
								"astId": 2404,
								"contract": "contracts/vaults/UniV3VaultGovernance.sol:UniV3VaultGovernance",
								"label": "_delayedProtocolPerVaultParamsTimestamp",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 2406,
								"contract": "contracts/vaults/UniV3VaultGovernance.sol:UniV3VaultGovernance",
								"label": "_delayedProtocolParams",
								"offset": 0,
								"slot": "13",
								"type": "t_bytes_storage"
							},
							{
								"astId": 2408,
								"contract": "contracts/vaults/UniV3VaultGovernance.sol:UniV3VaultGovernance",
								"label": "_stagedDelayedProtocolParams",
								"offset": 0,
								"slot": "14",
								"type": "t_bytes_storage"
							},
							{
								"astId": 2410,
								"contract": "contracts/vaults/UniV3VaultGovernance.sol:UniV3VaultGovernance",
								"label": "_delayedProtocolParamsTimestamp",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							},
							{
								"astId": 2414,
								"contract": "contracts/vaults/UniV3VaultGovernance.sol:UniV3VaultGovernance",
								"label": "_strategyParams",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_uint256,t_bytes_storage)"
							},
							{
								"astId": 2416,
								"contract": "contracts/vaults/UniV3VaultGovernance.sol:UniV3VaultGovernance",
								"label": "_protocolParams",
								"offset": 0,
								"slot": "17",
								"type": "t_bytes_storage"
							},
							{
								"astId": 2418,
								"contract": "contracts/vaults/UniV3VaultGovernance.sol:UniV3VaultGovernance",
								"label": "_operatorParams",
								"offset": 0,
								"slot": "18",
								"type": "t_bytes_storage"
							}
						],
						"types": {
							"t_bytes_storage": {
								"encoding": "bytes",
								"label": "bytes",
								"numberOfBytes": "32"
							},
							"t_contract(IProtocolGovernance)610": {
								"encoding": "inplace",
								"label": "contract IProtocolGovernance",
								"numberOfBytes": "20"
							},
							"t_contract(IVault)1618": {
								"encoding": "inplace",
								"label": "contract IVault",
								"numberOfBytes": "20"
							},
							"t_contract(IVaultRegistry)754": {
								"encoding": "inplace",
								"label": "contract IVaultRegistry",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_bytes_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bytes)",
								"numberOfBytes": "32",
								"value": "t_bytes_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(InternalParams)1633_storage": {
								"encoding": "inplace",
								"label": "struct IVaultGovernance.InternalParams",
								"members": [
									{
										"astId": 1626,
										"contract": "contracts/vaults/UniV3VaultGovernance.sol:UniV3VaultGovernance",
										"label": "protocolGovernance",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IProtocolGovernance)610"
									},
									{
										"astId": 1629,
										"contract": "contracts/vaults/UniV3VaultGovernance.sol:UniV3VaultGovernance",
										"label": "registry",
										"offset": 0,
										"slot": "1",
										"type": "t_contract(IVaultRegistry)754"
									},
									{
										"astId": 1632,
										"contract": "contracts/vaults/UniV3VaultGovernance.sol:UniV3VaultGovernance",
										"label": "singleton",
										"offset": 0,
										"slot": "2",
										"type": "t_contract(IVault)1618"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"CommitDelayedProtocolParams(address,address,(address,address))": {
								"notice": "Emitted when new DelayedProtocolParams are committed"
							},
							"CommitDelayedStrategyParams(address,address,uint256,(uint32))": {
								"notice": "Emitted when new DelayedStrategyParams are committed"
							},
							"CommitedInternalParams(address,address,(address,address,address))": {
								"notice": "Emitted when InternalParams are staged for commit"
							},
							"DeployedVault(address,address,address[],bytes,address,address,uint256)": {
								"notice": "Emitted when New Vault is deployed"
							},
							"StageDelayedProtocolParams(address,address,(address,address),uint256)": {
								"notice": "Emitted when new DelayedProtocolParams are staged for commit"
							},
							"StageDelayedStrategyParams(address,address,uint256,(uint32),uint256)": {
								"notice": "Emitted when new DelayedStrategyParams are staged for commit"
							},
							"StagedInternalParams(address,address,(address,address,address),uint256)": {
								"notice": "Emitted when InternalParams are staged for commit"
							}
						},
						"kind": "user",
						"methods": {
							"commitDelayedProtocolParams()": {
								"notice": "Commit Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay."
							},
							"commitDelayedStrategyParams(uint256)": {
								"notice": "Commit Delayed Strategy Params, i.e. Params that could be changed by Strategy or Protocol Governance with Protocol Governance delay."
							},
							"commitInternalParams()": {
								"notice": "Commit staged Internal Params."
							},
							"constructor": {
								"notice": "Creates a new contract."
							},
							"createVault(address[],address,uint24,address)": {
								"notice": "Deploys a new vault."
							},
							"delayedProtocolParams()": {
								"notice": "Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay."
							},
							"delayedProtocolParamsTimestamp()": {
								"notice": "Timestamp in unix time seconds after which staged Delayed Protocol Params could be committed."
							},
							"delayedProtocolPerVaultParamsTimestamp(uint256)": {
								"notice": "Timestamp in unix time seconds after which staged Delayed Protocol Params Per Vault could be committed."
							},
							"delayedStrategyParams(uint256)": {
								"notice": "Delayed Strategy Params"
							},
							"delayedStrategyParamsTimestamp(uint256)": {
								"notice": "Timestamp in unix time seconds after which staged Delayed Strategy Params could be committed."
							},
							"internalParams()": {
								"notice": "Internal Params of the contract."
							},
							"internalParamsTimestamp()": {
								"notice": "Timestamp in unix time seconds after which staged Internal Params could be committed."
							},
							"stageDelayedProtocolParams((address,address))": {
								"notice": "Stage Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay."
							},
							"stageDelayedStrategyParams(uint256,(uint32))": {
								"notice": "Stage Delayed Strategy Params, i.e. Params that could be changed by Strategy or Protocol Governance with Protocol Governance delay."
							},
							"stageInternalParams((address,address,address))": {
								"notice": "Stage new Internal Params."
							},
							"stagedDelayedProtocolParams()": {
								"notice": "Delayed Protocol Params staged for commit after delay."
							},
							"stagedDelayedStrategyParams(uint256)": {
								"notice": "Delayed Strategy Params staged for commit after delay."
							},
							"stagedInternalParams()": {
								"notice": "Staged new Internal Params."
							}
						},
						"notice": "Governance that manages all UniV3 Vaults params and can deploy a new UniV3 Vault.",
						"version": 1
					}
				}
			},
			"contracts/vaults/VaultGovernance.sol": {
				"VaultGovernance": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "origin",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "contract IProtocolGovernance",
											"name": "protocolGovernance",
											"type": "address"
										},
										{
											"internalType": "contract IVaultRegistry",
											"name": "registry",
											"type": "address"
										},
										{
											"internalType": "contract IVault",
											"name": "singleton",
											"type": "address"
										}
									],
									"indexed": false,
									"internalType": "struct IVaultGovernance.InternalParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "CommitedInternalParams",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "origin",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address[]",
									"name": "vaultTokens",
									"type": "address[]"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "options",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "vaultAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "vaultNft",
									"type": "uint256"
								}
							],
							"name": "DeployedVault",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "origin",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "contract IProtocolGovernance",
											"name": "protocolGovernance",
											"type": "address"
										},
										{
											"internalType": "contract IVaultRegistry",
											"name": "registry",
											"type": "address"
										},
										{
											"internalType": "contract IVault",
											"name": "singleton",
											"type": "address"
										}
									],
									"indexed": false,
									"internalType": "struct IVaultGovernance.InternalParams",
									"name": "params",
									"type": "tuple"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "when",
									"type": "uint256"
								}
							],
							"name": "StagedInternalParams",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "commitInternalParams",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "delayedProtocolParamsTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nft",
									"type": "uint256"
								}
							],
							"name": "delayedProtocolPerVaultParamsTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nft",
									"type": "uint256"
								}
							],
							"name": "delayedStrategyParamsTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "internalParams",
							"outputs": [
								{
									"components": [
										{
											"internalType": "contract IProtocolGovernance",
											"name": "protocolGovernance",
											"type": "address"
										},
										{
											"internalType": "contract IVaultRegistry",
											"name": "registry",
											"type": "address"
										},
										{
											"internalType": "contract IVault",
											"name": "singleton",
											"type": "address"
										}
									],
									"internalType": "struct IVaultGovernance.InternalParams",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "internalParamsTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "contract IProtocolGovernance",
											"name": "protocolGovernance",
											"type": "address"
										},
										{
											"internalType": "contract IVaultRegistry",
											"name": "registry",
											"type": "address"
										},
										{
											"internalType": "contract IVault",
											"name": "singleton",
											"type": "address"
										}
									],
									"internalType": "struct IVaultGovernance.InternalParams",
									"name": "newParams",
									"type": "tuple"
								}
							],
							"name": "stageInternalParams",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stagedInternalParams",
							"outputs": [
								{
									"components": [
										{
											"internalType": "contract IProtocolGovernance",
											"name": "protocolGovernance",
											"type": "address"
										},
										{
											"internalType": "contract IVaultRegistry",
											"name": "registry",
											"type": "address"
										},
										{
											"internalType": "contract IVault",
											"name": "singleton",
											"type": "address"
										}
									],
									"internalType": "struct IVaultGovernance.InternalParams",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The contract should be overriden by the concrete VaultGovernance, define different params structs and use abi.decode / abi.encode to serialize to bytes in this contract. It also should emit events on params change.",
						"events": {
							"CommitedInternalParams(address,address,(address,address,address))": {
								"params": {
									"origin": "Origin of the transaction (tx.origin)",
									"params": "New params that were staged for commit",
									"sender": "Sender of the call (msg.sender)"
								}
							},
							"DeployedVault(address,address,address[],bytes,address,address,uint256)": {
								"params": {
									"options": "Options for deploy. The details of the options structure are specified in subcontracts",
									"origin": "Origin of the transaction (tx.origin)",
									"owner": "Owner of the VaultRegistry NFT for this vault",
									"sender": "Sender of the call (msg.sender)",
									"vaultAddress": "Address of the new Vault",
									"vaultNft": "VaultRegistry NFT for the new Vault",
									"vaultTokens": "Vault tokens for this vault"
								}
							},
							"StagedInternalParams(address,address,(address,address,address),uint256)": {
								"params": {
									"origin": "Origin of the transaction (tx.origin)",
									"params": "New params that were staged for commit",
									"sender": "Sender of the call (msg.sender)",
									"when": "When the params could be committed"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"internalParams_": "Initial Internal Params"
								}
							},
							"delayedProtocolPerVaultParamsTimestamp(uint256)": {
								"params": {
									"nft": "Nft of the vault"
								}
							},
							"delayedStrategyParamsTimestamp(uint256)": {
								"params": {
									"nft": "Nft of the vault"
								}
							},
							"stageInternalParams((address,address,address))": {
								"params": {
									"newParams": "New Internal Params"
								}
							},
							"stagedInternalParams()": {
								"details": "The Internal Params could be committed after internalParamsTimestamp"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"commitInternalParams()": "d4a07d34",
							"delayedProtocolParamsTimestamp()": "e4af6e79",
							"delayedProtocolPerVaultParamsTimestamp(uint256)": "511ce798",
							"delayedStrategyParamsTimestamp(uint256)": "6707acee",
							"internalParams()": "7ac46fbb",
							"internalParamsTimestamp()": "1c7f4c73",
							"stageInternalParams((address,address,address))": "09946538",
							"stagedInternalParams()": "86c6be3e",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"CommitedInternalParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"vaultTokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vaultAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultNft\",\"type\":\"uint256\"}],\"name\":\"DeployedVault\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"when\",\"type\":\"uint256\"}],\"name\":\"StagedInternalParams\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"commitInternalParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delayedProtocolParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"delayedProtocolPerVaultParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"delayedStrategyParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"internalParams\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"internalParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"newParams\",\"type\":\"tuple\"}],\"name\":\"stageInternalParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stagedInternalParams\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The contract should be overriden by the concrete VaultGovernance, define different params structs and use abi.decode / abi.encode to serialize to bytes in this contract. It also should emit events on params change.\",\"events\":{\"CommitedInternalParams(address,address,(address,address,address))\":{\"params\":{\"origin\":\"Origin of the transaction (tx.origin)\",\"params\":\"New params that were staged for commit\",\"sender\":\"Sender of the call (msg.sender)\"}},\"DeployedVault(address,address,address[],bytes,address,address,uint256)\":{\"params\":{\"options\":\"Options for deploy. The details of the options structure are specified in subcontracts\",\"origin\":\"Origin of the transaction (tx.origin)\",\"owner\":\"Owner of the VaultRegistry NFT for this vault\",\"sender\":\"Sender of the call (msg.sender)\",\"vaultAddress\":\"Address of the new Vault\",\"vaultNft\":\"VaultRegistry NFT for the new Vault\",\"vaultTokens\":\"Vault tokens for this vault\"}},\"StagedInternalParams(address,address,(address,address,address),uint256)\":{\"params\":{\"origin\":\"Origin of the transaction (tx.origin)\",\"params\":\"New params that were staged for commit\",\"sender\":\"Sender of the call (msg.sender)\",\"when\":\"When the params could be committed\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"internalParams_\":\"Initial Internal Params\"}},\"delayedProtocolPerVaultParamsTimestamp(uint256)\":{\"params\":{\"nft\":\"Nft of the vault\"}},\"delayedStrategyParamsTimestamp(uint256)\":{\"params\":{\"nft\":\"Nft of the vault\"}},\"stageInternalParams((address,address,address))\":{\"params\":{\"newParams\":\"New Internal Params\"}},\"stagedInternalParams()\":{\"details\":\"The Internal Params could be committed after internalParamsTimestamp\"}},\"version\":1},\"userdoc\":{\"events\":{\"CommitedInternalParams(address,address,(address,address,address))\":{\"notice\":\"Emitted when InternalParams are staged for commit\"},\"DeployedVault(address,address,address[],bytes,address,address,uint256)\":{\"notice\":\"Emitted when New Vault is deployed\"},\"StagedInternalParams(address,address,(address,address,address),uint256)\":{\"notice\":\"Emitted when InternalParams are staged for commit\"}},\"kind\":\"user\",\"methods\":{\"commitInternalParams()\":{\"notice\":\"Commit staged Internal Params.\"},\"constructor\":{\"notice\":\"Creates a new contract.\"},\"delayedProtocolParamsTimestamp()\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Protocol Params could be committed.\"},\"delayedProtocolPerVaultParamsTimestamp(uint256)\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Protocol Params Per Vault could be committed.\"},\"delayedStrategyParamsTimestamp(uint256)\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Strategy Params could be committed.\"},\"internalParams()\":{\"notice\":\"Internal Params of the contract.\"},\"internalParamsTimestamp()\":{\"notice\":\"Timestamp in unix time seconds after which staged Internal Params could be committed.\"},\"stageInternalParams((address,address,address))\":{\"notice\":\"Stage new Internal Params.\"},\"stagedInternalParams()\":{\"notice\":\"Staged new Internal Params.\"}},\"notice\":\"Internal contract for managing different params.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vaults/VaultGovernance.sol\":\"VaultGovernance\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x693d1a6333975d5bd166fcc844874f96affecbf45dc5c34fa7d172248d74c06b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e7e0a870c4c25c619d8cef3c646ac78b9e9d4ac15d50f8f2b6729bd04cae47c\",\"dweb:/ipfs/QmNj6rGpNzq6HDnfyBNr8joZCGm23M5kWHAhYfg3BwN7JF\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0x3c3ef4fb25def71f5f18af554ca938950eb9cf218fda073ed2c69b9203c03455\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8083924ad8ee40a1254bb235c59360165b3cac1bc1e9bfd926beecc50c75cffd\",\"dweb:/ipfs/Qme9trL3Q7GAP2B18XAg1DynP1EyQ2K1GcM6MwWgKM97p5\"]},\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0xb0ff3f5c37c94cfa0da555a4c7d9034c46d70d0479917bed63612a9fc7092672\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d92b14d2421dde24a46c0b0bf71e0fd992d704c3930fbdda0cbd63ac139f801\",\"dweb:/ipfs/QmUxyqzwRvHLtsosLRh7i3CynAaojXfRJYcE1aBmeUeWrd\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x872ba21af7c1f0ae04a715beca31e8fcac764d6c8762940b0fe1bfb6ed8e86f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://497017741d74878b56a67ad51e98061bd9ec0e6e4fdbfef0e2ab51523f4c16de\",\"dweb:/ipfs/QmWfkpRHksy8jFywqYxdmMqdkQ1hxrGTPoNBXbZ48zTvyv\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x905cd0ecd91d1de79a4679d745b79cf852ca8ccda5d25d1c49c6bd17a5edc0cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dd1601fcd370546d8c06ea1902d7e7364fc490fbf0ebc3004230ef1f5db473c\",\"dweb:/ipfs/Qmb8zbC3TjWFtcuyP3KEEaegMkPcfeKAcPrwzvkAoMR3cZ\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x6aa521718bf139b44ce56f194f6aea1d590cacef995b5a84703fb1579fa49be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://100f8d367b5e94eb9cb991914f1de133cf272654c0708faa893bbc17a5b35b93\",\"dweb:/ipfs/QmZeBojmgXq821dL1TJKFb58B1FogM9jL3u7hXQ8hTEBKT\"]},\"contracts/interfaces/IProtocolGovernance.sol\":{\"keccak256\":\"0xda6b37c257d780a870b289b4e44badc6afb7f2301f500a440c4c020abedd98e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93ce78b05dd9bdaea807380cd44e220c217ee4bb27f311993f28ea27c82fd215\",\"dweb:/ipfs/QmcxSoA8MBtwt1FFGVcGo4LCzCSUAB3jfX5TkiafAVQbqx\"]},\"contracts/interfaces/IUnitPricesGovernance.sol\":{\"keccak256\":\"0x300050e0de7d02134592f130cdb90752dc8fcea6cab2e58eb9dafd3a7e3f4e5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1065d39058393c0da9550a424a34e2832882a530e4ddce33f5ddd17bd2d56a72\",\"dweb:/ipfs/QmX1zjA1as8jxrvZCwTyGPVAkCyh7Gg6G89757aJLoGC47\"]},\"contracts/interfaces/IVaultRegistry.sol\":{\"keccak256\":\"0x66ba86bbbe472a039ab45b556eb235c9ed64ea0d43de4f22fdf64b9b41e3f4ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8fb21d42fb95e7f8df33c227ae1b2363c7d86288f8d88a076c0163f28c2687e\",\"dweb:/ipfs/QmQboWcs8qDG1kqjoKr5QAVa6oWCHagGoYxcsmNbgYhka3\"]},\"contracts/interfaces/utils/IDefaultAccessControl.sol\":{\"keccak256\":\"0x847c664c3e293a19109ec872e341f254a86c6f93548cea827f4e8a485cf994cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95fc19492725d54c1792afc736ec501a1f3a46975ecf584bfd3c0bfd83b140eb\",\"dweb:/ipfs/QmXnawUkM3xxj2ytaTaekvj8FB3JeoiTrrBazhYg47wjSc\"]},\"contracts/interfaces/vaults/IVault.sol\":{\"keccak256\":\"0x9e74850f8f3ecd6eab0f6b1adaad960c443b14c128007a77260d2bb6bcb686d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87c2e0bdacc0a3fe9825f07a2de8ece41a6cc477872b10bd2b083400a13f4b8e\",\"dweb:/ipfs/QmWWvR4uQY7rXboGbVBEnDH9QvTRJW9pSmSoPq8f9p8JgT\"]},\"contracts/interfaces/vaults/IVaultGovernance.sol\":{\"keccak256\":\"0xa5b24cd080393cb094d7887bbdc04fb4361fde90280e8bf9856428b6b6ebd90d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6ce19e4c8a5b788963f895c6ebde1c84a294a284e76d9733d9bf89f75d2eca2\",\"dweb:/ipfs/QmWFXkhuaaCr3VaRaKSe12hs6DKeebQhDUqAd4z6TeByJq\"]},\"contracts/libraries/ExceptionsLibrary.sol\":{\"keccak256\":\"0x9d3c5dbb4f630168c4c2dc8954dfefd3160632c3253ac7d9fab740db83a8debe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0f1054e7ebc130cb46db7da57a16a350699020ab2e31b453677be318aaab72\",\"dweb:/ipfs/QmbNiK1uTZmhvaN9KeCvEXiKnERcaU6fxAnKPGMbUmqk9r\"]},\"contracts/libraries/PermissionIdsLibrary.sol\":{\"keccak256\":\"0x8f78667de19682976b7b5f2f13eac15d2344a0387164e819895d363e19c6058c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e94cb83c512a6dce844323b3b448fc129ae12f80305567193d472d26e852c9de\",\"dweb:/ipfs/QmUo5NYGfQPUGphL5LSTzfqtG4Gpn5JSH5SF8yy8hbv1Ha\"]},\"contracts/vaults/VaultGovernance.sol\":{\"keccak256\":\"0x6c28cb23d4c00f119e8b1e2fe8c8c440160ccab9391120396bdbb1611c1a8b2c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ffb6e278d062c1ea7e53f14c6ca3e96cc263e3b42fe624072baa729841ecd888\",\"dweb:/ipfs/QmUN7c3buqgS5umRnpfP57SHXyeJDbmNEHUHd5mJfPs5Cz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2375,
								"contract": "contracts/vaults/VaultGovernance.sol:VaultGovernance",
								"label": "_internalParams",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(InternalParams)1633_storage"
							},
							{
								"astId": 2378,
								"contract": "contracts/vaults/VaultGovernance.sol:VaultGovernance",
								"label": "_stagedInternalParams",
								"offset": 0,
								"slot": "3",
								"type": "t_struct(InternalParams)1633_storage"
							},
							{
								"astId": 2380,
								"contract": "contracts/vaults/VaultGovernance.sol:VaultGovernance",
								"label": "_internalParamsTimestamp",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 2384,
								"contract": "contracts/vaults/VaultGovernance.sol:VaultGovernance",
								"label": "_delayedStrategyParams",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_bytes_storage)"
							},
							{
								"astId": 2388,
								"contract": "contracts/vaults/VaultGovernance.sol:VaultGovernance",
								"label": "_stagedDelayedStrategyParams",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_bytes_storage)"
							},
							{
								"astId": 2392,
								"contract": "contracts/vaults/VaultGovernance.sol:VaultGovernance",
								"label": "_delayedStrategyParamsTimestamp",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 2396,
								"contract": "contracts/vaults/VaultGovernance.sol:VaultGovernance",
								"label": "_delayedProtocolPerVaultParams",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_bytes_storage)"
							},
							{
								"astId": 2400,
								"contract": "contracts/vaults/VaultGovernance.sol:VaultGovernance",
								"label": "_stagedDelayedProtocolPerVaultParams",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_uint256,t_bytes_storage)"
							},
							{
								"astId": 2404,
								"contract": "contracts/vaults/VaultGovernance.sol:VaultGovernance",
								"label": "_delayedProtocolPerVaultParamsTimestamp",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 2406,
								"contract": "contracts/vaults/VaultGovernance.sol:VaultGovernance",
								"label": "_delayedProtocolParams",
								"offset": 0,
								"slot": "13",
								"type": "t_bytes_storage"
							},
							{
								"astId": 2408,
								"contract": "contracts/vaults/VaultGovernance.sol:VaultGovernance",
								"label": "_stagedDelayedProtocolParams",
								"offset": 0,
								"slot": "14",
								"type": "t_bytes_storage"
							},
							{
								"astId": 2410,
								"contract": "contracts/vaults/VaultGovernance.sol:VaultGovernance",
								"label": "_delayedProtocolParamsTimestamp",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							},
							{
								"astId": 2414,
								"contract": "contracts/vaults/VaultGovernance.sol:VaultGovernance",
								"label": "_strategyParams",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_uint256,t_bytes_storage)"
							},
							{
								"astId": 2416,
								"contract": "contracts/vaults/VaultGovernance.sol:VaultGovernance",
								"label": "_protocolParams",
								"offset": 0,
								"slot": "17",
								"type": "t_bytes_storage"
							},
							{
								"astId": 2418,
								"contract": "contracts/vaults/VaultGovernance.sol:VaultGovernance",
								"label": "_operatorParams",
								"offset": 0,
								"slot": "18",
								"type": "t_bytes_storage"
							}
						],
						"types": {
							"t_bytes_storage": {
								"encoding": "bytes",
								"label": "bytes",
								"numberOfBytes": "32"
							},
							"t_contract(IProtocolGovernance)610": {
								"encoding": "inplace",
								"label": "contract IProtocolGovernance",
								"numberOfBytes": "20"
							},
							"t_contract(IVault)1618": {
								"encoding": "inplace",
								"label": "contract IVault",
								"numberOfBytes": "20"
							},
							"t_contract(IVaultRegistry)754": {
								"encoding": "inplace",
								"label": "contract IVaultRegistry",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_bytes_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bytes)",
								"numberOfBytes": "32",
								"value": "t_bytes_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(InternalParams)1633_storage": {
								"encoding": "inplace",
								"label": "struct IVaultGovernance.InternalParams",
								"members": [
									{
										"astId": 1626,
										"contract": "contracts/vaults/VaultGovernance.sol:VaultGovernance",
										"label": "protocolGovernance",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IProtocolGovernance)610"
									},
									{
										"astId": 1629,
										"contract": "contracts/vaults/VaultGovernance.sol:VaultGovernance",
										"label": "registry",
										"offset": 0,
										"slot": "1",
										"type": "t_contract(IVaultRegistry)754"
									},
									{
										"astId": 1632,
										"contract": "contracts/vaults/VaultGovernance.sol:VaultGovernance",
										"label": "singleton",
										"offset": 0,
										"slot": "2",
										"type": "t_contract(IVault)1618"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"CommitedInternalParams(address,address,(address,address,address))": {
								"notice": "Emitted when InternalParams are staged for commit"
							},
							"DeployedVault(address,address,address[],bytes,address,address,uint256)": {
								"notice": "Emitted when New Vault is deployed"
							},
							"StagedInternalParams(address,address,(address,address,address),uint256)": {
								"notice": "Emitted when InternalParams are staged for commit"
							}
						},
						"kind": "user",
						"methods": {
							"commitInternalParams()": {
								"notice": "Commit staged Internal Params."
							},
							"constructor": {
								"notice": "Creates a new contract."
							},
							"delayedProtocolParamsTimestamp()": {
								"notice": "Timestamp in unix time seconds after which staged Delayed Protocol Params could be committed."
							},
							"delayedProtocolPerVaultParamsTimestamp(uint256)": {
								"notice": "Timestamp in unix time seconds after which staged Delayed Protocol Params Per Vault could be committed."
							},
							"delayedStrategyParamsTimestamp(uint256)": {
								"notice": "Timestamp in unix time seconds after which staged Delayed Strategy Params could be committed."
							},
							"internalParams()": {
								"notice": "Internal Params of the contract."
							},
							"internalParamsTimestamp()": {
								"notice": "Timestamp in unix time seconds after which staged Internal Params could be committed."
							},
							"stageInternalParams((address,address,address))": {
								"notice": "Stage new Internal Params."
							},
							"stagedInternalParams()": {
								"notice": "Staged new Internal Params."
							}
						},
						"notice": "Internal contract for managing different params.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							72
						]
					},
					"id": 73,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "119:89:0",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 72,
							"linearizedBaseContracts": [
								72
							],
							"name": "IAccessControl",
							"nameLocation": "219:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "240:292:0",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"id": 11,
									"name": "RoleAdminChanged",
									"nameLocation": "543:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "576:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "560:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "598:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "582:33:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 6,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "633:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "617:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 8,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:87:0"
									},
									"src": "537:110:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "653:212:0",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"id": 20,
									"name": "RoleGranted",
									"nameLocation": "876:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "904:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "888:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 13,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "926:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "910:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "951:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "935:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:71:0"
									},
									"src": "870:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "965:275:0",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"id": 29,
									"name": "RoleRevoked",
									"nameLocation": "1251:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1279:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "1263:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 22,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1301:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "1285:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1326:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "1310:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:71:0"
									},
									"src": "1245:89:0"
								},
								{
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "1340:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 39,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1430:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1446:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1438:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1460:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1452:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:31:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1492:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 36,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1492:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:6:0"
									},
									"scope": 72,
									"src": "1421:77:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "1504:184:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 47,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1702:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1723:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "1715:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 41,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1714:14:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "1752:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 44,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:9:0"
									},
									"scope": 72,
									"src": "1693:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "1767:239:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 55,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2020:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2038:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "2030:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 49,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2052:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "2044:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:31:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2069:0:0"
									},
									"scope": 72,
									"src": "2011:59:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 56,
										"nodeType": "StructuredDocumentation",
										"src": "2076:223:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 63,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2313:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2332:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2324:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 57,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2346:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2338:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2338:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:31:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2363:0:0"
									},
									"scope": 72,
									"src": "2304:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "2370:480:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2864:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2885:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2877:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 65,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2899:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2891:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:31:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2916:0:0"
									},
									"scope": 72,
									"src": "2855:62:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 73,
							"src": "209:2710:0",
							"usedErrors": []
						}
					],
					"src": "94:2826:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControlEnumerable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControlEnumerable.sol",
					"exportedSymbols": {
						"IAccessControl": [
							72
						],
						"IAccessControlEnumerable": [
							97
						]
					},
					"id": 98,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 74,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "104:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 75,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 98,
							"sourceUnit": 73,
							"src": "129:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 77,
										"name": "IAccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 72,
										"src": "299:14:1"
									},
									"id": 78,
									"nodeType": "InheritanceSpecifier",
									"src": "299:14:1"
								}
							],
							"canonicalName": "IAccessControlEnumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 76,
								"nodeType": "StructuredDocumentation",
								"src": "161:99:1",
								"text": " @dev External interface of AccessControlEnumerable declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 97,
							"linearizedBaseContracts": [
								97,
								72
							],
							"name": "IAccessControlEnumerable",
							"nameLocation": "271:24:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "320:574:1",
										"text": " @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."
									},
									"functionSelector": "9010d07c",
									"id": 88,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMember",
									"nameLocation": "908:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "930:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "922:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 80,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "922:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "944:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "936:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "936:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "921:29:1"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "974:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "973:9:1"
									},
									"scope": 97,
									"src": "899:84:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "989:157:1",
										"text": " @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."
									},
									"functionSelector": "ca15c873",
									"id": 96,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMemberCount",
									"nameLocation": "1160:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1187:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1179:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 90,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1179:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1178:14:1"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1216:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1216:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1215:9:1"
									},
									"scope": 97,
									"src": "1151:74:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 98,
							"src": "261:966:1",
							"usedErrors": []
						}
					],
					"src": "104:1124:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
					"exportedSymbols": {
						"Clones": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 99,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "85:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Clones",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 100,
								"nodeType": "StructuredDocumentation",
								"src": "110:629:2",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method.\n _Available since v3.4._"
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Clones",
							"nameLocation": "748:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "1033:440:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1052:348:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1066:22:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1083:4:2",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1077:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1077:11:2"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nodeType": "YulTypedName",
																	"src": "1070:3:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "1108:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1113:66:2",
																		"type": "",
																		"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1101:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1101:79:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1101:79:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "1204:3:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1209:4:2",
																				"type": "",
																				"value": "0x14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1200:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1200:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1220:4:2",
																				"type": "",
																				"value": "0x60"
																			},
																			{
																				"name": "implementation",
																				"nodeType": "YulIdentifier",
																				"src": "1226:14:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1216:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1216:25:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:49:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:49:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "1266:3:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1271:4:2",
																				"type": "",
																				"value": "0x28"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1262:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1262:14:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1278:66:2",
																		"type": "",
																		"value": "0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1255:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1255:90:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1255:90:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1358:32:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1377:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "1380:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1385:4:2",
																		"type": "",
																		"value": "0x37"
																	}
																],
																"functionName": {
																	"name": "create",
																	"nodeType": "YulIdentifier",
																	"src": "1370:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1370:20:2"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nodeType": "YulIdentifier",
																	"src": "1358:8:2"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 103,
														"isOffset": false,
														"isSlot": false,
														"src": "1226:14:2",
														"valueSize": 1
													},
													{
														"declaration": 106,
														"isOffset": false,
														"isSlot": false,
														"src": "1358:8:2",
														"valueSize": 1
													}
												],
												"id": 108,
												"nodeType": "InlineAssembly",
												"src": "1043:357:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 110,
																"name": "instance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 106,
																"src": "1417:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1437:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1429:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 111,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1429:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1429:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1417:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313136373a20637265617465206661696c6564",
															"id": 116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1441:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335",
																"typeString": "literal_string \"ERC1167: create failed\""
															},
															"value": "ERC1167: create failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335",
																"typeString": "literal_string \"ERC1167: create failed\""
															}
														],
														"id": 109,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1409:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1409:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "1409:57:2"
											}
										]
									},
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "761:192:2",
										"text": " @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create opcode, which should never revert."
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clone",
									"nameLocation": "967:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "981:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "973:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:24:2"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "1023:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1015:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1014:18:2"
									},
									"scope": 177,
									"src": "958:515:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "1950:448:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1969:355:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1983:22:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2000:4:2",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1994:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1994:11:2"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nodeType": "YulTypedName",
																	"src": "1987:3:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2025:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2030:66:2",
																		"type": "",
																		"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2018:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2018:79:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2018:79:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "2121:3:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2126:4:2",
																				"type": "",
																				"value": "0x14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2117:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2117:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2137:4:2",
																				"type": "",
																				"value": "0x60"
																			},
																			{
																				"name": "implementation",
																				"nodeType": "YulIdentifier",
																				"src": "2143:14:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2133:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2133:25:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2110:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2110:49:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2110:49:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "2183:3:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2188:4:2",
																				"type": "",
																				"value": "0x28"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2179:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2179:14:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2195:66:2",
																		"type": "",
																		"value": "0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2172:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2172:90:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2172:90:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2275:39:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2295:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2298:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2303:4:2",
																		"type": "",
																		"value": "0x37"
																	},
																	{
																		"name": "salt",
																		"nodeType": "YulIdentifier",
																		"src": "2309:4:2"
																	}
																],
																"functionName": {
																	"name": "create2",
																	"nodeType": "YulIdentifier",
																	"src": "2287:7:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2287:27:2"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nodeType": "YulIdentifier",
																	"src": "2275:8:2"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 123,
														"isOffset": false,
														"isSlot": false,
														"src": "2143:14:2",
														"valueSize": 1
													},
													{
														"declaration": 128,
														"isOffset": false,
														"isSlot": false,
														"src": "2275:8:2",
														"valueSize": 1
													},
													{
														"declaration": 125,
														"isOffset": false,
														"isSlot": false,
														"src": "2309:4:2",
														"valueSize": 1
													}
												],
												"id": 130,
												"nodeType": "InlineAssembly",
												"src": "1960:364:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 132,
																"name": "instance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 128,
																"src": "2341:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2361:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2353:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 133,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2353:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2353:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2341:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313136373a2063726561746532206661696c6564",
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2365:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73",
																"typeString": "literal_string \"ERC1167: create2 failed\""
															},
															"value": "ERC1167: create2 failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73",
																"typeString": "literal_string \"ERC1167: create2 failed\""
															}
														],
														"id": 131,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2333:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2333:58:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2333:58:2"
											}
										]
									},
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "1479:364:2",
										"text": " @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple time will revert, since\n the clones cannot be deployed twice at the same address."
									},
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministic",
									"nameLocation": "1857:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1884:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "1876:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1876:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "1908:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "1900:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 124,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1900:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1875:38:2"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "1940:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "1932:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1932:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1931:18:2"
									},
									"scope": 177,
									"src": "1848:550:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "2673:539:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2692:514:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2706:22:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2723:4:2",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2717:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2717:11:2"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nodeType": "YulTypedName",
																	"src": "2710:3:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2748:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2753:66:2",
																		"type": "",
																		"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2741:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2741:79:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2741:79:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "2844:3:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2849:4:2",
																				"type": "",
																				"value": "0x14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2840:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2840:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2860:4:2",
																				"type": "",
																				"value": "0x60"
																			},
																			{
																				"name": "implementation",
																				"nodeType": "YulIdentifier",
																				"src": "2866:14:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2856:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2856:25:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2833:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2833:49:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2833:49:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "2906:3:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2911:4:2",
																				"type": "",
																				"value": "0x28"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2902:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2902:14:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2918:66:2",
																		"type": "",
																		"value": "0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2895:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2895:90:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2895:90:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3009:3:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3014:4:2",
																				"type": "",
																				"value": "0x38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3005:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3005:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3025:4:2",
																				"type": "",
																				"value": "0x60"
																			},
																			{
																				"name": "deployer",
																				"nodeType": "YulIdentifier",
																				"src": "3031:8:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3021:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3021:19:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2998:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2998:43:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2998:43:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3065:3:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3070:4:2",
																				"type": "",
																				"value": "0x4c"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3061:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3061:14:2"
																	},
																	{
																		"name": "salt",
																		"nodeType": "YulIdentifier",
																		"src": "3077:4:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3054:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3054:28:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3054:28:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3106:3:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3111:4:2",
																				"type": "",
																				"value": "0x6c"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3102:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3102:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3128:3:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3133:4:2",
																				"type": "",
																				"value": "0x37"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "3118:9:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3118:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3095:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3095:44:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3095:44:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3152:44:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3179:3:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3184:4:2",
																				"type": "",
																				"value": "0x37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3175:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3175:14:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3191:4:2",
																		"type": "",
																		"value": "0x55"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "3165:9:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3165:31:2"
															},
															"variableNames": [
																{
																	"name": "predicted",
																	"nodeType": "YulIdentifier",
																	"src": "3152:9:2"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 149,
														"isOffset": false,
														"isSlot": false,
														"src": "3031:8:2",
														"valueSize": 1
													},
													{
														"declaration": 145,
														"isOffset": false,
														"isSlot": false,
														"src": "2866:14:2",
														"valueSize": 1
													},
													{
														"declaration": 152,
														"isOffset": false,
														"isSlot": false,
														"src": "3152:9:2",
														"valueSize": 1
													},
													{
														"declaration": 147,
														"isOffset": false,
														"isSlot": false,
														"src": "3077:4:2",
														"valueSize": 1
													}
												],
												"id": 154,
												"nodeType": "InlineAssembly",
												"src": "2683:523:2"
											}
										]
									},
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "2404:99:2",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "2517:27:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "2562:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "2554:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2594:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "2586:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 146,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2586:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "2616:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "2608:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2608:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2544:86:2"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "2662:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "2654:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2654:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2653:19:2"
									},
									"scope": 177,
									"src": "2508:704:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "3467:88:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 167,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "3512:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 168,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "3528:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 171,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3542:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$177",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$177",
																		"typeString": "library Clones"
																	}
																],
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3534:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 169,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3534:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3534:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 166,
														"name": "predictDeterministicAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															156,
															176
														],
														"referencedDeclaration": 156,
														"src": "3484:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,bytes32,address) pure returns (address)"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3484:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 165,
												"id": 174,
												"nodeType": "Return",
												"src": "3477:71:2"
											}
										]
									},
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "3218:99:2",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "3331:27:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "3367:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "3359:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3359:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "3391:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "3383:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 160,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3383:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3358:38:2"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "3452:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "3444:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3444:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3443:19:2"
									},
									"scope": 177,
									"src": "3322:233:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "740:2817:2",
							"usedErrors": []
						}
					],
					"src": "85:3473:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							347
						],
						"IERC721": [
							293
						]
					},
					"id": 294,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 294,
							"sourceUnit": 348,
							"src": "118:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 182,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 347,
										"src": "256:7:3"
									},
									"id": 183,
									"nodeType": "InheritanceSpecifier",
									"src": "256:7:3"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 181,
								"nodeType": "StructuredDocumentation",
								"src": "167:67:3",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 293,
							"linearizedBaseContracts": [
								293,
								347
							],
							"name": "IERC721",
							"nameLocation": "245:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "270:88:3",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 192,
									"name": "Transfer",
									"nameLocation": "369:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "394:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "378:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "416:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "400:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "400:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "436:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "420:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:67:3"
									},
									"src": "363:82:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "451:94:3",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 201,
									"name": "Approval",
									"nameLocation": "556:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "581:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "565:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "604:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "588:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "588:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "630:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "614:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "614:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:74:3"
									},
									"src": "550:89:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "645:117:3",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 210,
									"name": "ApprovalForAll",
									"nameLocation": "773:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "804:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "788:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "788:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "827:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "811:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "811:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "842:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "837:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 207,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "837:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:64:3"
									},
									"src": "767:85:3"
								},
								{
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "858:76:3",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 218,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "948:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "966:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "958:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "958:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "957:15:3"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1004:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "996:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "996:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "995:17:3"
									},
									"scope": 293,
									"src": "939:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "1019:131:3",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 226,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1164:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1180:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "1172:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1172:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1171:17:3"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1220:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "1212:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1212:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1211:15:3"
									},
									"scope": 293,
									"src": "1155:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "1233:690:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 236,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1937:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1971:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "1963:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1963:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1993:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "1985:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1985:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2013:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2005:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2005:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1953:73:3"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2035:0:3"
									},
									"scope": 293,
									"src": "1928:108:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "2042:504:3",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 246,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2560:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2590:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "2582:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2612:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "2604:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2604:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2632:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "2624:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2624:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2572:73:3"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2654:0:3"
									},
									"scope": 293,
									"src": "2551:104:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "2661:452:3",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 254,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3127:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3143:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "3135:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3155:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "3147:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3147:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:29:3"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3172:0:3"
									},
									"scope": 293,
									"src": "3118:55:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "3179:139:3",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 262,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3332:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3352:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3344:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3344:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3343:17:3"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3392:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3384:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3384:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:18:3"
									},
									"scope": 293,
									"src": "3323:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "3408:309:3",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 270,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3731:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3757:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "3749:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3749:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "3772:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "3767:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 266,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3767:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3748:34:3"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3791:0:3"
									},
									"scope": 293,
									"src": "3722:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "3798:138:3",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 280,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3950:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3975:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "3967:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3967:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3990:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "3982:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3982:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3966:33:3"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "4023:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 277,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4023:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4022:6:3"
									},
									"scope": 293,
									"src": "3941:88:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "4035:556:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4605:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4639:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4631:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4661:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4653:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4653:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4681:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4673:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4673:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4713:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4698:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 288,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4698:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4621:102:3"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4732:0:3"
									},
									"scope": 293,
									"src": "4596:137:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 294,
							"src": "235:4500:3",
							"usedErrors": []
						}
					],
					"src": "93:4643:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 295,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 296,
								"nodeType": "StructuredDocumentation",
								"src": "126:152:4",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "IERC721Receiver",
							"nameLocation": "289:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "311:485:4",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 310,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "810:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "844:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "836:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "870:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "862:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "862:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "892:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "884:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "924:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "909:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 304,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "909:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "826:108:4"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "953:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 307,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "953:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "952:8:4"
									},
									"scope": 311,
									"src": "801:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 312,
							"src": "279:684:4",
							"usedErrors": []
						}
					],
					"src": "101:863:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							335
						],
						"IERC165": [
							347
						]
					},
					"id": 336,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 336,
							"sourceUnit": 348,
							"src": "124:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 316,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 347,
										"src": "754:7:5"
									},
									"id": 317,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:5"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 315,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:5",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 335,
							"linearizedBaseContracts": [
								335,
								347
							],
							"name": "ERC165",
							"nameLocation": "744:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										346
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "920:64:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 326,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 320,
														"src": "937:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 328,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 347,
																	"src": "957:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$347_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$347_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 327,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$347",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 330,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 325,
												"id": 332,
												"nodeType": "Return",
												"src": "930:47:5"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 322,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:5"
									},
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "856:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 319,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:5"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "914:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 323,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:5"
									},
									"scope": 335,
									"src": "829:155:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 336,
							"src": "726:260:5",
							"usedErrors": []
						}
					],
					"src": "99:888:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							347
						]
					},
					"id": 348,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 337,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 338,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:6",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 347,
							"linearizedBaseContracts": [
								347
							],
							"name": "IERC165",
							"nameLocation": "415:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "801:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 340,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:6"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "844:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:6"
									},
									"scope": 347,
									"src": "774:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 348,
							"src": "405:447:6",
							"usedErrors": []
						}
					],
					"src": "100:753:6"
				},
				"id": 6
			},
			"contracts/interfaces/IProtocolGovernance.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IProtocolGovernance.sol",
					"exportedSymbols": {
						"IAccessControl": [
							72
						],
						"IAccessControlEnumerable": [
							97
						],
						"IDefaultAccessControl": [
							1310
						],
						"IERC165": [
							347
						],
						"IProtocolGovernance": [
							610
						],
						"IUnitPricesGovernance": [
							663
						]
					},
					"id": 611,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 349,
							"literals": [
								"solidity",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:22:7"
						},
						{
							"absolutePath": "contracts/interfaces/utils/IDefaultAccessControl.sol",
							"file": "./utils/IDefaultAccessControl.sol",
							"id": 350,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 611,
							"sourceUnit": 1311,
							"src": "59:43:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IUnitPricesGovernance.sol",
							"file": "./IUnitPricesGovernance.sol",
							"id": 351,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 611,
							"sourceUnit": 664,
							"src": "104:37:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 352,
										"name": "IDefaultAccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1310,
										"src": "178:21:7"
									},
									"id": 353,
									"nodeType": "InheritanceSpecifier",
									"src": "178:21:7"
								},
								{
									"baseName": {
										"id": 354,
										"name": "IUnitPricesGovernance",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 663,
										"src": "201:21:7"
									},
									"id": 355,
									"nodeType": "InheritanceSpecifier",
									"src": "201:21:7"
								}
							],
							"canonicalName": "IProtocolGovernance",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 610,
							"linearizedBaseContracts": [
								610,
								663,
								347,
								1310,
								97,
								72
							],
							"name": "IProtocolGovernance",
							"nameLocation": "155:19:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IProtocolGovernance.Params",
									"id": 366,
									"members": [
										{
											"constant": false,
											"id": 357,
											"mutability": "mutable",
											"name": "maxTokensPerVault",
											"nameLocation": "828:17:7",
											"nodeType": "VariableDeclaration",
											"scope": 366,
											"src": "820:25:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 356,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "820:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 359,
											"mutability": "mutable",
											"name": "governanceDelay",
											"nameLocation": "864:15:7",
											"nodeType": "VariableDeclaration",
											"scope": 366,
											"src": "856:23:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 358,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "856:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 361,
											"mutability": "mutable",
											"name": "protocolTreasury",
											"nameLocation": "898:16:7",
											"nodeType": "VariableDeclaration",
											"scope": 366,
											"src": "890:24:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 360,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "890:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 363,
											"mutability": "mutable",
											"name": "forceAllowMask",
											"nameLocation": "933:14:7",
											"nodeType": "VariableDeclaration",
											"scope": 366,
											"src": "925:22:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 362,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "925:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 365,
											"mutability": "mutable",
											"name": "withdrawLimit",
											"nameLocation": "966:13:7",
											"nodeType": "VariableDeclaration",
											"scope": 366,
											"src": "958:21:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 364,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "958:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Params",
									"nameLocation": "802:6:7",
									"nodeType": "StructDefinition",
									"scope": 610,
									"src": "795:192:7",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "1062:225:7",
										"text": "@notice Timestamp after which staged granted permissions for the given address can be committed.\n @param target The given address\n @return Zero if there are no staged permission grants, timestamp otherwise"
									},
									"functionSelector": "8e35b028",
									"id": 374,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stagedPermissionGrantsTimestamps",
									"nameLocation": "1302:32:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "1343:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "1335:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1335:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1334:16:7"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "1374:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1374:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1373:9:7"
									},
									"scope": 610,
									"src": "1293:90:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "1391:134:7",
										"text": "@notice Staged granted permission bitmask for the given address.\n @param target The given address\n @return Bitmask"
									},
									"functionSelector": "2a4ebb41",
									"id": 382,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stagedPermissionGrantsMasks",
									"nameLocation": "1540:27:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "1576:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1568:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:16:7"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1607:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1607:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1606:9:7"
									},
									"scope": 610,
									"src": "1531:85:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "1624:119:7",
										"text": "@notice Permission bitmask for the given address.\n @param target The given address\n @return Bitmask"
									},
									"functionSelector": "64cd39af",
									"id": 390,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permissionMasks",
									"nameLocation": "1758:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "1782:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "1774:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1774:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1773:16:7"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "1813:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:9:7"
									},
									"scope": 610,
									"src": "1749:73:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "1830:163:7",
										"text": "@notice Timestamp after which staged pending protocol parameters can be committed\n @return Zero if there are no staged parameters, timestamp otherwise."
									},
									"functionSelector": "bd66b16e",
									"id": 396,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stagedParamsTimestamp",
									"nameLocation": "2008:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2029:2:7"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "2055:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2055:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2054:9:7"
									},
									"scope": 610,
									"src": "1999:65:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 397,
										"nodeType": "StructuredDocumentation",
										"src": "2072:47:7",
										"text": "@notice Staged pending protocol parameters."
									},
									"functionSelector": "731c01a9",
									"id": 403,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stagedParams",
									"nameLocation": "2134:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2146:2:7"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "2172:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Params_$366_memory_ptr",
													"typeString": "struct IProtocolGovernance.Params"
												},
												"typeName": {
													"id": 400,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 399,
														"name": "Params",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 366,
														"src": "2172:6:7"
													},
													"referencedDeclaration": 366,
													"src": "2172:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Params_$366_storage_ptr",
														"typeString": "struct IProtocolGovernance.Params"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2171:15:7"
									},
									"scope": 610,
									"src": "2125:62:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "2195:40:7",
										"text": "@notice Current protocol parameters."
									},
									"functionSelector": "cff0ab96",
									"id": 410,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "params",
									"nameLocation": "2250:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2256:2:7"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "2282:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Params_$366_memory_ptr",
													"typeString": "struct IProtocolGovernance.Params"
												},
												"typeName": {
													"id": 407,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 406,
														"name": "Params",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 366,
														"src": "2282:6:7"
													},
													"referencedDeclaration": 366,
													"src": "2282:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Params_$366_storage_ptr",
														"typeString": "struct IProtocolGovernance.Params"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2281:15:7"
									},
									"scope": 610,
									"src": "2241:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "2305:61:7",
										"text": "@notice Addresses for which non-zero permissions are set."
									},
									"functionSelector": "806bc2f1",
									"id": 417,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permissionAddresses",
									"nameLocation": "2381:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2400:2:7"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "2426:16:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 413,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2426:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 414,
													"nodeType": "ArrayTypeName",
													"src": "2426:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2425:18:7"
									},
									"scope": 610,
									"src": "2372:72:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "2452:51:7",
										"text": "@notice Permission addresses staged for commit."
									},
									"functionSelector": "95e3a12d",
									"id": 424,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stagedPermissionGrantsAddresses",
									"nameLocation": "2518:31:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2549:2:7"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "2575:16:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 420,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2575:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 421,
													"nodeType": "ArrayTypeName",
													"src": "2575:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:18:7"
									},
									"scope": 610,
									"src": "2509:84:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 425,
										"nodeType": "StructuredDocumentation",
										"src": "2601:194:7",
										"text": "@notice Return all addresses where rawPermissionMask bit for permissionId is set to 1.\n @param permissionId Id of the permission to check.\n @return A list of dirty addresses."
									},
									"functionSelector": "717af5ed",
									"id": 433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addressesByPermission",
									"nameLocation": "2810:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "permissionId",
												"nameLocation": "2838:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "2832:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 426,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2831:20:7"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "2875:16:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 429,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2875:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 430,
													"nodeType": "ArrayTypeName",
													"src": "2875:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2874:18:7"
									},
									"scope": 610,
									"src": "2801:92:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "2901:185:7",
										"text": "@notice Checks if address has permission or given permission is force allowed for any address.\n @param addr Address to check\n @param permissionId Permission to check"
									},
									"functionSelector": "63e85d2d",
									"id": 443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasPermission",
									"nameLocation": "3101:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "3123:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "3115:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3115:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "permissionId",
												"nameLocation": "3135:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "3129:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 437,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3129:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3114:34:7"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "3172:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3172:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3171:6:7"
									},
									"scope": 610,
									"src": "3092:86:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "3186:151:7",
										"text": "@notice Checks if address has all permissions.\n @param target Address to check\n @param permissionIds A list of permissions to check"
									},
									"functionSelector": "9348e4ec",
									"id": 454,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasAllPermissions",
									"nameLocation": "3352:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3378:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "3370:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3370:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "permissionIds",
												"nameLocation": "3403:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "3386:30:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$dyn_calldata_ptr",
													"typeString": "uint8[]"
												},
												"typeName": {
													"baseType": {
														"id": 447,
														"name": "uint8",
														"nodeType": "ElementaryTypeName",
														"src": "3386:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 448,
													"nodeType": "ArrayTypeName",
													"src": "3386:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
														"typeString": "uint8[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3369:48:7"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "3441:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 451,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3441:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3440:6:7"
									},
									"scope": 610,
									"src": "3343:104:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "3455:86:7",
										"text": "@notice Max different ERC20 token addresses that could be managed by the protocol."
									},
									"functionSelector": "78546fa2",
									"id": 460,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxTokensPerVault",
									"nameLocation": "3556:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3573:2:7"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "3599:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3599:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3598:9:7"
									},
									"scope": 610,
									"src": "3547:61:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "3616:59:7",
										"text": "@notice The delay for committing any governance params."
									},
									"functionSelector": "bba32939",
									"id": 466,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "governanceDelay",
									"nameLocation": "3690:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3705:2:7"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "3731:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3731:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3730:9:7"
									},
									"scope": 610,
									"src": "3681:59:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 467,
										"nodeType": "StructuredDocumentation",
										"src": "3748:49:7",
										"text": "@notice The address of the protocol treasury."
									},
									"functionSelector": "803db96d",
									"id": 472,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolTreasury",
									"nameLocation": "3812:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3828:2:7"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3854:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3854:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3853:9:7"
									},
									"scope": 610,
									"src": "3803:60:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "3871:136:7",
										"text": "@notice Permissions mask which defines if ordinary permission should be reverted.\n This bitmask is xored with ordinary mask."
									},
									"functionSelector": "99fb4234",
									"id": 478,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "forceAllowMask",
									"nameLocation": "4022:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4036:2:7"
									},
									"returnParameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "4062:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4062:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4061:9:7"
									},
									"scope": 610,
									"src": "4013:58:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "4079:142:7",
										"text": "@notice Withdraw limit per token per block.\n @param token Address of the token\n @return Withdraw limit per token per block"
									},
									"functionSelector": "fce33f01",
									"id": 486,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawLimit",
									"nameLocation": "4236:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4258:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "4250:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4250:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4249:15:7"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "4288:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4288:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4287:9:7"
									},
									"scope": 610,
									"src": "4227:70:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "4305:49:7",
										"text": "@notice Addresses that has staged validators."
									},
									"functionSelector": "1c5afc46",
									"id": 493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stagedValidatorsAddresses",
									"nameLocation": "4369:25:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4394:2:7"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "4420:16:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 489,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4420:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 490,
													"nodeType": "ArrayTypeName",
													"src": "4420:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4419:18:7"
									},
									"scope": 610,
									"src": "4360:78:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "4446:225:7",
										"text": "@notice Timestamp after which staged granted permissions for the given address can be committed.\n @param target The given address\n @return Zero if there are no staged permission grants, timestamp otherwise"
									},
									"functionSelector": "d65c5e6b",
									"id": 501,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stagedValidatorsTimestamps",
									"nameLocation": "4686:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4721:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "4713:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4713:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4712:16:7"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "4752:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4752:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4751:9:7"
									},
									"scope": 610,
									"src": "4677:84:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "4769:119:7",
										"text": "@notice Staged validator for the given address.\n @param target The given address\n @return Validator"
									},
									"functionSelector": "f7fcd303",
									"id": 509,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stagedValidators",
									"nameLocation": "4903:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4928:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "4920:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4920:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4919:16:7"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "4959:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4959:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4958:9:7"
									},
									"scope": 610,
									"src": "4894:74:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "4976:42:7",
										"text": "@notice Addresses that has validators."
									},
									"functionSelector": "d1bf2a6b",
									"id": 516,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "validatorsAddresses",
									"nameLocation": "5033:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5052:2:7"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "5078:16:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 512,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5078:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 513,
													"nodeType": "ArrayTypeName",
													"src": "5078:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5077:18:7"
									},
									"scope": 610,
									"src": "5024:72:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "5104:115:7",
										"text": "@notice Address that has validators.\n @param i The number of address\n @return Validator address"
									},
									"functionSelector": "b3ff103c",
									"id": 524,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "validatorsAddress",
									"nameLocation": "5234:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "i",
												"nameLocation": "5260:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "5252:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5252:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5251:11:7"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "5286:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5286:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5285:9:7"
									},
									"scope": 610,
									"src": "5225:70:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "5303:112:7",
										"text": "@notice Validator for the given address.\n @param target The given address\n @return Validator"
									},
									"functionSelector": "fa52c7d8",
									"id": 532,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "validators",
									"nameLocation": "5430:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5449:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "5441:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5441:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5440:16:7"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "5480:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5480:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5479:9:7"
									},
									"scope": 610,
									"src": "5421:68:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "5591:43:7",
										"text": "@notice Rollback all staged validators."
									},
									"functionSelector": "1dd02197",
									"id": 536,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rollbackStagedValidators",
									"nameLocation": "5649:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5673:2:7"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5684:0:7"
									},
									"scope": 610,
									"src": "5640:45:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "5693:103:7",
										"text": "@notice Revoke validator instantly from the given address.\n @param target The given address"
									},
									"functionSelector": "047564b7",
									"id": 542,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeValidator",
									"nameLocation": "5811:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5835:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "5827:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5827:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5826:16:7"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5851:0:7"
									},
									"scope": 610,
									"src": "5802:50:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "5860:159:7",
										"text": "@notice Stages a new validator for the given address\n @param target The given address\n @param validator The validator for the given address"
									},
									"functionSelector": "b521bf2d",
									"id": 550,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stageValidator",
									"nameLocation": "6034:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6057:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "6049:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6049:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "6073:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "6065:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6065:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6048:35:7"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6092:0:7"
									},
									"scope": 610,
									"src": "6025:68:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "6101:156:7",
										"text": "@notice Commits validator for the given address.\n @dev Reverts if governance delay has not passed yet.\n @param target The given address."
									},
									"functionSelector": "0161c241",
									"id": 556,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "commitValidator",
									"nameLocation": "6272:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6296:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "6288:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:16:7"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6312:0:7"
									},
									"scope": 610,
									"src": "6263:50:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 557,
										"nodeType": "StructuredDocumentation",
										"src": "6321:139:7",
										"text": "@notice Commites all staged validators for which governance delay passed\n @return Addresses for which validators were committed"
									},
									"functionSelector": "577848ea",
									"id": 563,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "commitAllValidatorsSurpassedDelay",
									"nameLocation": "6475:33:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6508:2:7"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "6529:16:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 559,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6529:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 560,
													"nodeType": "ArrayTypeName",
													"src": "6529:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6528:18:7"
									},
									"scope": 610,
									"src": "6466:81:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "6555:57:7",
										"text": "@notice Rollback all staged granted permission grant."
									},
									"functionSelector": "bd674f3a",
									"id": 567,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rollbackStagedPermissionGrants",
									"nameLocation": "6627:30:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6657:2:7"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6668:0:7"
									},
									"scope": 610,
									"src": "6618:51:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "6677:164:7",
										"text": "@notice Commits permission grants for the given address.\n @dev Reverts if governance delay has not passed yet.\n @param target The given address."
									},
									"functionSelector": "887b812d",
									"id": 573,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "commitPermissionGrants",
									"nameLocation": "6856:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6887:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "6879:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6879:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6878:16:7"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6903:0:7"
									},
									"scope": 610,
									"src": "6847:57:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "6912:167:7",
										"text": "@notice Commites all staged permission grants for which governance delay passed.\n @return An array of addresses for which permission grants were committed."
									},
									"functionSelector": "e970164c",
									"id": 580,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "commitAllPermissionGrantsSurpassedDelay",
									"nameLocation": "7094:39:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7133:2:7"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "7154:16:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 576,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "7154:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 577,
													"nodeType": "ArrayTypeName",
													"src": "7154:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7153:18:7"
									},
									"scope": 610,
									"src": "7085:87:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 581,
										"nodeType": "StructuredDocumentation",
										"src": "7180:171:7",
										"text": "@notice Revoke permission instantly from the given address.\n @param target The given address.\n @param permissionIds A list of permission ids to revoke."
									},
									"functionSelector": "c7e6ab05",
									"id": 589,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokePermissions",
									"nameLocation": "7366:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7392:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "7384:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7384:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "permissionIds",
												"nameLocation": "7415:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "7400:28:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
													"typeString": "uint8[]"
												},
												"typeName": {
													"baseType": {
														"id": 584,
														"name": "uint8",
														"nodeType": "ElementaryTypeName",
														"src": "7400:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 585,
													"nodeType": "ArrayTypeName",
													"src": "7400:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
														"typeString": "uint8[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7383:46:7"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7438:0:7"
									},
									"scope": 610,
									"src": "7357:82:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "7447:100:7",
										"text": "@notice Commits staged protocol params.\n Reverts if governance delay has not passed yet."
									},
									"functionSelector": "bd7692f7",
									"id": 593,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "commitParams",
									"nameLocation": "7562:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7574:2:7"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7585:0:7"
									},
									"scope": 610,
									"src": "7553:33:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "7684:156:7",
										"text": "@notice Sets new pending params that could have been committed after governance delay expires.\n @param newParams New protocol parameters to set."
									},
									"functionSelector": "5c1e4448",
									"id": 600,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stageParams",
									"nameLocation": "7855:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "newParams",
												"nameLocation": "7881:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "7867:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Params_$366_memory_ptr",
													"typeString": "struct IProtocolGovernance.Params"
												},
												"typeName": {
													"id": 596,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 595,
														"name": "Params",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 366,
														"src": "7867:6:7"
													},
													"referencedDeclaration": 366,
													"src": "7867:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Params_$366_storage_ptr",
														"typeString": "struct IProtocolGovernance.Params"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7866:25:7"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7900:0:7"
									},
									"scope": 610,
									"src": "7846:55:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "7909:305:7",
										"text": "@notice Stage granted permissions that could have been committed after governance delay expires.\n Resets commit delay and permissions if there are already staged permissions for this address.\n @param target Target address\n @param permissionIds A list of permission ids to grant"
									},
									"functionSelector": "1c3a2341",
									"id": 609,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stagePermissionGrants",
									"nameLocation": "8229:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "8259:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "8251:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8251:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "permissionIds",
												"nameLocation": "8282:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "8267:28:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
													"typeString": "uint8[]"
												},
												"typeName": {
													"baseType": {
														"id": 604,
														"name": "uint8",
														"nodeType": "ElementaryTypeName",
														"src": "8267:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 605,
													"nodeType": "ArrayTypeName",
													"src": "8267:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
														"typeString": "uint8[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8250:46:7"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8305:0:7"
									},
									"scope": 610,
									"src": "8220:86:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 611,
							"src": "145:8164:7",
							"usedErrors": []
						}
					],
					"src": "33:8278:7"
				},
				"id": 7
			},
			"contracts/interfaces/IUnitPricesGovernance.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IUnitPricesGovernance.sol",
					"exportedSymbols": {
						"IAccessControl": [
							72
						],
						"IAccessControlEnumerable": [
							97
						],
						"IDefaultAccessControl": [
							1310
						],
						"IERC165": [
							347
						],
						"IUnitPricesGovernance": [
							663
						]
					},
					"id": 664,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 612,
							"literals": [
								"solidity",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:22:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 613,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 664,
							"sourceUnit": 348,
							"src": "59:65:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/utils/IDefaultAccessControl.sol",
							"file": "./utils/IDefaultAccessControl.sol",
							"id": 614,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 664,
							"sourceUnit": 1311,
							"src": "126:43:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 615,
										"name": "IDefaultAccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1310,
										"src": "208:21:8"
									},
									"id": 616,
									"nodeType": "InheritanceSpecifier",
									"src": "208:21:8"
								},
								{
									"baseName": {
										"id": 617,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 347,
										"src": "231:7:8"
									},
									"id": 618,
									"nodeType": "InheritanceSpecifier",
									"src": "231:7:8"
								}
							],
							"canonicalName": "IUnitPricesGovernance",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 663,
							"linearizedBaseContracts": [
								663,
								347,
								1310,
								97,
								72
							],
							"name": "IUnitPricesGovernance",
							"nameLocation": "183:21:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "313:148:8",
										"text": "@notice Estimated amount of token worth 1 USD staged for commit.\n @param token Address of the token\n @return The amount of token"
									},
									"functionSelector": "ae24e14a",
									"id": 626,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stagedUnitPrices",
									"nameLocation": "476:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "501:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "493:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:15:8"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "531:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "530:9:8"
									},
									"scope": 663,
									"src": "467:73:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 627,
										"nodeType": "StructuredDocumentation",
										"src": "548:160:8",
										"text": "@notice Timestamp after which staged unit prices for the given token can be committed.\n @param token Address of the token\n @return Timestamp"
									},
									"functionSelector": "12c2d874",
									"id": 634,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stagedUnitPricesTimestamps",
									"nameLocation": "723:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "758:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "750:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "750:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "749:15:8"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "788:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "788:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:9:8"
									},
									"scope": 663,
									"src": "714:83:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "805:130:8",
										"text": "@notice Estimated amount of token worth 1 USD.\n @param token Address of the token\n @return The amount of token"
									},
									"functionSelector": "768a1bfc",
									"id": 642,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unitPrices",
									"nameLocation": "950:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "969:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "961:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "961:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "960:15:8"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "999:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "999:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "998:9:8"
									},
									"scope": 663,
									"src": "941:67:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "1087:159:8",
										"text": "@notice Stage estimated amount of token worth 1 USD staged for commit.\n @param token Address of the token\n @param value The amount of token"
									},
									"functionSelector": "56f46d72",
									"id": 650,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stageUnitPrice",
									"nameLocation": "1261:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1284:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "1276:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1276:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1299:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "1291:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1291:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1275:30:8"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1314:0:8"
									},
									"scope": 663,
									"src": "1252:63:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "1323:73:8",
										"text": "@notice Reset staged value\n @param token Address of the token"
									},
									"functionSelector": "73680db4",
									"id": 656,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rollbackUnitPrice",
									"nameLocation": "1411:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1437:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "1429:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1429:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1428:15:8"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1452:0:8"
									},
									"scope": 663,
									"src": "1402:51:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "1461:79:8",
										"text": "@notice Commit staged unit price\n @param token Address of the token"
									},
									"functionSelector": "3837a1a3",
									"id": 662,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "commitUnitPrice",
									"nameLocation": "1555:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1579:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "1571:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1571:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1570:15:8"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1594:0:8"
									},
									"scope": 663,
									"src": "1546:49:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 664,
							"src": "173:1425:8",
							"usedErrors": []
						}
					],
					"src": "33:1567:8"
				},
				"id": 8
			},
			"contracts/interfaces/IVaultRegistry.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IVaultRegistry.sol",
					"exportedSymbols": {
						"IAccessControl": [
							72
						],
						"IAccessControlEnumerable": [
							97
						],
						"IDefaultAccessControl": [
							1310
						],
						"IERC165": [
							347
						],
						"IERC721": [
							293
						],
						"IProtocolGovernance": [
							610
						],
						"IUnitPricesGovernance": [
							663
						],
						"IVaultRegistry": [
							754
						]
					},
					"id": 755,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 665,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 666,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 755,
							"sourceUnit": 294,
							"src": "60:58:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IProtocolGovernance.sol",
							"file": "./IProtocolGovernance.sol",
							"id": 667,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 755,
							"sourceUnit": 611,
							"src": "120:35:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 668,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 293,
										"src": "187:7:9"
									},
									"id": 669,
									"nodeType": "InheritanceSpecifier",
									"src": "187:7:9"
								}
							],
							"canonicalName": "IVaultRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 754,
							"linearizedBaseContracts": [
								754,
								293,
								347
							],
							"name": "IVaultRegistry",
							"nameLocation": "169:14:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "202:125:9",
										"text": "@notice Get Vault for the giver NFT ID.\n @param nftId NFT ID\n @return vault Address of the Vault contract"
									},
									"functionSelector": "9c94d853",
									"id": 677,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "vaultForNft",
									"nameLocation": "342:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "nftId",
												"nameLocation": "362:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "354:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "354:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "353:15:9"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "400:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "392:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "392:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "391:15:9"
									},
									"scope": 754,
									"src": "333:74:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "415:138:9",
										"text": "@notice Get NFT ID for given Vault contract address.\n @param vault Address of the Vault contract\n @return nftId NFT ID"
									},
									"functionSelector": "fcdabd27",
									"id": 685,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nftForVault",
									"nameLocation": "568:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "588:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "580:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:15:9"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "nftId",
												"nameLocation": "626:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "618:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "618:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "617:15:9"
									},
									"scope": 754,
									"src": "559:74:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "641:150:9",
										"text": "@notice Checks if the nft is locked for all transfers\n @param nft NFT to check for lock\n @return `true` if locked, false otherwise"
									},
									"functionSelector": "f6aacfb1",
									"id": 693,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isLocked",
									"nameLocation": "806:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "823:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "815:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "815:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "814:13:9"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "851:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 690,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "851:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "850:6:9"
									},
									"scope": 754,
									"src": "797:60:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "865:178:9",
										"text": "@notice Register new Vault and mint NFT.\n @param vault address of the vault\n @param owner owner of the NFT\n @return nft Nft minted for the given Vault"
									},
									"functionSelector": "05c4fdf9",
									"id": 703,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerVault",
									"nameLocation": "1058:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "1080:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "1072:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1072:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1095:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "1087:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1087:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1071:30:9"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "1128:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "1120:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1119:13:9"
									},
									"scope": 754,
									"src": "1049:84:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "1141:40:9",
										"text": "@notice Number of Vaults registered."
									},
									"functionSelector": "88977738",
									"id": 709,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "vaultsCount",
									"nameLocation": "1196:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1207:2:9"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "1233:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:9:9"
									},
									"scope": 754,
									"src": "1187:55:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "1250:34:9",
										"text": "@notice All Vaults registered."
									},
									"functionSelector": "8220ef5b",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "vaults",
									"nameLocation": "1299:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1305:2:9"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "1331:16:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 712,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1331:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 713,
													"nodeType": "ArrayTypeName",
													"src": "1331:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1330:18:9"
									},
									"scope": 754,
									"src": "1290:59:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "1357:46:9",
										"text": "@notice Address of the ProtocolGovernance."
									},
									"functionSelector": "5227ce4c",
									"id": 723,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolGovernance",
									"nameLocation": "1418:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1436:2:9"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "1462:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IProtocolGovernance_$610",
													"typeString": "contract IProtocolGovernance"
												},
												"typeName": {
													"id": 720,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 719,
														"name": "IProtocolGovernance",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 610,
														"src": "1462:19:9"
													},
													"referencedDeclaration": 610,
													"src": "1462:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IProtocolGovernance_$610",
														"typeString": "contract IProtocolGovernance"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:21:9"
									},
									"scope": 754,
									"src": "1409:74:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "1491:53:9",
										"text": "@notice Address of the staged ProtocolGovernance."
									},
									"functionSelector": "82e9f71f",
									"id": 730,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stagedProtocolGovernance",
									"nameLocation": "1559:24:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1583:2:9"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "1609:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IProtocolGovernance_$610",
													"typeString": "contract IProtocolGovernance"
												},
												"typeName": {
													"id": 727,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 726,
														"name": "IProtocolGovernance",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 610,
														"src": "1609:19:9"
													},
													"referencedDeclaration": 610,
													"src": "1609:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IProtocolGovernance_$610",
														"typeString": "contract IProtocolGovernance"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1608:21:9"
									},
									"scope": 754,
									"src": "1550:80:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "1638:76:9",
										"text": "@notice Minimal timestamp when staged ProtocolGovernance can be applied."
									},
									"functionSelector": "95cdb9a5",
									"id": 736,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stagedProtocolGovernanceTimestamp",
									"nameLocation": "1729:33:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1762:2:9"
									},
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "1788:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1788:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1787:9:9"
									},
									"scope": 754,
									"src": "1720:77:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "1805:102:9",
										"text": "@notice Stage new ProtocolGovernance.\n @param newProtocolGovernance new ProtocolGovernance"
									},
									"functionSelector": "3be0539c",
									"id": 743,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stageProtocolGovernance",
									"nameLocation": "1922:23:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "newProtocolGovernance",
												"nameLocation": "1966:21:9",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "1946:41:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IProtocolGovernance_$610",
													"typeString": "contract IProtocolGovernance"
												},
												"typeName": {
													"id": 739,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 738,
														"name": "IProtocolGovernance",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 610,
														"src": "1946:19:9"
													},
													"referencedDeclaration": 610,
													"src": "1946:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IProtocolGovernance_$610",
														"typeString": "contract IProtocolGovernance"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1945:43:9"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1997:0:9"
									},
									"scope": 754,
									"src": "1913:85:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 744,
										"nodeType": "StructuredDocumentation",
										"src": "2006:42:9",
										"text": "@notice Commit new ProtocolGovernance."
									},
									"functionSelector": "0407ca13",
									"id": 747,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "commitStagedProtocolGovernance",
									"nameLocation": "2063:30:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2093:2:9"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2104:0:9"
									},
									"scope": 754,
									"src": "2054:51:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "2113:182:9",
										"text": "@notice Lock NFT for transfers\n @dev Use this method when vault structure is set up and should become immutable. Can be called by owner.\n @param nft - NFT to lock"
									},
									"functionSelector": "4dcbc739",
									"id": 753,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lockNft",
									"nameLocation": "2310:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "2326:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2318:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2318:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2317:13:9"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2339:0:9"
									},
									"scope": 754,
									"src": "2301:39:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 755,
							"src": "159:2184:9",
							"usedErrors": []
						}
					],
					"src": "33:2312:9"
				},
				"id": 9
			},
			"contracts/interfaces/external/erc/IERC1271.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/external/erc/IERC1271.sol",
					"exportedSymbols": {
						"IERC1271": [
							767
						]
					},
					"id": 768,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 756,
							"literals": [
								"solidity",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:22:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1271",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 767,
							"linearizedBaseContracts": [
								767
							],
							"name": "IERC1271",
							"nameLocation": "69:8:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "85:556:10",
										"text": "@notice Verifies offchain signature.\n @dev Should return whether the signature provided is valid for the provided hash\n MUST return the bytes4 magic value 0x1626ba7e when function passes.\n MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5)\n MUST allow external calls\n @param _hash Hash of the data to be signed\n @param _signature Signature byte array associated with _hash\n @return magicValue 0x1626ba7e if valid, 0xffffffff otherwise"
									},
									"functionSelector": "1626ba7e",
									"id": 766,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isValidSignature",
									"nameLocation": "656:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "_hash",
												"nameLocation": "681:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "673:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 758,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "673:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "701:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "688:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 760,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "688:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:40:10"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "magicValue",
												"nameLocation": "743:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "736:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 763,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "736:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "735:19:10"
									},
									"scope": 767,
									"src": "647:108:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 768,
							"src": "59:699:10",
							"usedErrors": []
						}
					],
					"src": "33:727:10"
				},
				"id": 10
			},
			"contracts/interfaces/external/univ3/INonfungiblePositionManager.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/external/univ3/INonfungiblePositionManager.sol",
					"exportedSymbols": {
						"IERC165": [
							347
						],
						"IERC721": [
							293
						],
						"INonfungiblePositionManager": [
							953
						],
						"IPeripheryImmutableState": [
							969
						]
					},
					"id": 954,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 769,
							"literals": [
								"solidity",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "46:22:11"
						},
						{
							"id": 770,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 771,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 954,
							"sourceUnit": 294,
							"src": "93:58:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/external/univ3/IPeripheryImmutableState.sol",
							"file": "./IPeripheryImmutableState.sol",
							"id": 772,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 954,
							"sourceUnit": 970,
							"src": "153:40:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 774,
										"name": "IPeripheryImmutableState",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 969,
										"src": "418:24:11"
									},
									"id": 775,
									"nodeType": "InheritanceSpecifier",
									"src": "418:24:11"
								},
								{
									"baseName": {
										"id": 776,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 293,
										"src": "444:7:11"
									},
									"id": 777,
									"nodeType": "InheritanceSpecifier",
									"src": "444:7:11"
								}
							],
							"canonicalName": "INonfungiblePositionManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 773,
								"nodeType": "StructuredDocumentation",
								"src": "197:180:11",
								"text": "@title Non-fungible token for positions\n @notice Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred\n and authorized."
							},
							"fullyImplemented": false,
							"id": 953,
							"linearizedBaseContracts": [
								953,
								293,
								347,
								969
							],
							"name": "INonfungiblePositionManager",
							"nameLocation": "387:27:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "459:463:11",
										"text": "@notice Emitted when liquidity is increased for a position NFT\n @dev Also emitted when a token is minted\n @param tokenId The ID of the token for which liquidity was increased\n @param liquidity The amount by which liquidity for the NFT position was increased\n @param amount0 The amount of token0 that was paid for the increase in liquidity\n @param amount1 The amount of token1 that was paid for the increase in liquidity"
									},
									"id": 788,
									"name": "IncreaseLiquidity",
									"nameLocation": "934:17:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "968:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "952:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "952:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "985:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "977:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 781,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "977:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1004:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "996:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "996:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1021:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "1013:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1013:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "951:78:11"
									},
									"src": "928:102:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 789,
										"nodeType": "StructuredDocumentation",
										"src": "1036:423:11",
										"text": "@notice Emitted when liquidity is decreased for a position NFT\n @param tokenId The ID of the token for which liquidity was decreased\n @param liquidity The amount by which liquidity for the NFT position was decreased\n @param amount0 The amount of token0 that was accounted for the decrease in liquidity\n @param amount1 The amount of token1 that was accounted for the decrease in liquidity"
									},
									"id": 799,
									"name": "DecreaseLiquidity",
									"nameLocation": "1471:17:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1505:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "1489:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1489:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1522:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "1514:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 792,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1514:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1541:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "1533:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1533:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1558:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "1550:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1550:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1488:78:11"
									},
									"src": "1465:102:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "1573:527:11",
										"text": "@notice Emitted when tokens are collected for a position NFT\n @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\n @param tokenId The ID of the token for which underlying tokens were collected\n @param recipient The address of the account that received the collected tokens\n @param amount0 The amount of token0 owed to the position that was collected\n @param amount1 The amount of token1 owed to the position that was collected"
									},
									"id": 810,
									"name": "Collect",
									"nameLocation": "2112:7:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2136:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "2120:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2120:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2153:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "2145:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2145:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2172:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "2164:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2164:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2189:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "2181:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2181:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2119:78:11"
									},
									"src": "2106:92:11"
								},
								{
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "2206:1171:11",
										"text": "@notice Returns the position information associated with a given token ID.\n @dev Throws if the token ID is not valid.\n @param tokenId The ID of the token that represents the position\n @return nonce The nonce for permits\n @return operator The address that is approved for spending\n @return token0 The address of the token0 for a specific pool\n @return token1 The address of the token1 for a specific pool\n @return fee The fee associated with the pool\n @return tickLower The lower end of the tick range for the position\n @return tickUpper The higher end of the tick range for the position\n @return liquidity The liquidity of the position\n @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\n @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\n @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\n @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation"
									},
									"functionSelector": "99fbab88",
									"id": 840,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nameLocation": "3392:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3410:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "3402:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3402:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3401:17:11"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "3490:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "3483:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 815,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3483:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3518:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "3510:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3510:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "3549:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "3541:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3541:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "3578:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "3570:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "3606:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "3599:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 823,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3599:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "3630:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "3624:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 825,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3624:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "3660:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "3654:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 827,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3654:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3692:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "3684:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 829,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3684:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nameLocation": "3724:24:11",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "3716:32:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3716:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nameLocation": "3771:24:11",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "3763:32:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3763:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nameLocation": "3818:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "3810:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 835,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3810:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nameLocation": "3852:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "3844:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 837,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3844:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3468:406:11"
									},
									"scope": 953,
									"src": "3383:492:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.MintParams",
									"id": 863,
									"members": [
										{
											"constant": false,
											"id": 842,
											"mutability": "mutable",
											"name": "token0",
											"nameLocation": "3920:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 863,
											"src": "3912:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 841,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3912:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 844,
											"mutability": "mutable",
											"name": "token1",
											"nameLocation": "3945:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 863,
											"src": "3937:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 843,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3937:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 846,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "3969:3:11",
											"nodeType": "VariableDeclaration",
											"scope": 863,
											"src": "3962:10:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 845,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "3962:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 848,
											"mutability": "mutable",
											"name": "tickLower",
											"nameLocation": "3989:9:11",
											"nodeType": "VariableDeclaration",
											"scope": 863,
											"src": "3983:15:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 847,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "3983:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 850,
											"mutability": "mutable",
											"name": "tickUpper",
											"nameLocation": "4015:9:11",
											"nodeType": "VariableDeclaration",
											"scope": 863,
											"src": "4009:15:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 849,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "4009:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 852,
											"mutability": "mutable",
											"name": "amount0Desired",
											"nameLocation": "4043:14:11",
											"nodeType": "VariableDeclaration",
											"scope": 863,
											"src": "4035:22:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 851,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4035:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 854,
											"mutability": "mutable",
											"name": "amount1Desired",
											"nameLocation": "4076:14:11",
											"nodeType": "VariableDeclaration",
											"scope": 863,
											"src": "4068:22:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 853,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4068:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 856,
											"mutability": "mutable",
											"name": "amount0Min",
											"nameLocation": "4109:10:11",
											"nodeType": "VariableDeclaration",
											"scope": 863,
											"src": "4101:18:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 855,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4101:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 858,
											"mutability": "mutable",
											"name": "amount1Min",
											"nameLocation": "4138:10:11",
											"nodeType": "VariableDeclaration",
											"scope": 863,
											"src": "4130:18:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 857,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4130:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 860,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "4167:9:11",
											"nodeType": "VariableDeclaration",
											"scope": 863,
											"src": "4159:17:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 859,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4159:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 862,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "4195:8:11",
											"nodeType": "VariableDeclaration",
											"scope": 863,
											"src": "4187:16:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 861,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4187:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MintParams",
									"nameLocation": "3890:10:11",
									"nodeType": "StructDefinition",
									"scope": 953,
									"src": "3883:328:11",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 864,
										"nodeType": "StructuredDocumentation",
										"src": "4219:593:11",
										"text": "@notice Creates a new position wrapped in a NFT\n @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\n a method does not exist, i.e. the pool is assumed to be initialized.\n @param params The params necessary to mint a position, encoded as `MintParams` in calldata\n @return tokenId The ID of the token that represents the minted position\n @return liquidity The amount of liquidity for this position\n @return amount0 The amount of token0\n @return amount1 The amount of token1"
									},
									"functionSelector": "88316456",
									"id": 878,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "4827:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "4852:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "4832:26:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MintParams_$863_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.MintParams"
												},
												"typeName": {
													"id": 866,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 865,
														"name": "MintParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 863,
														"src": "4832:10:11"
													},
													"referencedDeclaration": 863,
													"src": "4832:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MintParams_$863_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.MintParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4831:28:11"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4935:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "4927:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4927:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "4965:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "4957:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 871,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4957:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "4997:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "4989:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4989:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5027:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "5019:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5019:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4912:133:11"
									},
									"scope": 953,
									"src": "4818:228:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.IncreaseLiquidityParams",
									"id": 891,
									"members": [
										{
											"constant": false,
											"id": 880,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "5104:7:11",
											"nodeType": "VariableDeclaration",
											"scope": 891,
											"src": "5096:15:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 879,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5096:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 882,
											"mutability": "mutable",
											"name": "amount0Desired",
											"nameLocation": "5130:14:11",
											"nodeType": "VariableDeclaration",
											"scope": 891,
											"src": "5122:22:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 881,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5122:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 884,
											"mutability": "mutable",
											"name": "amount1Desired",
											"nameLocation": "5163:14:11",
											"nodeType": "VariableDeclaration",
											"scope": 891,
											"src": "5155:22:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 883,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5155:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 886,
											"mutability": "mutable",
											"name": "amount0Min",
											"nameLocation": "5196:10:11",
											"nodeType": "VariableDeclaration",
											"scope": 891,
											"src": "5188:18:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 885,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5188:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 888,
											"mutability": "mutable",
											"name": "amount1Min",
											"nameLocation": "5225:10:11",
											"nodeType": "VariableDeclaration",
											"scope": 891,
											"src": "5217:18:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 887,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5217:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 890,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "5254:8:11",
											"nodeType": "VariableDeclaration",
											"scope": 891,
											"src": "5246:16:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 889,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5246:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "IncreaseLiquidityParams",
									"nameLocation": "5061:23:11",
									"nodeType": "StructDefinition",
									"scope": 953,
									"src": "5054:216:11",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "5278:830:11",
										"text": "@notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\n @param params tokenId The ID of the token for which liquidity is being increased,\n amount0Desired The desired amount of token0 to be spent,\n amount1Desired The desired amount of token1 to be spent,\n amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\n amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\n deadline The time by which the transaction must be included to effect the change\n @return liquidity The new liquidity amount as a result of the increase\n @return amount0 The amount of token0 to acheive resulting liquidity\n @return amount1 The amount of token1 to acheive resulting liquidity"
									},
									"functionSelector": "219f5d17",
									"id": 904,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseLiquidity",
									"nameLocation": "6123:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "6174:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "6141:39:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$891_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
												},
												"typeName": {
													"id": 894,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 893,
														"name": "IncreaseLiquidityParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 891,
														"src": "6141:23:11"
													},
													"referencedDeclaration": 891,
													"src": "6141:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$891_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6140:41:11"
									},
									"returnParameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "6257:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "6249:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 897,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6249:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "6289:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "6281:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6281:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "6319:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "6311:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6311:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6234:103:11"
									},
									"scope": 953,
									"src": "6114:224:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.DecreaseLiquidityParams",
									"id": 915,
									"members": [
										{
											"constant": false,
											"id": 906,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "6396:7:11",
											"nodeType": "VariableDeclaration",
											"scope": 915,
											"src": "6388:15:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 905,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6388:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 908,
											"mutability": "mutable",
											"name": "liquidity",
											"nameLocation": "6422:9:11",
											"nodeType": "VariableDeclaration",
											"scope": 915,
											"src": "6414:17:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 907,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "6414:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 910,
											"mutability": "mutable",
											"name": "amount0Min",
											"nameLocation": "6450:10:11",
											"nodeType": "VariableDeclaration",
											"scope": 915,
											"src": "6442:18:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 909,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6442:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 912,
											"mutability": "mutable",
											"name": "amount1Min",
											"nameLocation": "6479:10:11",
											"nodeType": "VariableDeclaration",
											"scope": 915,
											"src": "6471:18:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 911,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6471:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 914,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "6508:8:11",
											"nodeType": "VariableDeclaration",
											"scope": 915,
											"src": "6500:16:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 913,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6500:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DecreaseLiquidityParams",
									"nameLocation": "6353:23:11",
									"nodeType": "StructDefinition",
									"scope": 953,
									"src": "6346:178:11",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "6532:709:11",
										"text": "@notice Decreases the amount of liquidity in a position and accounts it to the position\n @param params tokenId The ID of the token for which liquidity is being decreased,\n amount The amount by which liquidity will be decreased,\n amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\n amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\n deadline The time by which the transaction must be included to effect the change\n @return amount0 The amount of token0 accounted to the position's tokens owed\n @return amount1 The amount of token1 accounted to the position's tokens owed"
									},
									"functionSelector": "0c49ccbe",
									"id": 926,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseLiquidity",
									"nameLocation": "7256:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "7307:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "7274:39:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$915_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
												},
												"typeName": {
													"id": 918,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 917,
														"name": "DecreaseLiquidityParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 915,
														"src": "7274:23:11"
													},
													"referencedDeclaration": 915,
													"src": "7274:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$915_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7273:41:11"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "7376:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "7368:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7368:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "7393:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "7385:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7385:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7367:34:11"
									},
									"scope": 953,
									"src": "7247:155:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.CollectParams",
									"id": 935,
									"members": [
										{
											"constant": false,
											"id": 928,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "7450:7:11",
											"nodeType": "VariableDeclaration",
											"scope": 935,
											"src": "7442:15:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 927,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7442:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 930,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "7476:9:11",
											"nodeType": "VariableDeclaration",
											"scope": 935,
											"src": "7468:17:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 929,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7468:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 932,
											"mutability": "mutable",
											"name": "amount0Max",
											"nameLocation": "7504:10:11",
											"nodeType": "VariableDeclaration",
											"scope": 935,
											"src": "7496:18:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 931,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "7496:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 934,
											"mutability": "mutable",
											"name": "amount1Max",
											"nameLocation": "7533:10:11",
											"nodeType": "VariableDeclaration",
											"scope": 935,
											"src": "7525:18:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 933,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "7525:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CollectParams",
									"nameLocation": "7417:13:11",
									"nodeType": "StructDefinition",
									"scope": 953,
									"src": "7410:141:11",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 936,
										"nodeType": "StructuredDocumentation",
										"src": "7559:495:11",
										"text": "@notice Collects up to a maximum amount of fees owed to a specific position to the recipient\n @param params tokenId The ID of the NFT for which tokens are being collected,\n recipient The account that should receive the tokens,\n amount0Max The maximum amount of token0 to collect,\n amount1Max The maximum amount of token1 to collect\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "fc6f7865",
									"id": 946,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nameLocation": "8069:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "8100:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "8077:29:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CollectParams_$935_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.CollectParams"
												},
												"typeName": {
													"id": 938,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 937,
														"name": "CollectParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 935,
														"src": "8077:13:11"
													},
													"referencedDeclaration": 935,
													"src": "8077:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CollectParams_$935_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.CollectParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8076:31:11"
									},
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "8142:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "8134:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8134:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "8159:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "8151:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8151:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8133:34:11"
									},
									"scope": 953,
									"src": "8060:108:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 947,
										"nodeType": "StructuredDocumentation",
										"src": "8176:215:11",
										"text": "@notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\n must be collected first.\n @param tokenId The ID of the token that is being burned"
									},
									"functionSelector": "42966c68",
									"id": 952,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "8406:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8419:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "8411:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8411:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8410:17:11"
									},
									"returnParameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8444:0:11"
									},
									"scope": 953,
									"src": "8397:48:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 954,
							"src": "377:8071:11",
							"usedErrors": []
						}
					],
					"src": "46:8404:11"
				},
				"id": 11
			},
			"contracts/interfaces/external/univ3/IPeripheryImmutableState.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/external/univ3/IPeripheryImmutableState.sol",
					"exportedSymbols": {
						"IPeripheryImmutableState": [
							969
						]
					},
					"id": 970,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 955,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPeripheryImmutableState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 956,
								"nodeType": "StructuredDocumentation",
								"src": "73:93:12",
								"text": "@title Immutable state\n @notice Functions that return immutable state of the router"
							},
							"fullyImplemented": false,
							"id": 969,
							"linearizedBaseContracts": [
								969
							],
							"name": "IPeripheryImmutableState",
							"nameLocation": "176:24:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "208:57:12",
										"text": "@return Returns the address of the Uniswap V3 factory"
									},
									"functionSelector": "c45a0155",
									"id": 962,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "280:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "287:2:12"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "313:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "313:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "312:9:12"
									},
									"scope": 969,
									"src": "271:51:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "330:40:12",
										"text": "@return Returns the address of WETH9"
									},
									"functionSelector": "4aa4a4fc",
									"id": 968,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH9",
									"nameLocation": "385:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:12"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "416:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "416:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:9:12"
									},
									"scope": 969,
									"src": "376:49:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 970,
							"src": "166:262:12",
							"usedErrors": []
						}
					],
					"src": "46:384:12"
				},
				"id": 12
			},
			"contracts/interfaces/external/univ3/IUniswapV3Pool.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/external/univ3/IUniswapV3Pool.sol",
					"exportedSymbols": {
						"IUniswapV3Pool": [
							985
						],
						"IUniswapV3PoolActions": [
							1081
						],
						"IUniswapV3PoolDerivedState": [
							1098
						],
						"IUniswapV3PoolImmutables": [
							1138
						],
						"IUniswapV3PoolState": [
							1246
						]
					},
					"id": 986,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 971,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:13"
						},
						{
							"absolutePath": "contracts/interfaces/external/univ3/pool/IUniswapV3PoolActions.sol",
							"file": "./pool/IUniswapV3PoolActions.sol",
							"id": 972,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 986,
							"sourceUnit": 1082,
							"src": "74:42:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/external/univ3/pool/IUniswapV3PoolImmutables.sol",
							"file": "./pool/IUniswapV3PoolImmutables.sol",
							"id": 973,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 986,
							"sourceUnit": 1139,
							"src": "118:45:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/external/univ3/pool/IUniswapV3PoolState.sol",
							"file": "./pool/IUniswapV3PoolState.sol",
							"id": 974,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 986,
							"sourceUnit": 1247,
							"src": "165:40:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/external/univ3/pool/IUniswapV3PoolDerivedState.sol",
							"file": "./pool/IUniswapV3PoolDerivedState.sol",
							"id": 975,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 986,
							"sourceUnit": 1099,
							"src": "207:47:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 977,
										"name": "IUniswapV3PoolImmutables",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1138,
										"src": "560:24:13"
									},
									"id": 978,
									"nodeType": "InheritanceSpecifier",
									"src": "560:24:13"
								},
								{
									"baseName": {
										"id": 979,
										"name": "IUniswapV3PoolState",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1246,
										"src": "591:19:13"
									},
									"id": 980,
									"nodeType": "InheritanceSpecifier",
									"src": "591:19:13"
								},
								{
									"baseName": {
										"id": 981,
										"name": "IUniswapV3PoolDerivedState",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1098,
										"src": "617:26:13"
									},
									"id": 982,
									"nodeType": "InheritanceSpecifier",
									"src": "617:26:13"
								},
								{
									"baseName": {
										"id": 983,
										"name": "IUniswapV3PoolActions",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1081,
										"src": "650:21:13"
									},
									"id": 984,
									"nodeType": "InheritanceSpecifier",
									"src": "650:21:13"
								}
							],
							"canonicalName": "IUniswapV3Pool",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 976,
								"nodeType": "StructuredDocumentation",
								"src": "258:269:13",
								"text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
							},
							"fullyImplemented": false,
							"id": 985,
							"linearizedBaseContracts": [
								985,
								1081,
								1098,
								1246,
								1138
							],
							"name": "IUniswapV3Pool",
							"nameLocation": "537:14:13",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 986,
							"src": "527:152:13",
							"usedErrors": []
						}
					],
					"src": "46:635:13"
				},
				"id": 13
			},
			"contracts/interfaces/external/univ3/pool/IUniswapV3PoolActions.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/external/univ3/pool/IUniswapV3PoolActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolActions": [
							1081
						]
					},
					"id": 1082,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 987,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 988,
								"nodeType": "StructuredDocumentation",
								"src": "74:104:14",
								"text": "@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"
							},
							"fullyImplemented": false,
							"id": 1081,
							"linearizedBaseContracts": [
								1081
							],
							"name": "IUniswapV3PoolActions",
							"nameLocation": "188:21:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 989,
										"nodeType": "StructuredDocumentation",
										"src": "217:208:14",
										"text": "@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"
									},
									"functionSelector": "f637731d",
									"id": 994,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "440:10:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "459:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "451:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 990,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "450:22:14"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "481:0:14"
									},
									"scope": 1081,
									"src": "431:51:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 995,
										"nodeType": "StructuredDocumentation",
										"src": "490:1039:14",
										"text": "@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
									},
									"functionSelector": "3c8a7d8d",
									"id": 1012,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1544:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1567:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "1559:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1559:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1593:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "1587:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 998,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1587:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1619:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "1613:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1000,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1613:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1647:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "1639:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1002,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1639:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1679:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "1664:19:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1004,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1664:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1548:142:14"
									},
									"returnParameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1717:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "1709:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1709:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1734:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "1726:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1726:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1708:34:14"
									},
									"scope": 1081,
									"src": "1535:208:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1013,
										"nodeType": "StructuredDocumentation",
										"src": "1751:1064:14",
										"text": "@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "4f1eb3d8",
									"id": 1030,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nameLocation": "2830:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2856:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "2848:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2848:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2882:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "2876:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1016,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2876:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2908:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "2902:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1018,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2902:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "2936:16:14",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "2928:24:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1020,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2928:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "2971:16:14",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "2963:24:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1022,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2963:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2837:157:14"
									},
									"returnParameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3021:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "3013:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1025,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3013:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3038:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "3030:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1027,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3030:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:34:14"
									},
									"scope": 1081,
									"src": "2821:226:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1031,
										"nodeType": "StructuredDocumentation",
										"src": "3055:638:14",
										"text": "@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
									},
									"functionSelector": "a34123a7",
									"id": 1044,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "3708:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "3729:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "3723:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1032,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3723:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "3755:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "3749:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1034,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3749:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3783:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "3775:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1036,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3775:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3712:84:14"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3823:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "3815:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3815:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3840:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "3832:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3814:34:14"
									},
									"scope": 1081,
									"src": "3699:150:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1045,
										"nodeType": "StructuredDocumentation",
										"src": "3857:1024:14",
										"text": "@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
									},
									"functionSelector": "128acb08",
									"id": 1062,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "4896:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4919:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "4911:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4911:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nameLocation": "4944:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "4939:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1048,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4939:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "amountSpecified",
												"nameLocation": "4972:15:14",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "4965:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1050,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4965:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nameLocation": "5006:17:14",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "4998:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1052,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4998:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5049:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "5034:19:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1054,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5034:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4900:160:14"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5086:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "5079:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1057,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5079:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5102:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "5095:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1059,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5095:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5078:32:14"
									},
									"scope": 1081,
									"src": "4887:224:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1063,
										"nodeType": "StructuredDocumentation",
										"src": "5119:664:14",
										"text": "@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"
									},
									"functionSelector": "490e6cbc",
									"id": 1074,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flash",
									"nameLocation": "5798:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5822:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "5814:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5814:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5850:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "5842:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5842:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5876:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "5868:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5909:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "5894:19:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1070,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5894:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5803:117:14"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5929:0:14"
									},
									"scope": 1081,
									"src": "5789:141:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1075,
										"nodeType": "StructuredDocumentation",
										"src": "5938:370:14",
										"text": "@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"
									},
									"functionSelector": "32148f67",
									"id": 1080,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseObservationCardinalityNext",
									"nameLocation": "6323:34:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "6365:26:14",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "6358:33:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1076,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6358:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6357:35:14"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6401:0:14"
									},
									"scope": 1081,
									"src": "6314:88:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1082,
							"src": "178:6227:14",
							"usedErrors": []
						}
					],
					"src": "46:6361:14"
				},
				"id": 14
			},
			"contracts/interfaces/external/univ3/pool/IUniswapV3PoolDerivedState.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/external/univ3/pool/IUniswapV3PoolDerivedState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolDerivedState": [
							1098
						]
					},
					"id": 1099,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1083,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolDerivedState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1084,
								"nodeType": "StructuredDocumentation",
								"src": "74:225:15",
								"text": "@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."
							},
							"fullyImplemented": false,
							"id": 1098,
							"linearizedBaseContracts": [
								1098
							],
							"name": "IUniswapV3PoolDerivedState",
							"nameLocation": "309:26:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "343:1054:15",
										"text": "@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"
									},
									"functionSelector": "883bdbfd",
									"id": 1097,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observe",
									"nameLocation": "1412:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "secondsAgos",
												"nameLocation": "1438:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "1420:29:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1086,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1420:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 1087,
													"nodeType": "ArrayTypeName",
													"src": "1420:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1419:31:15"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "tickCumulatives",
												"nameLocation": "1516:15:15",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "1501:30:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
													"typeString": "int56[]"
												},
												"typeName": {
													"baseType": {
														"id": 1090,
														"name": "int56",
														"nodeType": "ElementaryTypeName",
														"src": "1501:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"id": 1091,
													"nodeType": "ArrayTypeName",
													"src": "1501:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
														"typeString": "int56[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128s",
												"nameLocation": "1550:34:15",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "1533:51:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 1093,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "1533:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 1094,
													"nodeType": "ArrayTypeName",
													"src": "1533:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1500:85:15"
									},
									"scope": 1098,
									"src": "1403:183:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1099,
							"src": "299:1290:15",
							"usedErrors": []
						}
					],
					"src": "46:1545:15"
				},
				"id": 15
			},
			"contracts/interfaces/external/univ3/pool/IUniswapV3PoolImmutables.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/external/univ3/pool/IUniswapV3PoolImmutables.sol",
					"exportedSymbols": {
						"IUniswapV3PoolImmutables": [
							1138
						]
					},
					"id": 1139,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1100,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolImmutables",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1101,
								"nodeType": "StructuredDocumentation",
								"src": "74:155:16",
								"text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
							},
							"fullyImplemented": false,
							"id": 1138,
							"linearizedBaseContracts": [
								1138
							],
							"name": "IUniswapV3PoolImmutables",
							"nameLocation": "239:24:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "271:139:16",
										"text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
									},
									"functionSelector": "c45a0155",
									"id": 1107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "425:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "432:2:16"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "458:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "458:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "457:9:16"
									},
									"scope": 1138,
									"src": "416:51:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1108,
										"nodeType": "StructuredDocumentation",
										"src": "475:114:16",
										"text": "@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "0dfe1681",
									"id": 1113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "604:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "610:2:16"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "636:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:9:16"
									},
									"scope": 1138,
									"src": "595:50:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1114,
										"nodeType": "StructuredDocumentation",
										"src": "653:115:16",
										"text": "@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "d21220a7",
									"id": 1119,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "783:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "789:2:16"
									},
									"returnParameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "815:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "815:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "814:9:16"
									},
									"scope": 1138,
									"src": "774:50:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1120,
										"nodeType": "StructuredDocumentation",
										"src": "832:85:16",
										"text": "@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"
									},
									"functionSelector": "ddca3f43",
									"id": 1125,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nameLocation": "932:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "935:2:16"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "961:6:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1122,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "961:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "960:8:16"
									},
									"scope": 1138,
									"src": "923:46:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1126,
										"nodeType": "StructuredDocumentation",
										"src": "977:362:16",
										"text": "@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
									},
									"functionSelector": "d0c93a7c",
									"id": 1131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacing",
									"nameLocation": "1354:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1365:2:16"
									},
									"returnParameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "1391:5:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1128,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1391:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1390:7:16"
									},
									"scope": 1138,
									"src": "1345:53:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1132,
										"nodeType": "StructuredDocumentation",
										"src": "1406:366:16",
										"text": "@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
									},
									"functionSelector": "70cf754a",
									"id": 1137,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxLiquidityPerTick",
									"nameLocation": "1787:19:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1806:2:16"
									},
									"returnParameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "1832:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1134,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1832:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1831:9:16"
									},
									"scope": 1138,
									"src": "1778:63:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1139,
							"src": "229:1615:16",
							"usedErrors": []
						}
					],
					"src": "46:1800:16"
				},
				"id": 16
			},
			"contracts/interfaces/external/univ3/pool/IUniswapV3PoolState.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/external/univ3/pool/IUniswapV3PoolState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolState": [
							1246
						]
					},
					"id": 1247,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1140,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1141,
								"nodeType": "StructuredDocumentation",
								"src": "73:172:17",
								"text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
							},
							"fullyImplemented": false,
							"id": 1246,
							"linearizedBaseContracts": [
								1246
							],
							"name": "IUniswapV3PoolState",
							"nameLocation": "255:19:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1142,
										"nodeType": "StructuredDocumentation",
										"src": "282:1152:17",
										"text": "@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"
									},
									"functionSelector": "3850c7bd",
									"id": 1159,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slot0",
									"nameLocation": "1449:5:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1454:2:17"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1529:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "1521:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1144,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1521:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1562:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "1556:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1146,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1556:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "observationIndex",
												"nameLocation": "1588:16:17",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "1581:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1148,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1581:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "observationCardinality",
												"nameLocation": "1626:22:17",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "1619:29:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1150,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1619:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "1670:26:17",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "1663:33:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1152,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1663:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "feeProtocol",
												"nameLocation": "1717:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "1711:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1154,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1711:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "unlocked",
												"nameLocation": "1748:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "1743:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1156,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1743:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1506:261:17"
									},
									"scope": 1246,
									"src": "1440:328:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "1776:169:17",
										"text": "@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "f3058399",
									"id": 1165,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal0X128",
									"nameLocation": "1960:20:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1980:2:17"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "2006:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2006:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2005:9:17"
									},
									"scope": 1246,
									"src": "1951:64:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1166,
										"nodeType": "StructuredDocumentation",
										"src": "2023:169:17",
										"text": "@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "46141319",
									"id": 1171,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal1X128",
									"nameLocation": "2207:20:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2227:2:17"
									},
									"returnParameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "2253:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2253:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2252:9:17"
									},
									"scope": 1246,
									"src": "2198:64:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1172,
										"nodeType": "StructuredDocumentation",
										"src": "2270:148:17",
										"text": "@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"
									},
									"functionSelector": "1ce9d079",
									"id": 1179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolPerformanceFees",
									"nameLocation": "2433:23:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2456:2:17"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "2490:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "2482:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1174,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2482:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "2506:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "2498:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1176,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2498:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2481:32:17"
									},
									"scope": 1246,
									"src": "2424:90:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1180,
										"nodeType": "StructuredDocumentation",
										"src": "2522:151:17",
										"text": "@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"
									},
									"functionSelector": "1a686502",
									"id": 1185,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidity",
									"nameLocation": "2688:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2697:2:17"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "2723:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1182,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2723:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2722:9:17"
									},
									"scope": 1246,
									"src": "2679:53:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1186,
										"nodeType": "StructuredDocumentation",
										"src": "2740:1257:17",
										"text": "@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."
									},
									"functionSelector": "f30dba93",
									"id": 1207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ticks",
									"nameLocation": "4012:5:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "4024:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "4018:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1187,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4018:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4017:12:17"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "liquidityGross",
												"nameLocation": "4102:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "4094:22:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1190,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4094:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "liquidityNet",
												"nameLocation": "4138:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "4131:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1192,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4131:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "feeGrowthOutside0X128",
												"nameLocation": "4173:21:17",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "4165:29:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "feeGrowthOutside1X128",
												"nameLocation": "4217:21:17",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "4209:29:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4209:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "tickCumulativeOutside",
												"nameLocation": "4259:21:17",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "4253:27:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 1198,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "4253:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "secondsPerLiquidityOutsideX128",
												"nameLocation": "4303:30:17",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "4295:38:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1200,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4295:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "secondsOutside",
												"nameLocation": "4355:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "4348:21:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1202,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4348:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "4389:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "4384:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1204,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4384:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4079:332:17"
									},
									"scope": 1246,
									"src": "4003:409:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "4420:99:17",
										"text": "@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
									},
									"functionSelector": "5339c296",
									"id": 1215,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickBitmap",
									"nameLocation": "4534:10:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "wordPosition",
												"nameLocation": "4551:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "4545:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 1209,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "4545:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4544:20:17"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "4588:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4588:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4587:9:17"
									},
									"scope": 1246,
									"src": "4525:72:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1216,
										"nodeType": "StructuredDocumentation",
										"src": "4605:706:17",
										"text": "@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
									},
									"functionSelector": "514ea4bf",
									"id": 1231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nameLocation": "5326:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "5344:3:17",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "5336:11:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1217,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5335:13:17"
									},
									"returnParameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "_liquidity",
												"nameLocation": "5421:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "5413:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1220,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5413:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nameLocation": "5454:24:17",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "5446:32:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5446:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nameLocation": "5501:24:17",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "5493:32:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5493:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nameLocation": "5548:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "5540:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1226,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5540:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nameLocation": "5582:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "5574:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1228,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5574:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5398:206:17"
									},
									"scope": 1246,
									"src": "5317:288:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "5613:756:17",
										"text": "@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"
									},
									"functionSelector": "252c09d7",
									"id": 1245,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observations",
									"nameLocation": "6384:12:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "6405:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "6397:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6397:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6396:15:17"
									},
									"returnParameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nameLocation": "6483:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "6476:21:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1236,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6476:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nameLocation": "6518:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "6512:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 1238,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "6512:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nameLocation": "6555:33:17",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "6547:41:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1240,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6547:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "6608:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "6603:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1242,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6603:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6461:169:17"
									},
									"scope": 1246,
									"src": "6375:256:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1247,
							"src": "245:6389:17",
							"usedErrors": []
						}
					],
					"src": "46:6590:17"
				},
				"id": 17
			},
			"contracts/interfaces/oracles/IOracle.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/oracles/IOracle.sol",
					"exportedSymbols": {
						"IOracle": [
							1265
						]
					},
					"id": 1266,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1248,
							"literals": [
								"solidity",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:22:18"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IOracle",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1265,
							"linearizedBaseContracts": [
								1265
							],
							"name": "IOracle",
							"nameLocation": "69:7:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "84:1068:18",
										"text": "@notice Oracle price for tokens as a Q64.96 value.\n @notice Returns pricing information based on the indexes of non-zero bits in safetyIndicesSet.\n @notice It is possible that not all indices will have their respective prices returned.\n @dev The price is token1 / token0 i.e. how many weis of token1 required for 1 wei of token0.\n The safety indexes are:\n 1 - unsafe, this is typically a spot price that can be easily manipulated,\n 2 - 4 - more or less safe, this is typically a uniV3 oracle, where the safety is defined by the timespan of the average price\n 5 - safe - this is typically a chailink oracle\n @param token0 Reference to token0\n @param token1 Reference to token1\n @param safetyIndicesSet Bitmask of safety indices that are allowed for the return prices. For set of safety indexes = { 1 }, safetyIndicesSet = 0x2\n @return pricesX96 Prices that satisfy safetyIndex and tokens\n @return safetyIndices Safety indices for those prices"
									},
									"functionSelector": "6d80125b",
									"id": 1264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "priceX96",
									"nameLocation": "1167:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "1194:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "1186:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "1219:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "1211:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "safetyIndicesSet",
												"nameLocation": "1244:16:18",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "1236:24:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1236:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1175:92:18"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "pricesX96",
												"nameLocation": "1308:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "1291:26:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1257,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1291:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1258,
													"nodeType": "ArrayTypeName",
													"src": "1291:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "safetyIndices",
												"nameLocation": "1336:13:18",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "1319:30:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1260,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1319:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1261,
													"nodeType": "ArrayTypeName",
													"src": "1319:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1290:60:18"
									},
									"scope": 1265,
									"src": "1158:193:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1266,
							"src": "59:1295:18",
							"usedErrors": []
						}
					],
					"src": "33:1323:18"
				},
				"id": 18
			},
			"contracts/interfaces/utils/IContractMeta.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/utils/IContractMeta.sol",
					"exportedSymbols": {
						"IContractMeta": [
							1288
						]
					},
					"id": 1289,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1267,
							"literals": [
								"solidity",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:22:19"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IContractMeta",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1288,
							"linearizedBaseContracts": [
								1288
							],
							"name": "IContractMeta",
							"nameLocation": "69:13:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "75d0c0dc",
									"id": 1272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "contractName",
									"nameLocation": "99:12:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "111:2:19"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "137:13:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1269,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "137:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "136:15:19"
									},
									"scope": 1288,
									"src": "90:62:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0e3e80ac",
									"id": 1277,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "contractNameBytes",
									"nameLocation": "167:17:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "184:2:19"
									},
									"returnParameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "210:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1274,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "210:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "209:9:19"
									},
									"scope": 1288,
									"src": "158:61:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a0a8e460",
									"id": 1282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "contractVersion",
									"nameLocation": "236:15:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "251:2:19"
									},
									"returnParameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "277:13:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1279,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "277:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "276:15:19"
									},
									"scope": 1288,
									"src": "227:65:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "06a46239",
									"id": 1287,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "contractVersionBytes",
									"nameLocation": "307:20:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "327:2:19"
									},
									"returnParameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "353:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1284,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "353:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "352:9:19"
									},
									"scope": 1288,
									"src": "298:64:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1289,
							"src": "59:306:19",
							"usedErrors": []
						}
					],
					"src": "33:334:19"
				},
				"id": 19
			},
			"contracts/interfaces/utils/IDefaultAccessControl.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/utils/IDefaultAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							72
						],
						"IAccessControlEnumerable": [
							97
						],
						"IDefaultAccessControl": [
							1310
						]
					},
					"id": 1311,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1290,
							"literals": [
								"solidity",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:22:20"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControlEnumerable.sol",
							"file": "@openzeppelin/contracts/access/IAccessControlEnumerable.sol",
							"id": 1291,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1311,
							"sourceUnit": 98,
							"src": "59:69:20",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1292,
										"name": "IAccessControlEnumerable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 97,
										"src": "167:24:20"
									},
									"id": 1293,
									"nodeType": "InheritanceSpecifier",
									"src": "167:24:20"
								}
							],
							"canonicalName": "IDefaultAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1310,
							"linearizedBaseContracts": [
								1310,
								97,
								72
							],
							"name": "IDefaultAccessControl",
							"nameLocation": "142:21:20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1294,
										"nodeType": "StructuredDocumentation",
										"src": "199:150:20",
										"text": "@notice Checks that the address is contract admin.\n @param who Address to check\n @return `true` if who is admin, `false` otherwise"
									},
									"functionSelector": "24d7806c",
									"id": 1301,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isAdmin",
									"nameLocation": "364:7:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "who",
												"nameLocation": "380:3:20",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "372:11:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "372:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "371:13:20"
									},
									"returnParameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "408:4:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1298,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "408:4:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "407:6:20"
									},
									"scope": 1310,
									"src": "355:59:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1302,
										"nodeType": "StructuredDocumentation",
										"src": "422:153:20",
										"text": "@notice Checks that the address is contract admin.\n @param who Address to check\n @return `true` if who is operator, `false` otherwise"
									},
									"functionSelector": "6d70f7ae",
									"id": 1309,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isOperator",
									"nameLocation": "590:10:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "who",
												"nameLocation": "609:3:20",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "601:11:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:13:20"
									},
									"returnParameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "637:4:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1306,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "637:4:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:6:20"
									},
									"scope": 1310,
									"src": "581:62:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1311,
							"src": "132:514:20",
							"usedErrors": []
						}
					],
					"src": "33:615:20"
				},
				"id": 20
			},
			"contracts/interfaces/vaults/IIntegrationVault.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/vaults/IIntegrationVault.sol",
					"exportedSymbols": {
						"IAccessControl": [
							72
						],
						"IAccessControlEnumerable": [
							97
						],
						"IDefaultAccessControl": [
							1310
						],
						"IERC1271": [
							767
						],
						"IERC165": [
							347
						],
						"IERC721": [
							293
						],
						"IIntegrationVault": [
							1390
						],
						"IProtocolGovernance": [
							610
						],
						"IUnitPricesGovernance": [
							663
						],
						"IVault": [
							1618
						],
						"IVaultGovernance": [
							1687
						],
						"IVaultRegistry": [
							754
						]
					},
					"id": 1391,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1312,
							"literals": [
								"solidity",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:22:21"
						},
						{
							"absolutePath": "contracts/interfaces/external/erc/IERC1271.sol",
							"file": "../external/erc/IERC1271.sol",
							"id": 1313,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1391,
							"sourceUnit": 768,
							"src": "59:38:21",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/vaults/IVault.sol",
							"file": "./IVault.sol",
							"id": 1314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1391,
							"sourceUnit": 1619,
							"src": "99:22:21",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1315,
										"name": "IVault",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1618,
										"src": "156:6:21"
									},
									"id": 1316,
									"nodeType": "InheritanceSpecifier",
									"src": "156:6:21"
								},
								{
									"baseName": {
										"id": 1317,
										"name": "IERC1271",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 767,
										"src": "164:8:21"
									},
									"id": 1318,
									"nodeType": "InheritanceSpecifier",
									"src": "164:8:21"
								}
							],
							"canonicalName": "IIntegrationVault",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1390,
							"linearizedBaseContracts": [
								1390,
								767,
								1618,
								347
							],
							"name": "IIntegrationVault",
							"nameLocation": "135:17:21",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "180:850:21",
										"text": "@notice Pushes tokens on the vault balance to the underlying protocol. For example, for Yearn this operation will take USDC from\n the contract balance and convert it to yUSDC.\n @dev Tokens **must** be a subset of Vault Tokens. However, the convention is that if tokenAmount == 0 it is the same as token is missing.\n Also notice that this operation doesn't guarantee that tokenAmounts will be invested in full.\n @param tokens Tokens to push\n @param tokenAmounts Amounts of tokens to push\n @param options Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions\n @return actualTokenAmounts The amounts actually invested. It could be less than tokenAmounts (but not higher)"
									},
									"functionSelector": "566ca6b4",
									"id": 1333,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "push",
									"nameLocation": "1045:4:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "1077:6:21",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1060:23:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1320,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1060:7:21",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1321,
													"nodeType": "ArrayTypeName",
													"src": "1060:9:21",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "tokenAmounts",
												"nameLocation": "1111:12:21",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1094:29:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1323,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1094:7:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1324,
													"nodeType": "ArrayTypeName",
													"src": "1094:9:21",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "options",
												"nameLocation": "1147:7:21",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1134:20:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1326,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1134:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1049:112:21"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "actualTokenAmounts",
												"nameLocation": "1197:18:21",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1180:35:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1329,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1180:7:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1330,
													"nodeType": "ArrayTypeName",
													"src": "1180:9:21",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1179:37:21"
									},
									"scope": 1390,
									"src": "1036:181:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1334,
										"nodeType": "StructuredDocumentation",
										"src": "1225:652:21",
										"text": "@notice The same as `push` method above but transfers tokens to vault balance prior to calling push.\n After the `push` it returns all the leftover tokens back (`push` method doesn't guarantee that tokenAmounts will be invested in full).\n @param tokens Tokens to push\n @param tokenAmounts Amounts of tokens to push\n @param options Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions\n @return actualTokenAmounts The amounts actually invested. It could be less than tokenAmounts (but not higher)"
									},
									"functionSelector": "27a35e5a",
									"id": 1350,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndPush",
									"nameLocation": "1892:15:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1926:4:21",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "1918:12:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1918:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "1958:6:21",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "1941:23:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1337,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1941:7:21",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1338,
													"nodeType": "ArrayTypeName",
													"src": "1941:9:21",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "tokenAmounts",
												"nameLocation": "1992:12:21",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "1975:29:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1340,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1975:7:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1341,
													"nodeType": "ArrayTypeName",
													"src": "1975:9:21",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "options",
												"nameLocation": "2028:7:21",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "2015:20:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1343,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2015:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:135:21"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "actualTokenAmounts",
												"nameLocation": "2078:18:21",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "2061:35:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1346,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2061:7:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1347,
													"nodeType": "ArrayTypeName",
													"src": "2061:9:21",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2060:37:21"
									},
									"scope": 1390,
									"src": "1883:215:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "2106:1466:21",
										"text": "@notice Pulls tokens from the underlying protocol to the `to` address.\n @dev Can only be called but Vault Owner or Strategy. Vault owner is the owner of NFT for this vault in VaultManager.\n Strategy is approved address for the vault NFT.\n When called by vault owner this method just pulls the tokens from the protocol to the `to` address\n When called by strategy on vault other than zero vault it pulls the tokens to zero vault (required `to` == zero vault)\n When called by strategy on zero vault it pulls the tokens to zero vault, pushes tokens on the `to` vault, and reclaims everything that's left.\n Thus any vault other than zero vault cannot have any tokens on it\n Tokens **must** be a subset of Vault Tokens. However, the convention is that if tokenAmount == 0 it is the same as token is missing.\n Pull is fulfilled on the best effort basis, i.e. if the tokenAmounts overflows available funds it withdraws all the funds.\n @param to Address to receive the tokens\n @param tokens Tokens to pull\n @param tokenAmounts Amounts of tokens to pull\n @param options Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions\n @return actualTokenAmounts The amounts actually withdrawn. It could be less than tokenAmounts (but not higher)"
									},
									"functionSelector": "2062d754",
									"id": 1367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pull",
									"nameLocation": "3587:4:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3610:2:21",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "3602:10:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3602:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "3640:6:21",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "3623:23:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1354,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3623:7:21",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1355,
													"nodeType": "ArrayTypeName",
													"src": "3623:9:21",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "tokenAmounts",
												"nameLocation": "3674:12:21",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "3657:29:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1357,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3657:7:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1358,
													"nodeType": "ArrayTypeName",
													"src": "3657:9:21",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "options",
												"nameLocation": "3710:7:21",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "3697:20:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1360,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3697:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3591:133:21"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "actualTokenAmounts",
												"nameLocation": "3760:18:21",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "3743:35:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1363,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3743:7:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1364,
													"nodeType": "ArrayTypeName",
													"src": "3743:9:21",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3742:37:21"
									},
									"scope": 1390,
									"src": "3578:202:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1368,
										"nodeType": "StructuredDocumentation",
										"src": "3788:205:21",
										"text": "@notice Claim ERC20 tokens from vault balance to zero vault.\n @dev Cannot be called from zero vault.\n @param tokens Tokens to claim\n @return actualTokenAmounts Amounts reclaimed"
									},
									"functionSelector": "05e1c942",
									"id": 1377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "reclaimTokens",
									"nameLocation": "4008:13:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "4039:6:21",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "4022:23:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1369,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4022:7:21",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1370,
													"nodeType": "ArrayTypeName",
													"src": "4022:9:21",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4021:25:21"
									},
									"returnParameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "actualTokenAmounts",
												"nameLocation": "4082:18:21",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "4065:35:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1373,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4065:7:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1374,
													"nodeType": "ArrayTypeName",
													"src": "4065:9:21",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4064:37:21"
									},
									"scope": 1390,
									"src": "3999:103:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1378,
										"nodeType": "StructuredDocumentation",
										"src": "4110:591:21",
										"text": "@notice Execute one of whitelisted calls.\n @dev Can only be called by Vault Owner or Strategy. Vault owner is the owner of NFT for this vault in VaultManager.\n Strategy is approved address for the vault NFT.\n Since this method allows sending arbitrary transactions, the destinations of the calls\n are whitelisted by Protocol Governance.\n @param to Address of the reward pool\n @param selector Selector of the call\n @param data Abi encoded parameters to `to::selector`\n @return result Result of execution of the call"
									},
									"functionSelector": "2e2f4cc2",
									"id": 1389,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "externalCall",
									"nameLocation": "4716:12:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4747:2:21",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "4739:10:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4739:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "selector",
												"nameLocation": "4767:8:21",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "4760:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1381,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4760:6:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4799:4:21",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "4786:17:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1383,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4786:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4728:82:21"
									},
									"returnParameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4850:6:21",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "4837:19:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1386,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4837:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4836:21:21"
									},
									"scope": 1390,
									"src": "4707:151:21",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1391,
							"src": "125:4736:21",
							"usedErrors": []
						}
					],
					"src": "33:4830:21"
				},
				"id": 21
			},
			"contracts/interfaces/vaults/IUniV3Vault.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/vaults/IUniV3Vault.sol",
					"exportedSymbols": {
						"IAccessControl": [
							72
						],
						"IAccessControlEnumerable": [
							97
						],
						"IDefaultAccessControl": [
							1310
						],
						"IERC1271": [
							767
						],
						"IERC165": [
							347
						],
						"IERC721": [
							293
						],
						"IERC721Receiver": [
							311
						],
						"IIntegrationVault": [
							1390
						],
						"INonfungiblePositionManager": [
							953
						],
						"IPeripheryImmutableState": [
							969
						],
						"IProtocolGovernance": [
							610
						],
						"IUniV3Vault": [
							1466
						],
						"IUniswapV3Pool": [
							985
						],
						"IUniswapV3PoolActions": [
							1081
						],
						"IUniswapV3PoolDerivedState": [
							1098
						],
						"IUniswapV3PoolImmutables": [
							1138
						],
						"IUniswapV3PoolState": [
							1246
						],
						"IUnitPricesGovernance": [
							663
						],
						"IVault": [
							1618
						],
						"IVaultGovernance": [
							1687
						],
						"IVaultRegistry": [
							754
						]
					},
					"id": 1467,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1392,
							"literals": [
								"solidity",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "46:22:22"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"id": 1393,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1467,
							"sourceUnit": 312,
							"src": "72:66:22",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/vaults/IIntegrationVault.sol",
							"file": "./IIntegrationVault.sol",
							"id": 1394,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1467,
							"sourceUnit": 1391,
							"src": "140:33:22",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/external/univ3/INonfungiblePositionManager.sol",
							"file": "../external/univ3/INonfungiblePositionManager.sol",
							"id": 1395,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1467,
							"sourceUnit": 954,
							"src": "175:59:22",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/external/univ3/IUniswapV3Pool.sol",
							"file": "../external/univ3/IUniswapV3Pool.sol",
							"id": 1396,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1467,
							"sourceUnit": 986,
							"src": "236:46:22",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1397,
										"name": "IERC721Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "311:15:22"
									},
									"id": 1398,
									"nodeType": "InheritanceSpecifier",
									"src": "311:15:22"
								},
								{
									"baseName": {
										"id": 1399,
										"name": "IIntegrationVault",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1390,
										"src": "328:17:22"
									},
									"id": 1400,
									"nodeType": "InheritanceSpecifier",
									"src": "328:17:22"
								}
							],
							"canonicalName": "IUniV3Vault",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1466,
							"linearizedBaseContracts": [
								1466,
								1390,
								767,
								1618,
								347,
								311
							],
							"name": "IUniV3Vault",
							"nameLocation": "296:11:22",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IUniV3Vault.Options",
									"id": 1407,
									"members": [
										{
											"constant": false,
											"id": 1402,
											"mutability": "mutable",
											"name": "amount0Min",
											"nameLocation": "387:10:22",
											"nodeType": "VariableDeclaration",
											"scope": 1407,
											"src": "379:18:22",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1401,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "379:7:22",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1404,
											"mutability": "mutable",
											"name": "amount1Min",
											"nameLocation": "416:10:22",
											"nodeType": "VariableDeclaration",
											"scope": 1407,
											"src": "408:18:22",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1403,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "408:7:22",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1406,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "445:8:22",
											"nodeType": "VariableDeclaration",
											"scope": 1407,
											"src": "437:16:22",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1405,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "437:7:22",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Options",
									"nameLocation": "360:7:22",
									"nodeType": "StructDefinition",
									"scope": 1466,
									"src": "353:108:22",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1408,
										"nodeType": "StructuredDocumentation",
										"src": "469:75:22",
										"text": "@notice Reference to INonfungiblePositionManager of UniswapV3 protocol."
									},
									"functionSelector": "791b98bc",
									"id": 1414,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positionManager",
									"nameLocation": "559:15:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:22"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "600:27:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_INonfungiblePositionManager_$953",
													"typeString": "contract INonfungiblePositionManager"
												},
												"typeName": {
													"id": 1411,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1410,
														"name": "INonfungiblePositionManager",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 953,
														"src": "600:27:22"
													},
													"referencedDeclaration": 953,
													"src": "600:27:22",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_INonfungiblePositionManager_$953",
														"typeString": "contract INonfungiblePositionManager"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:29:22"
									},
									"scope": 1466,
									"src": "550:79:22",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1415,
										"nodeType": "StructuredDocumentation",
										"src": "637:40:22",
										"text": "@notice Reference to UniswapV3 pool."
									},
									"functionSelector": "16f0115b",
									"id": 1421,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pool",
									"nameLocation": "692:4:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "696:2:22"
									},
									"returnParameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "722:14:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV3Pool_$985",
													"typeString": "contract IUniswapV3Pool"
												},
												"typeName": {
													"id": 1418,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1417,
														"name": "IUniswapV3Pool",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 985,
														"src": "722:14:22"
													},
													"referencedDeclaration": 985,
													"src": "722:14:22",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$985",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "721:16:22"
									},
									"scope": 1466,
									"src": "683:55:22",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1422,
										"nodeType": "StructuredDocumentation",
										"src": "746:41:22",
										"text": "@notice NFT of UniV3 position manager"
									},
									"functionSelector": "f4adc08b",
									"id": 1427,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniV3Nft",
									"nameLocation": "802:8:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "810:2:22"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "836:7:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "835:9:22"
									},
									"scope": 1466,
									"src": "793:52:22",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "853:246:22",
										"text": "@notice Returns tokenAmounts corresponding to liquidity, based on the current Uniswap position\n @param liquidity Liquidity that will be converted to token amounts\n @return tokenAmounts Token amounts for the specified liquidity"
									},
									"functionSelector": "c85fc740",
									"id": 1436,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidityToTokenAmounts",
									"nameLocation": "1114:23:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1146:9:22",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "1138:17:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1429,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1138:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1137:19:22"
									},
									"returnParameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "tokenAmounts",
												"nameLocation": "1197:12:22",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "1180:29:22",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1432,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1180:7:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1433,
													"nodeType": "ArrayTypeName",
													"src": "1180:9:22",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1179:31:22"
									},
									"scope": 1466,
									"src": "1105:106:22",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1437,
										"nodeType": "StructuredDocumentation",
										"src": "1219:247:22",
										"text": "@notice Returns liquidity corresponding to token amounts, based on the current Uniswap position\n @param tokenAmounts Token amounts that will be converted to liquidity\n @return liquidity Liquidity for the specified token amounts"
									},
									"functionSelector": "00f73da2",
									"id": 1445,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenAmountsToLiquidity",
									"nameLocation": "1481:23:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "tokenAmounts",
												"nameLocation": "1522:12:22",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "1505:29:22",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1438,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1505:7:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1439,
													"nodeType": "ArrayTypeName",
													"src": "1505:9:22",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1504:31:22"
									},
									"returnParameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1567:9:22",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "1559:17:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1442,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1559:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1558:19:22"
									},
									"scope": 1466,
									"src": "1472:106:22",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "1586:355:22",
										"text": "@notice Initialized a new contract.\n @dev Can only be initialized by vault governance\n @param nft_ NFT of the vault in the VaultRegistry\n @param vaultTokens_ ERC20 tokens that will be managed by this Vault\n @param fee_ Fee of the UniV3 pool\n @param uniV3Helper_ address of helper for UniV3 arithmetic with ticks"
									},
									"functionSelector": "1912128b",
									"id": 1458,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "1956:10:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "nft_",
												"nameLocation": "1985:4:22",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "1977:12:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1977:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "vaultTokens_",
												"nameLocation": "2017:12:22",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "2000:29:22",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1449,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2000:7:22",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1450,
													"nodeType": "ArrayTypeName",
													"src": "2000:9:22",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "fee_",
												"nameLocation": "2047:4:22",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "2040:11:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1452,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "2040:6:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "uniV3Helper_",
												"nameLocation": "2070:12:22",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "2062:20:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2062:7:22",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1966:123:22"
									},
									"returnParameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2098:0:22"
									},
									"scope": 1466,
									"src": "1947:152:22",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1459,
										"nodeType": "StructuredDocumentation",
										"src": "2107:45:22",
										"text": "@notice Collect UniV3 fees to zero vault."
									},
									"functionSelector": "c27b2c2d",
									"id": 1465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectEarnings",
									"nameLocation": "2167:15:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2182:2:22"
									},
									"returnParameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "collectedEarnings",
												"nameLocation": "2220:17:22",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "2203:34:22",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1461,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2203:7:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1462,
													"nodeType": "ArrayTypeName",
													"src": "2203:9:22",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2202:36:22"
									},
									"scope": 1466,
									"src": "2158:81:22",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1467,
							"src": "286:1956:22",
							"usedErrors": []
						}
					],
					"src": "46:2198:22"
				},
				"id": 22
			},
			"contracts/interfaces/vaults/IUniV3VaultGovernance.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/vaults/IUniV3VaultGovernance.sol",
					"exportedSymbols": {
						"IAccessControl": [
							72
						],
						"IAccessControlEnumerable": [
							97
						],
						"IDefaultAccessControl": [
							1310
						],
						"IERC1271": [
							767
						],
						"IERC165": [
							347
						],
						"IERC721": [
							293
						],
						"IERC721Receiver": [
							311
						],
						"IIntegrationVault": [
							1390
						],
						"INonfungiblePositionManager": [
							953
						],
						"IOracle": [
							1265
						],
						"IPeripheryImmutableState": [
							969
						],
						"IProtocolGovernance": [
							610
						],
						"IUniV3Vault": [
							1466
						],
						"IUniV3VaultGovernance": [
							1561
						],
						"IUniswapV3Pool": [
							985
						],
						"IUniswapV3PoolActions": [
							1081
						],
						"IUniswapV3PoolDerivedState": [
							1098
						],
						"IUniswapV3PoolImmutables": [
							1138
						],
						"IUniswapV3PoolState": [
							1246
						],
						"IUnitPricesGovernance": [
							663
						],
						"IVault": [
							1618
						],
						"IVaultGovernance": [
							1687
						],
						"IVaultRegistry": [
							754
						]
					},
					"id": 1562,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1468,
							"literals": [
								"solidity",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "46:22:23"
						},
						{
							"absolutePath": "contracts/interfaces/external/univ3/INonfungiblePositionManager.sol",
							"file": "../external/univ3/INonfungiblePositionManager.sol",
							"id": 1469,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1562,
							"sourceUnit": 954,
							"src": "72:59:23",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/oracles/IOracle.sol",
							"file": "../oracles/IOracle.sol",
							"id": 1470,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1562,
							"sourceUnit": 1266,
							"src": "133:32:23",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/vaults/IVaultGovernance.sol",
							"file": "./IVaultGovernance.sol",
							"id": 1471,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1562,
							"sourceUnit": 1688,
							"src": "167:32:23",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/vaults/IUniV3Vault.sol",
							"file": "./IUniV3Vault.sol",
							"id": 1472,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1562,
							"sourceUnit": 1467,
							"src": "201:27:23",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1473,
										"name": "IVaultGovernance",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1687,
										"src": "267:16:23"
									},
									"id": 1474,
									"nodeType": "InheritanceSpecifier",
									"src": "267:16:23"
								}
							],
							"canonicalName": "IUniV3VaultGovernance",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1561,
							"linearizedBaseContracts": [
								1561,
								1687
							],
							"name": "IUniV3VaultGovernance",
							"nameLocation": "242:21:23",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IUniV3VaultGovernance.DelayedProtocolParams",
									"id": 1481,
									"members": [
										{
											"constant": false,
											"id": 1477,
											"mutability": "mutable",
											"name": "positionManager",
											"nameLocation": "539:15:23",
											"nodeType": "VariableDeclaration",
											"scope": 1481,
											"src": "511:43:23",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_INonfungiblePositionManager_$953",
												"typeString": "contract INonfungiblePositionManager"
											},
											"typeName": {
												"id": 1476,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1475,
													"name": "INonfungiblePositionManager",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 953,
													"src": "511:27:23"
												},
												"referencedDeclaration": 953,
												"src": "511:27:23",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_INonfungiblePositionManager_$953",
													"typeString": "contract INonfungiblePositionManager"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1480,
											"mutability": "mutable",
											"name": "oracle",
											"nameLocation": "573:6:23",
											"nodeType": "VariableDeclaration",
											"scope": 1481,
											"src": "565:14:23",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IOracle_$1265",
												"typeString": "contract IOracle"
											},
											"typeName": {
												"id": 1479,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1478,
													"name": "IOracle",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1265,
													"src": "565:7:23"
												},
												"referencedDeclaration": 1265,
												"src": "565:7:23",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IOracle_$1265",
													"typeString": "contract IOracle"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DelayedProtocolParams",
									"nameLocation": "478:21:23",
									"nodeType": "StructDefinition",
									"scope": 1561,
									"src": "471:116:23",
									"visibility": "public"
								},
								{
									"canonicalName": "IUniV3VaultGovernance.DelayedStrategyParams",
									"id": 1484,
									"members": [
										{
											"constant": false,
											"id": 1483,
											"mutability": "mutable",
											"name": "safetyIndicesSet",
											"nameLocation": "701:16:23",
											"nodeType": "VariableDeclaration",
											"scope": 1484,
											"src": "694:23:23",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 1482,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "694:6:23",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DelayedStrategyParams",
									"nameLocation": "661:21:23",
									"nodeType": "StructDefinition",
									"scope": 1561,
									"src": "654:71:23",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1485,
										"nodeType": "StructuredDocumentation",
										"src": "733:125:23",
										"text": "@notice Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay."
									},
									"functionSelector": "d34cc380",
									"id": 1491,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delayedProtocolParams",
									"nameLocation": "873:21:23",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "894:2:23"
									},
									"returnParameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "920:28:23",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DelayedProtocolParams_$1481_memory_ptr",
													"typeString": "struct IUniV3VaultGovernance.DelayedProtocolParams"
												},
												"typeName": {
													"id": 1488,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1487,
														"name": "DelayedProtocolParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1481,
														"src": "920:21:23"
													},
													"referencedDeclaration": 1481,
													"src": "920:21:23",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DelayedProtocolParams_$1481_storage_ptr",
														"typeString": "struct IUniV3VaultGovernance.DelayedProtocolParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "919:30:23"
									},
									"scope": 1561,
									"src": "864:86:23",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1492,
										"nodeType": "StructuredDocumentation",
										"src": "958:66:23",
										"text": "@notice Delayed Protocol Params staged for commit after delay."
									},
									"functionSelector": "c2cbdc67",
									"id": 1498,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stagedDelayedProtocolParams",
									"nameLocation": "1039:27:23",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1066:2:23"
									},
									"returnParameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "1092:28:23",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DelayedProtocolParams_$1481_memory_ptr",
													"typeString": "struct IUniV3VaultGovernance.DelayedProtocolParams"
												},
												"typeName": {
													"id": 1495,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1494,
														"name": "DelayedProtocolParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1481,
														"src": "1092:21:23"
													},
													"referencedDeclaration": 1481,
													"src": "1092:21:23",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DelayedProtocolParams_$1481_storage_ptr",
														"typeString": "struct IUniV3VaultGovernance.DelayedProtocolParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1091:30:23"
									},
									"scope": 1561,
									"src": "1030:92:23",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1499,
										"nodeType": "StructuredDocumentation",
										"src": "1130:165:23",
										"text": "@notice Stage Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay.\n @param params New params"
									},
									"functionSelector": "b2fe31ad",
									"id": 1505,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stageDelayedProtocolParams",
									"nameLocation": "1310:26:23",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1368:6:23",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "1337:37:23",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DelayedProtocolParams_$1481_calldata_ptr",
													"typeString": "struct IUniV3VaultGovernance.DelayedProtocolParams"
												},
												"typeName": {
													"id": 1501,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1500,
														"name": "DelayedProtocolParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1481,
														"src": "1337:21:23"
													},
													"referencedDeclaration": 1481,
													"src": "1337:21:23",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DelayedProtocolParams_$1481_storage_ptr",
														"typeString": "struct IUniV3VaultGovernance.DelayedProtocolParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1336:39:23"
									},
									"returnParameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1384:0:23"
									},
									"scope": 1561,
									"src": "1301:84:23",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1506,
										"nodeType": "StructuredDocumentation",
										"src": "1393:132:23",
										"text": "@notice Commit Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay."
									},
									"functionSelector": "98347a5d",
									"id": 1509,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "commitDelayedProtocolParams",
									"nameLocation": "1540:27:23",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1567:2:23"
									},
									"returnParameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1578:0:23"
									},
									"scope": 1561,
									"src": "1531:48:23",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1510,
										"nodeType": "StructuredDocumentation",
										"src": "1587:86:23",
										"text": "@notice Delayed Strategy Params\n @param nft VaultRegistry NFT of the vault"
									},
									"functionSelector": "8860d248",
									"id": 1518,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delayedStrategyParams",
									"nameLocation": "1688:21:23",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "1718:3:23",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "1710:11:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1709:13:23"
									},
									"returnParameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "1746:28:23",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DelayedStrategyParams_$1484_memory_ptr",
													"typeString": "struct IUniV3VaultGovernance.DelayedStrategyParams"
												},
												"typeName": {
													"id": 1515,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1514,
														"name": "DelayedStrategyParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1484,
														"src": "1746:21:23"
													},
													"referencedDeclaration": 1484,
													"src": "1746:21:23",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DelayedStrategyParams_$1484_storage_ptr",
														"typeString": "struct IUniV3VaultGovernance.DelayedStrategyParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1745:30:23"
									},
									"scope": 1561,
									"src": "1679:97:23",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1519,
										"nodeType": "StructuredDocumentation",
										"src": "1784:117:23",
										"text": "@notice Delayed Strategy Params staged for commit after delay.\n @param nft VaultRegistry NFT of the vault"
									},
									"functionSelector": "59f3dae7",
									"id": 1527,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stagedDelayedStrategyParams",
									"nameLocation": "1916:27:23",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "1952:3:23",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "1944:11:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1944:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1943:13:23"
									},
									"returnParameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "1980:28:23",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DelayedStrategyParams_$1484_memory_ptr",
													"typeString": "struct IUniV3VaultGovernance.DelayedStrategyParams"
												},
												"typeName": {
													"id": 1524,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1523,
														"name": "DelayedStrategyParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1484,
														"src": "1980:21:23"
													},
													"referencedDeclaration": 1484,
													"src": "1980:21:23",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DelayedStrategyParams_$1484_storage_ptr",
														"typeString": "struct IUniV3VaultGovernance.DelayedStrategyParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1979:30:23"
									},
									"scope": 1561,
									"src": "1907:103:23",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1528,
										"nodeType": "StructuredDocumentation",
										"src": "2018:228:23",
										"text": "@notice Stage Delayed Strategy Params, i.e. Params that could be changed by Strategy or Protocol Governance with Protocol Governance delay.\n @param nft VaultRegistry NFT of the vault\n @param params New params"
									},
									"functionSelector": "25281714",
									"id": 1536,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stageDelayedStrategyParams",
									"nameLocation": "2261:26:23",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "2296:3:23",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "2288:11:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2288:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2332:6:23",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "2301:37:23",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DelayedStrategyParams_$1484_calldata_ptr",
													"typeString": "struct IUniV3VaultGovernance.DelayedStrategyParams"
												},
												"typeName": {
													"id": 1532,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1531,
														"name": "DelayedStrategyParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1484,
														"src": "2301:21:23"
													},
													"referencedDeclaration": 1484,
													"src": "2301:21:23",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DelayedStrategyParams_$1484_storage_ptr",
														"typeString": "struct IUniV3VaultGovernance.DelayedStrategyParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2287:52:23"
									},
									"returnParameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2348:0:23"
									},
									"scope": 1561,
									"src": "2252:97:23",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1537,
										"nodeType": "StructuredDocumentation",
										"src": "2357:265:23",
										"text": "@notice Commit Delayed Strategy Params, i.e. Params that could be changed by Strategy or Protocol Governance with Protocol Governance delay.\n @dev Can only be called after delayedStrategyParamsTimestamp\n @param nft VaultRegistry NFT of the vault"
									},
									"functionSelector": "0bdedd56",
									"id": 1542,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "commitDelayedStrategyParams",
									"nameLocation": "2637:27:23",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "2673:3:23",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "2665:11:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2665:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2664:13:23"
									},
									"returnParameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2686:0:23"
									},
									"scope": 1561,
									"src": "2628:59:23",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1543,
										"nodeType": "StructuredDocumentation",
										"src": "2695:277:23",
										"text": "@notice Deploys a new vault.\n @param vaultTokens_ ERC20 tokens that will be managed by this Vault\n @param owner_ Owner of the vault NFT\n @param fee_ Fee of the UniV3 pool\n @param uniV3Helper_ address of helper for UniV3 arithmetic with ticks"
									},
									"functionSelector": "66c153e9",
									"id": 1560,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createVault",
									"nameLocation": "2987:11:23",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "vaultTokens_",
												"nameLocation": "3026:12:23",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "3009:29:23",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1544,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3009:7:23",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1545,
													"nodeType": "ArrayTypeName",
													"src": "3009:9:23",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "owner_",
												"nameLocation": "3057:6:23",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "3049:14:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3049:7:23",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "fee_",
												"nameLocation": "3081:4:23",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "3074:11:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1549,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3074:6:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "uniV3Helper_",
												"nameLocation": "3104:12:23",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "3096:20:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3096:7:23",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2998:125:23"
									},
									"returnParameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "3154:5:23",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "3142:17:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniV3Vault_$1466",
													"typeString": "contract IUniV3Vault"
												},
												"typeName": {
													"id": 1555,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1554,
														"name": "IUniV3Vault",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1466,
														"src": "3142:11:23"
													},
													"referencedDeclaration": 1466,
													"src": "3142:11:23",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniV3Vault_$1466",
														"typeString": "contract IUniV3Vault"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "3169:3:23",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "3161:11:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3161:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3141:32:23"
									},
									"scope": 1561,
									"src": "2978:196:23",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1562,
							"src": "232:2945:23",
							"usedErrors": []
						}
					],
					"src": "46:3133:23"
				},
				"id": 23
			},
			"contracts/interfaces/vaults/IVault.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/vaults/IVault.sol",
					"exportedSymbols": {
						"IAccessControl": [
							72
						],
						"IAccessControlEnumerable": [
							97
						],
						"IDefaultAccessControl": [
							1310
						],
						"IERC165": [
							347
						],
						"IERC721": [
							293
						],
						"IProtocolGovernance": [
							610
						],
						"IUnitPricesGovernance": [
							663
						],
						"IVault": [
							1618
						],
						"IVaultGovernance": [
							1687
						],
						"IVaultRegistry": [
							754
						]
					},
					"id": 1619,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1563,
							"literals": [
								"solidity",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:22:24"
						},
						{
							"absolutePath": "contracts/interfaces/vaults/IVaultGovernance.sol",
							"file": "./IVaultGovernance.sol",
							"id": 1564,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1619,
							"sourceUnit": 1688,
							"src": "59:32:24",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1565,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 347,
										"src": "115:7:24"
									},
									"id": 1566,
									"nodeType": "InheritanceSpecifier",
									"src": "115:7:24"
								}
							],
							"canonicalName": "IVault",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1618,
							"linearizedBaseContracts": [
								1618,
								347
							],
							"name": "IVault",
							"nameLocation": "105:6:24",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1567,
										"nodeType": "StructuredDocumentation",
										"src": "130:48:24",
										"text": "@notice Checks if the vault is initialized"
									},
									"functionSelector": "158ef93e",
									"id": 1572,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialized",
									"nameLocation": "193:11:24",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "204:2:24"
									},
									"returnParameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "230:4:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1569,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "230:4:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "229:6:24"
									},
									"scope": 1618,
									"src": "184:52:24",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1573,
										"nodeType": "StructuredDocumentation",
										"src": "244:44:24",
										"text": "@notice VaultRegistry NFT for this vault"
									},
									"functionSelector": "47ccca02",
									"id": 1578,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nft",
									"nameLocation": "303:3:24",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "306:2:24"
									},
									"returnParameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "332:7:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "332:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "331:9:24"
									},
									"scope": 1618,
									"src": "294:47:24",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1579,
										"nodeType": "StructuredDocumentation",
										"src": "349:62:24",
										"text": "@notice Address of the Vault Governance for this contract."
									},
									"functionSelector": "fe255a5e",
									"id": 1585,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "vaultGovernance",
									"nameLocation": "426:15:24",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "441:2:24"
									},
									"returnParameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "467:16:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IVaultGovernance_$1687",
													"typeString": "contract IVaultGovernance"
												},
												"typeName": {
													"id": 1582,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1581,
														"name": "IVaultGovernance",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1687,
														"src": "467:16:24"
													},
													"referencedDeclaration": 1687,
													"src": "467:16:24",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IVaultGovernance_$1687",
														"typeString": "contract IVaultGovernance"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "466:18:24"
									},
									"scope": 1618,
									"src": "417:68:24",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1586,
										"nodeType": "StructuredDocumentation",
										"src": "493:48:24",
										"text": "@notice ERC20 tokens under Vault management."
									},
									"functionSelector": "69722233",
									"id": 1592,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "vaultTokens",
									"nameLocation": "556:11:24",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "567:2:24"
									},
									"returnParameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "593:16:24",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1588,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "593:7:24",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1589,
													"nodeType": "ArrayTypeName",
													"src": "593:9:24",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "592:18:24"
									},
									"scope": 1618,
									"src": "547:64:24",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1593,
										"nodeType": "StructuredDocumentation",
										"src": "619:154:24",
										"text": "@notice Checks if a token is vault token\n @param token Address of the token to check\n @return `true` if this token is managed by Vault"
									},
									"functionSelector": "338c4ccb",
									"id": 1600,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isVaultToken",
									"nameLocation": "788:12:24",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "809:5:24",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "801:13:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "801:7:24",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:15:24"
									},
									"returnParameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "839:4:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1597,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:24"
									},
									"scope": 1618,
									"src": "779:66:24",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1601,
										"nodeType": "StructuredDocumentation",
										"src": "853:667:24",
										"text": "@notice Total value locked for this contract.\n @dev Generally it is the underlying token value of this contract in some\n other DeFi protocol. For example, for USDC Yearn Vault this would be total USDC balance that could be withdrawn for Yearn to this contract.\n The tvl itself is estimated in some range. Sometimes the range is exact, sometimes it's not\n @return minTokenAmounts Lower bound for total available balances estimation (nth tokenAmount corresponds to nth token in vaultTokens)\n @return maxTokenAmounts Upper bound for total available balances estimation (nth tokenAmount corresponds to nth token in vaultTokens)"
									},
									"functionSelector": "e5328e06",
									"id": 1610,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tvl",
									"nameLocation": "1535:3:24",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1538:2:24"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "minTokenAmounts",
												"nameLocation": "1581:15:24",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "1564:32:24",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1603,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1564:7:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1604,
													"nodeType": "ArrayTypeName",
													"src": "1564:9:24",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "maxTokenAmounts",
												"nameLocation": "1615:15:24",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "1598:32:24",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1606,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1598:7:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1607,
													"nodeType": "ArrayTypeName",
													"src": "1598:9:24",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1563:68:24"
									},
									"scope": 1618,
									"src": "1526:106:24",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1611,
										"nodeType": "StructuredDocumentation",
										"src": "1640:46:24",
										"text": "@notice Existential amounts for each token"
									},
									"functionSelector": "d2c219b0",
									"id": 1617,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pullExistentials",
									"nameLocation": "1701:16:24",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1717:2:24"
									},
									"returnParameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "1743:16:24",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1613,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1743:7:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1614,
													"nodeType": "ArrayTypeName",
													"src": "1743:9:24",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1742:18:24"
									},
									"scope": 1618,
									"src": "1692:69:24",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1619,
							"src": "95:1669:24",
							"usedErrors": []
						}
					],
					"src": "33:1733:24"
				},
				"id": 24
			},
			"contracts/interfaces/vaults/IVaultGovernance.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/vaults/IVaultGovernance.sol",
					"exportedSymbols": {
						"IAccessControl": [
							72
						],
						"IAccessControlEnumerable": [
							97
						],
						"IDefaultAccessControl": [
							1310
						],
						"IERC165": [
							347
						],
						"IERC721": [
							293
						],
						"IProtocolGovernance": [
							610
						],
						"IUnitPricesGovernance": [
							663
						],
						"IVault": [
							1618
						],
						"IVaultGovernance": [
							1687
						],
						"IVaultRegistry": [
							754
						]
					},
					"id": 1688,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1620,
							"literals": [
								"solidity",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:22:25"
						},
						{
							"absolutePath": "contracts/interfaces/IProtocolGovernance.sol",
							"file": "../IProtocolGovernance.sol",
							"id": 1621,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1688,
							"sourceUnit": 611,
							"src": "59:36:25",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IVaultRegistry.sol",
							"file": "../IVaultRegistry.sol",
							"id": 1622,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1688,
							"sourceUnit": 755,
							"src": "97:31:25",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/vaults/IVault.sol",
							"file": "./IVault.sol",
							"id": 1623,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1688,
							"sourceUnit": 1619,
							"src": "130:22:25",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IVaultGovernance",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1687,
							"linearizedBaseContracts": [
								1687
							],
							"name": "IVaultGovernance",
							"nameLocation": "166:16:25",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IVaultGovernance.InternalParams",
									"id": 1633,
									"members": [
										{
											"constant": false,
											"id": 1626,
											"mutability": "mutable",
											"name": "protocolGovernance",
											"nameLocation": "418:18:25",
											"nodeType": "VariableDeclaration",
											"scope": 1633,
											"src": "398:38:25",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IProtocolGovernance_$610",
												"typeString": "contract IProtocolGovernance"
											},
											"typeName": {
												"id": 1625,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1624,
													"name": "IProtocolGovernance",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 610,
													"src": "398:19:25"
												},
												"referencedDeclaration": 610,
												"src": "398:19:25",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IProtocolGovernance_$610",
													"typeString": "contract IProtocolGovernance"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1629,
											"mutability": "mutable",
											"name": "registry",
											"nameLocation": "462:8:25",
											"nodeType": "VariableDeclaration",
											"scope": 1633,
											"src": "447:23:25",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IVaultRegistry_$754",
												"typeString": "contract IVaultRegistry"
											},
											"typeName": {
												"id": 1628,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1627,
													"name": "IVaultRegistry",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 754,
													"src": "447:14:25"
												},
												"referencedDeclaration": 754,
												"src": "447:14:25",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IVaultRegistry_$754",
													"typeString": "contract IVaultRegistry"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1632,
											"mutability": "mutable",
											"name": "singleton",
											"nameLocation": "488:9:25",
											"nodeType": "VariableDeclaration",
											"scope": 1633,
											"src": "481:16:25",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IVault_$1618",
												"typeString": "contract IVault"
											},
											"typeName": {
												"id": 1631,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1630,
													"name": "IVault",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1618,
													"src": "481:6:25"
												},
												"referencedDeclaration": 1618,
												"src": "481:6:25",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IVault_$1618",
													"typeString": "contract IVault"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InternalParams",
									"nameLocation": "372:14:25",
									"nodeType": "StructDefinition",
									"scope": 1687,
									"src": "365:140:25",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1634,
										"nodeType": "StructuredDocumentation",
										"src": "580:142:25",
										"text": "@notice Timestamp in unix time seconds after which staged Delayed Strategy Params could be committed.\n @param nft Nft of the vault"
									},
									"functionSelector": "6707acee",
									"id": 1641,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delayedStrategyParamsTimestamp",
									"nameLocation": "737:30:25",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "776:3:25",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "768:11:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "768:7:25",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "767:13:25"
									},
									"returnParameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "804:7:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "804:7:25",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "803:9:25"
									},
									"scope": 1687,
									"src": "728:85:25",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1642,
										"nodeType": "StructuredDocumentation",
										"src": "821:105:25",
										"text": "@notice Timestamp in unix time seconds after which staged Delayed Protocol Params could be committed."
									},
									"functionSelector": "e4af6e79",
									"id": 1647,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delayedProtocolParamsTimestamp",
									"nameLocation": "941:30:25",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "971:2:25"
									},
									"returnParameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1647,
												"src": "997:7:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "997:7:25",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "996:9:25"
									},
									"scope": 1687,
									"src": "932:74:25",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1648,
										"nodeType": "StructuredDocumentation",
										"src": "1014:152:25",
										"text": "@notice Timestamp in unix time seconds after which staged Delayed Protocol Params Per Vault could be committed.\n @param nft Nft of the vault"
									},
									"functionSelector": "511ce798",
									"id": 1655,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delayedProtocolPerVaultParamsTimestamp",
									"nameLocation": "1181:38:25",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "1228:3:25",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "1220:11:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:25",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:13:25"
									},
									"returnParameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "1256:7:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1256:7:25",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1255:9:25"
									},
									"scope": 1687,
									"src": "1172:93:25",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1656,
										"nodeType": "StructuredDocumentation",
										"src": "1273:97:25",
										"text": "@notice Timestamp in unix time seconds after which staged Internal Params could be committed."
									},
									"functionSelector": "1c7f4c73",
									"id": 1661,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "internalParamsTimestamp",
									"nameLocation": "1385:23:25",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1408:2:25"
									},
									"returnParameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "1434:7:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1434:7:25",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:9:25"
									},
									"scope": 1687,
									"src": "1376:67:25",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1662,
										"nodeType": "StructuredDocumentation",
										"src": "1451:44:25",
										"text": "@notice Internal Params of the contract."
									},
									"functionSelector": "7ac46fbb",
									"id": 1668,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "internalParams",
									"nameLocation": "1510:14:25",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1524:2:25"
									},
									"returnParameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "1550:21:25",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InternalParams_$1633_memory_ptr",
													"typeString": "struct IVaultGovernance.InternalParams"
												},
												"typeName": {
													"id": 1665,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1664,
														"name": "InternalParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1633,
														"src": "1550:14:25"
													},
													"referencedDeclaration": 1633,
													"src": "1550:14:25",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InternalParams_$1633_storage_ptr",
														"typeString": "struct IVaultGovernance.InternalParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:23:25"
									},
									"scope": 1687,
									"src": "1501:72:25",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1669,
										"nodeType": "StructuredDocumentation",
										"src": "1581:122:25",
										"text": "@notice Staged new Internal Params.\n @dev The Internal Params could be committed after internalParamsTimestamp"
									},
									"functionSelector": "86c6be3e",
									"id": 1675,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stagedInternalParams",
									"nameLocation": "1718:20:25",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1738:2:25"
									},
									"returnParameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "1764:21:25",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InternalParams_$1633_memory_ptr",
													"typeString": "struct IVaultGovernance.InternalParams"
												},
												"typeName": {
													"id": 1672,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1671,
														"name": "InternalParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1633,
														"src": "1764:14:25"
													},
													"referencedDeclaration": 1633,
													"src": "1764:14:25",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InternalParams_$1633_storage_ptr",
														"typeString": "struct IVaultGovernance.InternalParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1763:23:25"
									},
									"scope": 1687,
									"src": "1709:78:25",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1676,
										"nodeType": "StructuredDocumentation",
										"src": "1866:84:25",
										"text": "@notice Stage new Internal Params.\n @param newParams New Internal Params"
									},
									"functionSelector": "09946538",
									"id": 1682,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stageInternalParams",
									"nameLocation": "1965:19:25",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "newParams",
												"nameLocation": "2007:9:25",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "1985:31:25",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InternalParams_$1633_memory_ptr",
													"typeString": "struct IVaultGovernance.InternalParams"
												},
												"typeName": {
													"id": 1678,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1677,
														"name": "InternalParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1633,
														"src": "1985:14:25"
													},
													"referencedDeclaration": 1633,
													"src": "1985:14:25",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InternalParams_$1633_storage_ptr",
														"typeString": "struct IVaultGovernance.InternalParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1984:33:25"
									},
									"returnParameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2026:0:25"
									},
									"scope": 1687,
									"src": "1956:71:25",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1683,
										"nodeType": "StructuredDocumentation",
										"src": "2035:42:25",
										"text": "@notice Commit staged Internal Params."
									},
									"functionSelector": "d4a07d34",
									"id": 1686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "commitInternalParams",
									"nameLocation": "2092:20:25",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2112:2:25"
									},
									"returnParameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2123:0:25"
									},
									"scope": 1687,
									"src": "2083:41:25",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1688,
							"src": "156:1971:25",
							"usedErrors": []
						}
					],
					"src": "33:2096:25"
				},
				"id": 25
			},
			"contracts/libraries/ExceptionsLibrary.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/ExceptionsLibrary.sol",
					"exportedSymbols": {
						"ExceptionsLibrary": [
							1757
						]
					},
					"id": 1758,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1689,
							"literals": [
								"solidity",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:22:26"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ExceptionsLibrary",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1690,
								"nodeType": "StructuredDocumentation",
								"src": "59:68:26",
								"text": "@notice Exceptions stores project`s smart-contracts exceptions"
							},
							"fullyImplemented": true,
							"id": 1757,
							"linearizedBaseContracts": [
								1757
							],
							"name": "ExceptionsLibrary",
							"nameLocation": "135:17:26",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1693,
									"mutability": "constant",
									"name": "ADDRESS_ZERO",
									"nameLocation": "176:12:26",
									"nodeType": "VariableDeclaration",
									"scope": 1757,
									"src": "160:35:26",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1691,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "160:6:26",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "415a",
										"id": 1692,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "191:4:26",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_5644e38f028c780ab1d5009e6a6b7c4c0f8f5620e140e3273ba11a586a0edbeb",
											"typeString": "literal_string \"AZ\""
										},
										"value": "AZ"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1696,
									"mutability": "constant",
									"name": "VALUE_ZERO",
									"nameLocation": "218:10:26",
									"nodeType": "VariableDeclaration",
									"scope": 1757,
									"src": "202:33:26",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1694,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "202:6:26",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "565a",
										"id": 1695,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "231:4:26",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_069dbf88dc2bf68a03815225301981bc243a03c28d5ebb44374e0da6e80ae6d8",
											"typeString": "literal_string \"VZ\""
										},
										"value": "VZ"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1699,
									"mutability": "constant",
									"name": "EMPTY_LIST",
									"nameLocation": "258:10:26",
									"nodeType": "VariableDeclaration",
									"scope": 1757,
									"src": "242:35:26",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1697,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "242:6:26",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "454d504c",
										"id": 1698,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "271:6:26",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_a1e5de7451e7eb2d5d5dbfdcbd908dcaae0fa90a2db88ca183a97fa717ee3236",
											"typeString": "literal_string \"EMPL\""
										},
										"value": "EMPL"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1702,
									"mutability": "constant",
									"name": "NOT_FOUND",
									"nameLocation": "300:9:26",
									"nodeType": "VariableDeclaration",
									"scope": 1757,
									"src": "284:32:26",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1700,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "284:6:26",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4e46",
										"id": 1701,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "312:4:26",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_7f649744fb5aec8f1e37a27ea5e3724b238879275af884a84487501b653850ab",
											"typeString": "literal_string \"NF\""
										},
										"value": "NF"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1705,
									"mutability": "constant",
									"name": "INIT",
									"nameLocation": "339:4:26",
									"nodeType": "VariableDeclaration",
									"scope": 1757,
									"src": "323:29:26",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1703,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "323:6:26",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "494e4954",
										"id": 1704,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "346:6:26",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_b687035e21e37544cf8aac31e9d86cbec8e9d12dfd1dc987a4f3d1d8f64f764d",
											"typeString": "literal_string \"INIT\""
										},
										"value": "INIT"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1708,
									"mutability": "constant",
									"name": "DUPLICATE",
									"nameLocation": "375:9:26",
									"nodeType": "VariableDeclaration",
									"scope": 1757,
									"src": "359:33:26",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1706,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "359:6:26",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "445550",
										"id": 1707,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "387:5:26",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_03d7de8c14f83ba48f4a37578ee0b572f009228adafd955f628f47de28e3f9ec",
											"typeString": "literal_string \"DUP\""
										},
										"value": "DUP"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1711,
									"mutability": "constant",
									"name": "NULL",
									"nameLocation": "415:4:26",
									"nodeType": "VariableDeclaration",
									"scope": 1757,
									"src": "399:29:26",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1709,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "399:6:26",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4e554c4c",
										"id": 1710,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "422:6:26",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_bb4e1f8434f661d4c52cce6e51dba6eb9c909f0b452eb22968b55416ecb18fb5",
											"typeString": "literal_string \"NULL\""
										},
										"value": "NULL"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1714,
									"mutability": "constant",
									"name": "TIMESTAMP",
									"nameLocation": "451:9:26",
									"nodeType": "VariableDeclaration",
									"scope": 1757,
									"src": "435:32:26",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1712,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "435:6:26",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "5453",
										"id": 1713,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "463:4:26",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_08c5a15d4b4a6a9368868b0f15d8e45470165201f57ae61fea8c412dbc155200",
											"typeString": "literal_string \"TS\""
										},
										"value": "TS"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1717,
									"mutability": "constant",
									"name": "FORBIDDEN",
									"nameLocation": "490:9:26",
									"nodeType": "VariableDeclaration",
									"scope": 1757,
									"src": "474:33:26",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1715,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "474:6:26",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "465242",
										"id": 1716,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "502:5:26",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_71ff9f5a196fad11597ee46bb9b5a8b0f2690e2a460623606d72479fa1093a2c",
											"typeString": "literal_string \"FRB\""
										},
										"value": "FRB"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1720,
									"mutability": "constant",
									"name": "ALLOWLIST",
									"nameLocation": "530:9:26",
									"nodeType": "VariableDeclaration",
									"scope": 1757,
									"src": "514:33:26",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1718,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "514:6:26",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "414c4c",
										"id": 1719,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "542:5:26",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_b9e64834773bc46e69714d292c4a976eb7a3434137db5e550001cdd7edc49028",
											"typeString": "literal_string \"ALL\""
										},
										"value": "ALL"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1723,
									"mutability": "constant",
									"name": "LIMIT_OVERFLOW",
									"nameLocation": "570:14:26",
									"nodeType": "VariableDeclaration",
									"scope": 1757,
									"src": "554:39:26",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1721,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "554:6:26",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4c494d4f",
										"id": 1722,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "587:6:26",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_72d6188d91a6e48e04b75525e1bfc2841cec497370002410a87531ccb056f9bd",
											"typeString": "literal_string \"LIMO\""
										},
										"value": "LIMO"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1726,
									"mutability": "constant",
									"name": "LIMIT_UNDERFLOW",
									"nameLocation": "616:15:26",
									"nodeType": "VariableDeclaration",
									"scope": 1757,
									"src": "600:40:26",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1724,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "600:6:26",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4c494d55",
										"id": 1725,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "634:6:26",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2157f8544f66fe613d8909f17d9319ebf7bf72436bce6fe0c4fa8bcc2571451e",
											"typeString": "literal_string \"LIMU\""
										},
										"value": "LIMU"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1729,
									"mutability": "constant",
									"name": "INVALID_VALUE",
									"nameLocation": "663:13:26",
									"nodeType": "VariableDeclaration",
									"scope": 1757,
									"src": "647:37:26",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1727,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "647:6:26",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "494e56",
										"id": 1728,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "679:5:26",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_8c76b8d7f7f50b0c2844b912a65fd8ef18eb86555edf37a9ff9cd289e22d9165",
											"typeString": "literal_string \"INV\""
										},
										"value": "INV"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1732,
									"mutability": "constant",
									"name": "INVARIANT",
									"nameLocation": "707:9:26",
									"nodeType": "VariableDeclaration",
									"scope": 1757,
									"src": "691:34:26",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1730,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "691:6:26",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "494e5641",
										"id": 1731,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "719:6:26",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_4a141e13c7b3de21b59d1600dffd5770da9441aa224d8a8b9209cde60507b504",
											"typeString": "literal_string \"INVA\""
										},
										"value": "INVA"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1735,
									"mutability": "constant",
									"name": "INVALID_TARGET",
									"nameLocation": "748:14:26",
									"nodeType": "VariableDeclaration",
									"scope": 1757,
									"src": "732:40:26",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1733,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "732:6:26",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "494e565452",
										"id": 1734,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "765:7:26",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_319f4be98284849d8f4e7f9c434798b804ded799472506f6966bf9d87f42d0c4",
											"typeString": "literal_string \"INVTR\""
										},
										"value": "INVTR"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1738,
									"mutability": "constant",
									"name": "INVALID_TOKEN",
									"nameLocation": "795:13:26",
									"nodeType": "VariableDeclaration",
									"scope": 1757,
									"src": "779:39:26",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1736,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "779:6:26",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "494e56544f",
										"id": 1737,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "811:7:26",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_a057e17ccf39b0b5bf7c209cfd4ed45dc71a174f18c851e81c487d22e408d4ef",
											"typeString": "literal_string \"INVTO\""
										},
										"value": "INVTO"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1741,
									"mutability": "constant",
									"name": "INVALID_INTERFACE",
									"nameLocation": "841:17:26",
									"nodeType": "VariableDeclaration",
									"scope": 1757,
									"src": "825:42:26",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1739,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "825:6:26",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "494e5649",
										"id": 1740,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "861:6:26",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_a70dd46dacb192e88e6cd3baa9cfaef7d0e0bfa2f5d47478ebe6ed6c68e4f407",
											"typeString": "literal_string \"INVI\""
										},
										"value": "INVI"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1744,
									"mutability": "constant",
									"name": "INVALID_SELECTOR",
									"nameLocation": "890:16:26",
									"nodeType": "VariableDeclaration",
									"scope": 1757,
									"src": "874:41:26",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1742,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "874:6:26",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "494e5653",
										"id": 1743,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "909:6:26",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_fd2c0cac2548360aecdcd60628e9cc4d60efa75cfd6846834e868debce506695",
											"typeString": "literal_string \"INVS\""
										},
										"value": "INVS"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1747,
									"mutability": "constant",
									"name": "INVALID_STATE",
									"nameLocation": "938:13:26",
									"nodeType": "VariableDeclaration",
									"scope": 1757,
									"src": "922:39:26",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1745,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "922:6:26",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "494e565354",
										"id": 1746,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "954:7:26",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_a7a00ca2ac1db3962103851e4bed27a94d026d7b96820b48ba0471df090243e7",
											"typeString": "literal_string \"INVST\""
										},
										"value": "INVST"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1750,
									"mutability": "constant",
									"name": "INVALID_LENGTH",
									"nameLocation": "984:14:26",
									"nodeType": "VariableDeclaration",
									"scope": 1757,
									"src": "968:39:26",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1748,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "968:6:26",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "494e564c",
										"id": 1749,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1001:6:26",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_5e7b67b1167da76183783eceafa7ff34be5b1c268cd404a526bc6af2d6965c4c",
											"typeString": "literal_string \"INVL\""
										},
										"value": "INVL"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1753,
									"mutability": "constant",
									"name": "LOCK",
									"nameLocation": "1030:4:26",
									"nodeType": "VariableDeclaration",
									"scope": 1757,
									"src": "1014:29:26",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1751,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1014:6:26",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4c434b44",
										"id": 1752,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1037:6:26",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_0f53d6ece01bfae249bc83bb82486bad1cb5174912f5a7281c7cc7db70e6009a",
											"typeString": "literal_string \"LCKD\""
										},
										"value": "LCKD"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1756,
									"mutability": "constant",
									"name": "DISABLED",
									"nameLocation": "1066:8:26",
									"nodeType": "VariableDeclaration",
									"scope": 1757,
									"src": "1050:32:26",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1754,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1050:6:26",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "444953",
										"id": 1755,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1077:5:26",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_1ee390a6c6917753ffa9bb0bd83cc313e935b13e3daaba67038caf0e47f928f1",
											"typeString": "literal_string \"DIS\""
										},
										"value": "DIS"
									},
									"visibility": "internal"
								}
							],
							"scope": 1758,
							"src": "127:959:26",
							"usedErrors": []
						}
					],
					"src": "33:1055:26"
				},
				"id": 26
			},
			"contracts/libraries/PermissionIdsLibrary.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/PermissionIdsLibrary.sol",
					"exportedSymbols": {
						"PermissionIdsLibrary": [
							1782
						]
					},
					"id": 1783,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1759,
							"literals": [
								"solidity",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:27"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PermissionIdsLibrary",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1760,
								"nodeType": "StructuredDocumentation",
								"src": "58:49:27",
								"text": "@notice Stores permission ids for addresses"
							},
							"fullyImplemented": true,
							"id": 1782,
							"linearizedBaseContracts": [
								1782
							],
							"name": "PermissionIdsLibrary",
							"nameLocation": "115:20:27",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1763,
									"mutability": "constant",
									"name": "REGISTER_VAULT",
									"nameLocation": "210:14:27",
									"nodeType": "VariableDeclaration",
									"scope": 1782,
									"src": "195:33:27",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1761,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "195:5:27",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1762,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "227:1:27",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1766,
									"mutability": "constant",
									"name": "CREATE_VAULT",
									"nameLocation": "301:12:27",
									"nodeType": "VariableDeclaration",
									"scope": 1782,
									"src": "286:31:27",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1764,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "286:5:27",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1765,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "316:1:27",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1769,
									"mutability": "constant",
									"name": "ERC20_TRANSFER",
									"nameLocation": "394:14:27",
									"nodeType": "VariableDeclaration",
									"scope": 1782,
									"src": "379:33:27",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1767,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "379:5:27",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1768,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "411:1:27",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1772,
									"mutability": "constant",
									"name": "ERC20_VAULT_TOKEN",
									"nameLocation": "484:17:27",
									"nodeType": "VariableDeclaration",
									"scope": 1782,
									"src": "469:36:27",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1770,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "469:5:27",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 1771,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "504:1:27",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1775,
									"mutability": "constant",
									"name": "ERC20_APPROVE",
									"nameLocation": "623:13:27",
									"nodeType": "VariableDeclaration",
									"scope": 1782,
									"src": "608:32:27",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1773,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "608:5:27",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "34",
										"id": 1774,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "639:1:27",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1778,
									"mutability": "constant",
									"name": "ERC20_APPROVE_RESTRICTED",
									"nameLocation": "762:24:27",
									"nodeType": "VariableDeclaration",
									"scope": 1782,
									"src": "747:43:27",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1776,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "747:5:27",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 1777,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "789:1:27",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1781,
									"mutability": "constant",
									"name": "TRUSTED_STRATEGY",
									"nameLocation": "858:16:27",
									"nodeType": "VariableDeclaration",
									"scope": 1782,
									"src": "843:35:27",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1779,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "843:5:27",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "36",
										"id": 1780,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "877:1:27",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6_by_1",
											"typeString": "int_const 6"
										},
										"value": "6"
									},
									"visibility": "internal"
								}
							],
							"scope": 1783,
							"src": "107:775:27",
							"usedErrors": []
						}
					],
					"src": "32:852:27"
				},
				"id": 27
			},
			"contracts/utils/ContractMeta.sol": {
				"ast": {
					"absolutePath": "contracts/utils/ContractMeta.sol",
					"exportedSymbols": {
						"ContractMeta": [
							1885
						],
						"IContractMeta": [
							1288
						]
					},
					"id": 1886,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1784,
							"literals": [
								"solidity",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:28"
						},
						{
							"absolutePath": "contracts/interfaces/utils/IContractMeta.sol",
							"file": "../interfaces/utils/IContractMeta.sol",
							"id": 1785,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1886,
							"sourceUnit": 1289,
							"src": "64:47:28",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1786,
										"name": "IContractMeta",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1288,
										"src": "149:13:28"
									},
									"id": 1787,
									"nodeType": "InheritanceSpecifier",
									"src": "149:13:28"
								}
							],
							"canonicalName": "ContractMeta",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 1885,
							"linearizedBaseContracts": [
								1885,
								1288
							],
							"name": "ContractMeta",
							"nameLocation": "133:12:28",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1272
									],
									"body": {
										"id": 1797,
										"nodeType": "Block",
										"src": "299:59:28",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1793,
																"name": "_contractName",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1832,
																"src": "334:13:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
																	"typeString": "function () pure returns (bytes32)"
																}
															},
															"id": 1794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "334:15:28",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1792,
														"name": "_bytes32ToString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1884,
														"src": "317:16:28",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_string_memory_ptr_$",
															"typeString": "function (bytes32) pure returns (string memory)"
														}
													},
													"id": 1795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "317:33:28",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1791,
												"id": 1796,
												"nodeType": "Return",
												"src": "310:40:28"
											}
										]
									},
									"functionSelector": "75d0c0dc",
									"id": 1798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contractName",
									"nameLocation": "246:12:28",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "258:2:28"
									},
									"returnParameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "284:13:28",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1789,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "284:6:28",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "283:15:28"
									},
									"scope": 1885,
									"src": "237:121:28",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1277
									],
									"body": {
										"id": 1806,
										"nodeType": "Block",
										"src": "427:41:28",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1803,
														"name": "_contractName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1832,
														"src": "445:13:28",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
															"typeString": "function () pure returns (bytes32)"
														}
													},
													"id": 1804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "445:15:28",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1802,
												"id": 1805,
												"nodeType": "Return",
												"src": "438:22:28"
											}
										]
									},
									"functionSelector": "0e3e80ac",
									"id": 1807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contractNameBytes",
									"nameLocation": "375:17:28",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "392:2:28"
									},
									"returnParameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "418:7:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1800,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "418:7:28",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "417:9:28"
									},
									"scope": 1885,
									"src": "366:102:28",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1282
									],
									"body": {
										"id": 1817,
										"nodeType": "Block",
										"src": "541:62:28",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1813,
																"name": "_contractVersion",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1837,
																"src": "576:16:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
																	"typeString": "function () pure returns (bytes32)"
																}
															},
															"id": 1814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "576:18:28",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1812,
														"name": "_bytes32ToString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1884,
														"src": "559:16:28",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_string_memory_ptr_$",
															"typeString": "function (bytes32) pure returns (string memory)"
														}
													},
													"id": 1815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "559:36:28",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1811,
												"id": 1816,
												"nodeType": "Return",
												"src": "552:43:28"
											}
										]
									},
									"functionSelector": "a0a8e460",
									"id": 1818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contractVersion",
									"nameLocation": "485:15:28",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "500:2:28"
									},
									"returnParameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "526:13:28",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1809,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "526:6:28",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "525:15:28"
									},
									"scope": 1885,
									"src": "476:127:28",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1287
									],
									"body": {
										"id": 1826,
										"nodeType": "Block",
										"src": "675:44:28",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1823,
														"name": "_contractVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1837,
														"src": "693:16:28",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
															"typeString": "function () pure returns (bytes32)"
														}
													},
													"id": 1824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "693:18:28",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1822,
												"id": 1825,
												"nodeType": "Return",
												"src": "686:25:28"
											}
										]
									},
									"functionSelector": "06a46239",
									"id": 1827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contractVersionBytes",
									"nameLocation": "620:20:28",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "640:2:28"
									},
									"returnParameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "666:7:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1820,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "666:7:28",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "665:9:28"
									},
									"scope": 1885,
									"src": "611:108:28",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"id": 1832,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_contractName",
									"nameLocation": "803:13:28",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "816:2:28"
									},
									"returnParameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "850:7:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1829,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:28",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:9:28"
									},
									"scope": 1885,
									"src": "794:65:28",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"id": 1837,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_contractVersion",
									"nameLocation": "876:16:28",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:28"
									},
									"returnParameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "926:7:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1834,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:28",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:28"
									},
									"scope": 1885,
									"src": "867:68:28",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1883,
										"nodeType": "Block",
										"src": "1020:317:28",
										"statements": [
											{
												"expression": {
													"id": 1849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1844,
														"name": "s",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1842,
														"src": "1031:1:28",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "3332",
																"id": 1847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1046:2:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_32_by_1",
																	"typeString": "int_const 32"
																},
																"value": "32"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_32_by_1",
																	"typeString": "int_const 32"
																}
															],
															"id": 1846,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "1035:10:28",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																"typeString": "function (uint256) pure returns (string memory)"
															},
															"typeName": {
																"id": 1845,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1039:6:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage_ptr",
																	"typeString": "string"
																}
															}
														},
														"id": 1848,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1035:14:28",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1031:18:28",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 1850,
												"nodeType": "ExpressionStatement",
												"src": "1031:18:28"
											},
											{
												"assignments": [
													1852
												],
												"declarations": [
													{
														"constant": false,
														"id": 1852,
														"mutability": "mutable",
														"name": "len",
														"nameLocation": "1068:3:28",
														"nodeType": "VariableDeclaration",
														"scope": 1883,
														"src": "1060:11:28",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1851,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1060:7:28",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1854,
												"initialValue": {
													"hexValue": "3332",
													"id": 1853,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1074:2:28",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_32_by_1",
														"typeString": "int_const 32"
													},
													"value": "32"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1060:16:28"
											},
											{
												"body": {
													"id": 1880,
													"nodeType": "Block",
													"src": "1120:114:28",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 1872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 1867,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1839,
																				"src": "1145:1:28",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"id": 1869,
																			"indexExpression": {
																				"id": 1868,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1856,
																				"src": "1147:1:28",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1145:4:28",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			}
																		],
																		"id": 1866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1139:5:28",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		},
																		"typeName": {
																			"id": 1865,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "1139:5:28",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1139:11:28",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1154:1:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1139:16:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1879,
															"nodeType": "IfStatement",
															"src": "1135:88:28",
															"trueBody": {
																"id": 1878,
																"nodeType": "Block",
																"src": "1157:66:28",
																"statements": [
																	{
																		"expression": {
																			"id": 1875,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1873,
																				"name": "len",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1852,
																				"src": "1176:3:28",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1874,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1856,
																				"src": "1182:1:28",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1176:7:28",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1876,
																		"nodeType": "ExpressionStatement",
																		"src": "1176:7:28"
																	},
																	{
																		"id": 1877,
																		"nodeType": "Break",
																		"src": "1202:5:28"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1859,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1856,
														"src": "1107:1:28",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 1860,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1111:2:28",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "1107:6:28",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1881,
												"initializationExpression": {
													"assignments": [
														1856
													],
													"declarations": [
														{
															"constant": false,
															"id": 1856,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1100:1:28",
															"nodeType": "VariableDeclaration",
															"scope": 1881,
															"src": "1092:9:28",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1855,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1092:7:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1858,
													"initialValue": {
														"hexValue": "30",
														"id": 1857,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1104:1:28",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1092:13:28"
												},
												"loopExpression": {
													"expression": {
														"id": 1863,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "1115:3:28",
														"subExpression": {
															"id": 1862,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1856,
															"src": "1117:1:28",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1864,
													"nodeType": "ExpressionStatement",
													"src": "1115:3:28"
												},
												"nodeType": "ForStatement",
												"src": "1087:147:28"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1253:77:28",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "s",
																		"nodeType": "YulIdentifier",
																		"src": "1275:1:28"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "1278:3:28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1268:6:28"
																},
																"nodeType": "YulFunctionCall",
																"src": "1268:14:28"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1268:14:28"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "s",
																				"nodeType": "YulIdentifier",
																				"src": "1307:1:28"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1310:4:28",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1303:3:28"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1303:12:28"
																	},
																	{
																		"name": "b",
																		"nodeType": "YulIdentifier",
																		"src": "1317:1:28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1296:6:28"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:23:28"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1296:23:28"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1839,
														"isOffset": false,
														"isSlot": false,
														"src": "1317:1:28",
														"valueSize": 1
													},
													{
														"declaration": 1852,
														"isOffset": false,
														"isSlot": false,
														"src": "1278:3:28",
														"valueSize": 1
													},
													{
														"declaration": 1842,
														"isOffset": false,
														"isSlot": false,
														"src": "1275:1:28",
														"valueSize": 1
													},
													{
														"declaration": 1842,
														"isOffset": false,
														"isSlot": false,
														"src": "1307:1:28",
														"valueSize": 1
													}
												],
												"id": 1882,
												"nodeType": "InlineAssembly",
												"src": "1244:86:28"
											}
										]
									},
									"id": 1884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_bytes32ToString",
									"nameLocation": "952:16:28",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "977:1:28",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "969:9:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1838,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:28",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:11:28"
									},
									"returnParameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1017:1:28",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "1003:15:28",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1841,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1003:6:28",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:17:28"
									},
									"scope": 1885,
									"src": "943:394:28",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1886,
							"src": "115:1225:28",
							"usedErrors": []
						}
					],
					"src": "38:1304:28"
				},
				"id": 28
			},
			"contracts/vaults/UniV3VaultGovernance.sol": {
				"ast": {
					"absolutePath": "contracts/vaults/UniV3VaultGovernance.sol",
					"exportedSymbols": {
						"Clones": [
							177
						],
						"ContractMeta": [
							1885
						],
						"ERC165": [
							335
						],
						"ExceptionsLibrary": [
							1757
						],
						"IAccessControl": [
							72
						],
						"IAccessControlEnumerable": [
							97
						],
						"IContractMeta": [
							1288
						],
						"IDefaultAccessControl": [
							1310
						],
						"IERC1271": [
							767
						],
						"IERC165": [
							347
						],
						"IERC721": [
							293
						],
						"IERC721Receiver": [
							311
						],
						"IIntegrationVault": [
							1390
						],
						"INonfungiblePositionManager": [
							953
						],
						"IOracle": [
							1265
						],
						"IPeripheryImmutableState": [
							969
						],
						"IProtocolGovernance": [
							610
						],
						"IUniV3Vault": [
							1466
						],
						"IUniV3VaultGovernance": [
							1561
						],
						"IUniswapV3Pool": [
							985
						],
						"IUniswapV3PoolActions": [
							1081
						],
						"IUniswapV3PoolDerivedState": [
							1098
						],
						"IUniswapV3PoolImmutables": [
							1138
						],
						"IUniswapV3PoolState": [
							1246
						],
						"IUnitPricesGovernance": [
							663
						],
						"IVault": [
							1618
						],
						"IVaultGovernance": [
							1687
						],
						"IVaultRegistry": [
							754
						],
						"PermissionIdsLibrary": [
							1782
						],
						"UniV3VaultGovernance": [
							2359
						],
						"VaultGovernance": [
							3181
						]
					},
					"id": 2360,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1887,
							"literals": [
								"solidity",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "46:22:29"
						},
						{
							"absolutePath": "contracts/interfaces/vaults/IUniV3VaultGovernance.sol",
							"file": "../interfaces/vaults/IUniV3VaultGovernance.sol",
							"id": 1888,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2360,
							"sourceUnit": 1562,
							"src": "72:56:29",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/vaults/IUniV3Vault.sol",
							"file": "../interfaces/vaults/IUniV3Vault.sol",
							"id": 1889,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2360,
							"sourceUnit": 1467,
							"src": "130:46:29",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/ExceptionsLibrary.sol",
							"file": "../libraries/ExceptionsLibrary.sol",
							"id": 1890,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2360,
							"sourceUnit": 1758,
							"src": "178:44:29",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/ContractMeta.sol",
							"file": "../utils/ContractMeta.sol",
							"id": 1891,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2360,
							"sourceUnit": 1886,
							"src": "224:35:29",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/vaults/VaultGovernance.sol",
							"file": "./VaultGovernance.sol",
							"id": 1892,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2360,
							"sourceUnit": 3182,
							"src": "261:31:29",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1894,
										"name": "ContractMeta",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1885,
										"src": "424:12:29"
									},
									"id": 1895,
									"nodeType": "InheritanceSpecifier",
									"src": "424:12:29"
								},
								{
									"baseName": {
										"id": 1896,
										"name": "IUniV3VaultGovernance",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1561,
										"src": "438:21:29"
									},
									"id": 1897,
									"nodeType": "InheritanceSpecifier",
									"src": "438:21:29"
								},
								{
									"baseName": {
										"id": 1898,
										"name": "VaultGovernance",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3181,
										"src": "461:15:29"
									},
									"id": 1899,
									"nodeType": "InheritanceSpecifier",
									"src": "461:15:29"
								}
							],
							"canonicalName": "UniV3VaultGovernance",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1893,
								"nodeType": "StructuredDocumentation",
								"src": "296:95:29",
								"text": "@notice Governance that manages all UniV3 Vaults params and can deploy a new UniV3 Vault."
							},
							"fullyImplemented": true,
							"id": 2359,
							"linearizedBaseContracts": [
								2359,
								3181,
								335,
								347,
								1561,
								1687,
								1885,
								1288
							],
							"name": "UniV3VaultGovernance",
							"nameLocation": "400:20:29",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1949,
										"nodeType": "Block",
										"src": "795:295:29",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1915,
																			"name": "delayedProtocolParams_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1906,
																			"src": "822:22:29",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DelayedProtocolParams_$1481_memory_ptr",
																				"typeString": "struct IUniV3VaultGovernance.DelayedProtocolParams memory"
																			}
																		},
																		"id": 1916,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "positionManager",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1477,
																		"src": "822:38:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_INonfungiblePositionManager_$953",
																			"typeString": "contract INonfungiblePositionManager"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_INonfungiblePositionManager_$953",
																			"typeString": "contract INonfungiblePositionManager"
																		}
																	],
																	"id": 1914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "814:7:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1913,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "814:7:29",
																		"typeDescriptions": {}
																	}
																},
																"id": 1917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "814:47:29",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "873:1:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1919,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "865:7:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1918,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "865:7:29",
																		"typeDescriptions": {}
																	}
																},
																"id": 1921,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "865:10:29",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "814:61:29",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 1923,
																"name": "ExceptionsLibrary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1757,
																"src": "877:17:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$1757_$",
																	"typeString": "type(library ExceptionsLibrary)"
																}
															},
															"id": 1924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "ADDRESS_ZERO",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1693,
															"src": "877:30:29",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1912,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "806:7:29",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "806:102:29",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1926,
												"nodeType": "ExpressionStatement",
												"src": "806:102:29"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1930,
																			"name": "delayedProtocolParams_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1906,
																			"src": "935:22:29",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DelayedProtocolParams_$1481_memory_ptr",
																				"typeString": "struct IUniV3VaultGovernance.DelayedProtocolParams memory"
																			}
																		},
																		"id": 1931,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "oracle",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1480,
																		"src": "935:29:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IOracle_$1265",
																			"typeString": "contract IOracle"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IOracle_$1265",
																			"typeString": "contract IOracle"
																		}
																	],
																	"id": 1929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "927:7:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1928,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "927:7:29",
																		"typeDescriptions": {}
																	}
																},
																"id": 1932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "927:38:29",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "977:1:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "969:7:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1933,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "969:7:29",
																		"typeDescriptions": {}
																	}
																},
																"id": 1936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "969:10:29",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "927:52:29",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 1938,
																"name": "ExceptionsLibrary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1757,
																"src": "981:17:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$1757_$",
																	"typeString": "type(library ExceptionsLibrary)"
																}
															},
															"id": 1939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "ADDRESS_ZERO",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1693,
															"src": "981:30:29",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1927,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "919:7:29",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "919:93:29",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1941,
												"nodeType": "ExpressionStatement",
												"src": "919:93:29"
											},
											{
												"expression": {
													"id": 1947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1942,
														"name": "_delayedProtocolParams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2406,
														"src": "1023:22:29",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage",
															"typeString": "bytes storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1945,
																"name": "delayedProtocolParams_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1906,
																"src": "1059:22:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DelayedProtocolParams_$1481_memory_ptr",
																	"typeString": "struct IUniV3VaultGovernance.DelayedProtocolParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_DelayedProtocolParams_$1481_memory_ptr",
																	"typeString": "struct IUniV3VaultGovernance.DelayedProtocolParams memory"
																}
															],
															"expression": {
																"id": 1943,
																"name": "abi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967295,
																"src": "1048:3:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_abi",
																	"typeString": "abi"
																}
															},
															"id": 1944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "encode",
															"nodeType": "MemberAccess",
															"src": "1048:10:29",
															"typeDescriptions": {
																"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																"typeString": "function () pure returns (bytes memory)"
															}
														},
														"id": 1946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1048:34:29",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "1023:59:29",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage",
														"typeString": "bytes storage ref"
													}
												},
												"id": 1948,
												"nodeType": "ExpressionStatement",
												"src": "1023:59:29"
											}
										]
									},
									"documentation": {
										"id": 1900,
										"nodeType": "StructuredDocumentation",
										"src": "484:154:29",
										"text": "@notice Creates a new contract.\n @param internalParams_ Initial Internal Params\n @param delayedProtocolParams_ Initial Protocol Params"
									},
									"id": 1950,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1909,
													"name": "internalParams_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1903,
													"src": "773:15:29",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InternalParams_$1633_memory_ptr",
														"typeString": "struct IVaultGovernance.InternalParams memory"
													}
												}
											],
											"id": 1910,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1908,
												"name": "VaultGovernance",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3181,
												"src": "757:15:29"
											},
											"nodeType": "ModifierInvocation",
											"src": "757:32:29"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "internalParams_",
												"nameLocation": "678:15:29",
												"nodeType": "VariableDeclaration",
												"scope": 1950,
												"src": "656:37:29",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InternalParams_$1633_memory_ptr",
													"typeString": "struct IVaultGovernance.InternalParams"
												},
												"typeName": {
													"id": 1902,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1901,
														"name": "InternalParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1633,
														"src": "656:14:29"
													},
													"referencedDeclaration": 1633,
													"src": "656:14:29",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InternalParams_$1633_storage_ptr",
														"typeString": "struct IVaultGovernance.InternalParams"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1906,
												"mutability": "mutable",
												"name": "delayedProtocolParams_",
												"nameLocation": "724:22:29",
												"nodeType": "VariableDeclaration",
												"scope": 1950,
												"src": "695:51:29",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DelayedProtocolParams_$1481_memory_ptr",
													"typeString": "struct IUniV3VaultGovernance.DelayedProtocolParams"
												},
												"typeName": {
													"id": 1905,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1904,
														"name": "DelayedProtocolParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1481,
														"src": "695:21:29"
													},
													"referencedDeclaration": 1481,
													"src": "695:21:29",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DelayedProtocolParams_$1481_storage_ptr",
														"typeString": "struct IUniV3VaultGovernance.DelayedProtocolParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "655:92:29"
									},
									"returnParameters": {
										"id": 1911,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:0:29"
									},
									"scope": 2359,
									"src": "644:446:29",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1491
									],
									"body": {
										"id": 1964,
										"nodeType": "Block",
										"src": "1292:151:29",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1959,
															"name": "_delayedProtocolParams",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2406,
															"src": "1387:22:29",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage",
																"typeString": "bytes storage ref"
															}
														},
														{
															"components": [
																{
																	"id": 1960,
																	"name": "DelayedProtocolParams",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1481,
																	"src": "1412:21:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_DelayedProtocolParams_$1481_storage_ptr_$",
																		"typeString": "type(struct IUniV3VaultGovernance.DelayedProtocolParams storage pointer)"
																	}
																}
															],
															"id": 1961,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1411:23:29",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_DelayedProtocolParams_$1481_storage_ptr_$",
																"typeString": "type(struct IUniV3VaultGovernance.DelayedProtocolParams storage pointer)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_storage",
																"typeString": "bytes storage ref"
															},
															{
																"typeIdentifier": "t_type$_t_struct$_DelayedProtocolParams_$1481_storage_ptr_$",
																"typeString": "type(struct IUniV3VaultGovernance.DelayedProtocolParams storage pointer)"
															}
														],
														"expression": {
															"id": 1957,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "1376:3:29",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1958,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "1376:10:29",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1376:59:29",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DelayedProtocolParams_$1481_memory_ptr",
														"typeString": "struct IUniV3VaultGovernance.DelayedProtocolParams memory"
													}
												},
												"functionReturnParameters": 1956,
												"id": 1963,
												"nodeType": "Return",
												"src": "1369:66:29"
											}
										]
									},
									"documentation": {
										"id": 1951,
										"nodeType": "StructuredDocumentation",
										"src": "1165:37:29",
										"text": "@inheritdoc IUniV3VaultGovernance"
									},
									"functionSelector": "d34cc380",
									"id": 1965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delayedProtocolParams",
									"nameLocation": "1217:21:29",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1238:2:29"
									},
									"returnParameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "1262:28:29",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DelayedProtocolParams_$1481_memory_ptr",
													"typeString": "struct IUniV3VaultGovernance.DelayedProtocolParams"
												},
												"typeName": {
													"id": 1954,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1953,
														"name": "DelayedProtocolParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1481,
														"src": "1262:21:29"
													},
													"referencedDeclaration": 1481,
													"src": "1262:21:29",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DelayedProtocolParams_$1481_storage_ptr",
														"typeString": "struct IUniV3VaultGovernance.DelayedProtocolParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1261:30:29"
									},
									"scope": 2359,
									"src": "1208:235:29",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1498
									],
									"body": {
										"id": 2000,
										"nodeType": "Block",
										"src": "1586:369:29",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1972,
															"name": "_stagedDelayedProtocolParams",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2408,
															"src": "1601:28:29",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage",
																"typeString": "bytes storage ref"
															}
														},
														"id": 1973,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1601:35:29",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1974,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1640:1:29",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1601:40:29",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1992,
												"nodeType": "IfStatement",
												"src": "1597:268:29",
												"trueBody": {
													"id": 1991,
													"nodeType": "Block",
													"src": "1643:222:29",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "30",
																						"id": 1980,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1780:1:29",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						}
																					],
																					"id": 1979,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1772:7:29",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1978,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "1772:7:29",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1981,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1772:10:29",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1977,
																			"name": "INonfungiblePositionManager",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 953,
																			"src": "1744:27:29",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$953_$",
																				"typeString": "type(contract INonfungiblePositionManager)"
																			}
																		},
																		"id": 1982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1744:39:29",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_INonfungiblePositionManager_$953",
																			"typeString": "contract INonfungiblePositionManager"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "30",
																						"id": 1986,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1830:1:29",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						}
																					],
																					"id": 1985,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1822:7:29",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1984,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "1822:7:29",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1987,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1822:10:29",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1983,
																			"name": "IOracle",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "1814:7:29",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IOracle_$1265_$",
																				"typeString": "type(contract IOracle)"
																			}
																		},
																		"id": 1988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1814:19:29",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IOracle_$1265",
																			"typeString": "contract IOracle"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_INonfungiblePositionManager_$953",
																			"typeString": "contract INonfungiblePositionManager"
																		},
																		{
																			"typeIdentifier": "t_contract$_IOracle_$1265",
																			"typeString": "contract IOracle"
																		}
																	],
																	"id": 1976,
																	"name": "DelayedProtocolParams",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1481,
																	"src": "1682:21:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_DelayedProtocolParams_$1481_storage_ptr_$",
																		"typeString": "type(struct IUniV3VaultGovernance.DelayedProtocolParams storage pointer)"
																	}
																},
																"id": 1989,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "structConstructorCall",
																"lValueRequested": false,
																"names": [
																	"positionManager",
																	"oracle"
																],
																"nodeType": "FunctionCall",
																"src": "1682:171:29",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DelayedProtocolParams_$1481_memory_ptr",
																	"typeString": "struct IUniV3VaultGovernance.DelayedProtocolParams memory"
																}
															},
															"functionReturnParameters": 1971,
															"id": 1990,
															"nodeType": "Return",
															"src": "1658:195:29"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1995,
															"name": "_stagedDelayedProtocolParams",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2408,
															"src": "1893:28:29",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage",
																"typeString": "bytes storage ref"
															}
														},
														{
															"components": [
																{
																	"id": 1996,
																	"name": "DelayedProtocolParams",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1481,
																	"src": "1924:21:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_DelayedProtocolParams_$1481_storage_ptr_$",
																		"typeString": "type(struct IUniV3VaultGovernance.DelayedProtocolParams storage pointer)"
																	}
																}
															],
															"id": 1997,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1923:23:29",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_DelayedProtocolParams_$1481_storage_ptr_$",
																"typeString": "type(struct IUniV3VaultGovernance.DelayedProtocolParams storage pointer)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_storage",
																"typeString": "bytes storage ref"
															},
															{
																"typeIdentifier": "t_type$_t_struct$_DelayedProtocolParams_$1481_storage_ptr_$",
																"typeString": "type(struct IUniV3VaultGovernance.DelayedProtocolParams storage pointer)"
															}
														],
														"expression": {
															"id": 1993,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "1882:3:29",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1994,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "1882:10:29",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1882:65:29",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DelayedProtocolParams_$1481_memory_ptr",
														"typeString": "struct IUniV3VaultGovernance.DelayedProtocolParams memory"
													}
												},
												"functionReturnParameters": 1971,
												"id": 1999,
												"nodeType": "Return",
												"src": "1875:72:29"
											}
										]
									},
									"documentation": {
										"id": 1966,
										"nodeType": "StructuredDocumentation",
										"src": "1451:37:29",
										"text": "@inheritdoc IUniV3VaultGovernance"
									},
									"functionSelector": "c2cbdc67",
									"id": 2001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stagedDelayedProtocolParams",
									"nameLocation": "1503:27:29",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1530:2:29"
									},
									"returnParameters": {
										"id": 1971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1970,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "1556:28:29",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DelayedProtocolParams_$1481_memory_ptr",
													"typeString": "struct IUniV3VaultGovernance.DelayedProtocolParams"
												},
												"typeName": {
													"id": 1969,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1968,
														"name": "DelayedProtocolParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1481,
														"src": "1556:21:29"
													},
													"referencedDeclaration": 1481,
													"src": "1556:21:29",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DelayedProtocolParams_$1481_storage_ptr",
														"typeString": "struct IUniV3VaultGovernance.DelayedProtocolParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1555:30:29"
									},
									"scope": 2359,
									"src": "1494:461:29",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1527
									],
									"body": {
										"id": 2031,
										"nodeType": "Block",
										"src": "2109:235:29",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 2010,
																"name": "_stagedDelayedStrategyParams",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2388,
																"src": "2124:28:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
																	"typeString": "mapping(uint256 => bytes storage ref)"
																}
															},
															"id": 2012,
															"indexExpression": {
																"id": 2011,
																"name": "nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2004,
																"src": "2153:3:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2124:33:29",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage",
																"typeString": "bytes storage ref"
															}
														},
														"id": 2013,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2124:40:29",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2014,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2168:1:29",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2124:45:29",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2021,
												"nodeType": "IfStatement",
												"src": "2120:129:29",
												"trueBody": {
													"id": 2020,
													"nodeType": "Block",
													"src": "2171:78:29",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2017,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2234:1:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2016,
																	"name": "DelayedStrategyParams",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1484,
																	"src": "2193:21:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_DelayedStrategyParams_$1484_storage_ptr_$",
																		"typeString": "type(struct IUniV3VaultGovernance.DelayedStrategyParams storage pointer)"
																	}
																},
																"id": 2018,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "structConstructorCall",
																"lValueRequested": false,
																"names": [
																	"safetyIndicesSet"
																],
																"nodeType": "FunctionCall",
																"src": "2193:44:29",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DelayedStrategyParams_$1484_memory_ptr",
																	"typeString": "struct IUniV3VaultGovernance.DelayedStrategyParams memory"
																}
															},
															"functionReturnParameters": 2009,
															"id": 2019,
															"nodeType": "Return",
															"src": "2186:51:29"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 2024,
																"name": "_stagedDelayedStrategyParams",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2388,
																"src": "2277:28:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
																	"typeString": "mapping(uint256 => bytes storage ref)"
																}
															},
															"id": 2026,
															"indexExpression": {
																"id": 2025,
																"name": "nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2004,
																"src": "2306:3:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2277:33:29",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage",
																"typeString": "bytes storage ref"
															}
														},
														{
															"components": [
																{
																	"id": 2027,
																	"name": "DelayedStrategyParams",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1484,
																	"src": "2313:21:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_DelayedStrategyParams_$1484_storage_ptr_$",
																		"typeString": "type(struct IUniV3VaultGovernance.DelayedStrategyParams storage pointer)"
																	}
																}
															],
															"id": 2028,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2312:23:29",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_DelayedStrategyParams_$1484_storage_ptr_$",
																"typeString": "type(struct IUniV3VaultGovernance.DelayedStrategyParams storage pointer)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_storage",
																"typeString": "bytes storage ref"
															},
															{
																"typeIdentifier": "t_type$_t_struct$_DelayedStrategyParams_$1484_storage_ptr_$",
																"typeString": "type(struct IUniV3VaultGovernance.DelayedStrategyParams storage pointer)"
															}
														],
														"expression": {
															"id": 2022,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "2266:3:29",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 2023,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "2266:10:29",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 2029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2266:70:29",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DelayedStrategyParams_$1484_memory_ptr",
														"typeString": "struct IUniV3VaultGovernance.DelayedStrategyParams memory"
													}
												},
												"functionReturnParameters": 2009,
												"id": 2030,
												"nodeType": "Return",
												"src": "2259:77:29"
											}
										]
									},
									"documentation": {
										"id": 2002,
										"nodeType": "StructuredDocumentation",
										"src": "1963:37:29",
										"text": "@inheritdoc IUniV3VaultGovernance"
									},
									"functionSelector": "59f3dae7",
									"id": 2032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stagedDelayedStrategyParams",
									"nameLocation": "2015:27:29",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2004,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "2051:3:29",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "2043:11:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2043:7:29",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2042:13:29"
									},
									"returnParameters": {
										"id": 2009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "2079:28:29",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DelayedStrategyParams_$1484_memory_ptr",
													"typeString": "struct IUniV3VaultGovernance.DelayedStrategyParams"
												},
												"typeName": {
													"id": 2007,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2006,
														"name": "DelayedStrategyParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1484,
														"src": "2079:21:29"
													},
													"referencedDeclaration": 1484,
													"src": "2079:21:29",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DelayedStrategyParams_$1484_storage_ptr",
														"typeString": "struct IUniV3VaultGovernance.DelayedStrategyParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2078:30:29"
									},
									"scope": 2359,
									"src": "2006:338:29",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1518
									],
									"body": {
										"id": 2062,
										"nodeType": "Block",
										"src": "2492:226:29",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 2041,
																"name": "_delayedStrategyParams",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2384,
																"src": "2507:22:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
																	"typeString": "mapping(uint256 => bytes storage ref)"
																}
															},
															"id": 2043,
															"indexExpression": {
																"id": 2042,
																"name": "nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2035,
																"src": "2530:3:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2507:27:29",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage",
																"typeString": "bytes storage ref"
															}
														},
														"id": 2044,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2507:34:29",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2045,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2545:1:29",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2507:39:29",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2052,
												"nodeType": "IfStatement",
												"src": "2503:126:29",
												"trueBody": {
													"id": 2051,
													"nodeType": "Block",
													"src": "2548:81:29",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "30783241",
																		"id": 2048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2611:4:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_42_by_1",
																			"typeString": "int_const 42"
																		},
																		"value": "0x2A"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_42_by_1",
																			"typeString": "int_const 42"
																		}
																	],
																	"id": 2047,
																	"name": "DelayedStrategyParams",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1484,
																	"src": "2570:21:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_DelayedStrategyParams_$1484_storage_ptr_$",
																		"typeString": "type(struct IUniV3VaultGovernance.DelayedStrategyParams storage pointer)"
																	}
																},
																"id": 2049,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "structConstructorCall",
																"lValueRequested": false,
																"names": [
																	"safetyIndicesSet"
																],
																"nodeType": "FunctionCall",
																"src": "2570:47:29",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DelayedStrategyParams_$1484_memory_ptr",
																	"typeString": "struct IUniV3VaultGovernance.DelayedStrategyParams memory"
																}
															},
															"functionReturnParameters": 2040,
															"id": 2050,
															"nodeType": "Return",
															"src": "2563:54:29"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 2055,
																"name": "_delayedStrategyParams",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2384,
																"src": "2657:22:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
																	"typeString": "mapping(uint256 => bytes storage ref)"
																}
															},
															"id": 2057,
															"indexExpression": {
																"id": 2056,
																"name": "nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2035,
																"src": "2680:3:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2657:27:29",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage",
																"typeString": "bytes storage ref"
															}
														},
														{
															"components": [
																{
																	"id": 2058,
																	"name": "DelayedStrategyParams",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1484,
																	"src": "2687:21:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_DelayedStrategyParams_$1484_storage_ptr_$",
																		"typeString": "type(struct IUniV3VaultGovernance.DelayedStrategyParams storage pointer)"
																	}
																}
															],
															"id": 2059,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2686:23:29",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_DelayedStrategyParams_$1484_storage_ptr_$",
																"typeString": "type(struct IUniV3VaultGovernance.DelayedStrategyParams storage pointer)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_storage",
																"typeString": "bytes storage ref"
															},
															{
																"typeIdentifier": "t_type$_t_struct$_DelayedStrategyParams_$1484_storage_ptr_$",
																"typeString": "type(struct IUniV3VaultGovernance.DelayedStrategyParams storage pointer)"
															}
														],
														"expression": {
															"id": 2053,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "2646:3:29",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 2054,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "2646:10:29",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 2060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2646:64:29",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DelayedStrategyParams_$1484_memory_ptr",
														"typeString": "struct IUniV3VaultGovernance.DelayedStrategyParams memory"
													}
												},
												"functionReturnParameters": 2040,
												"id": 2061,
												"nodeType": "Return",
												"src": "2639:71:29"
											}
										]
									},
									"documentation": {
										"id": 2033,
										"nodeType": "StructuredDocumentation",
										"src": "2352:37:29",
										"text": "@inheritdoc IUniV3VaultGovernance"
									},
									"functionSelector": "8860d248",
									"id": 2063,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delayedStrategyParams",
									"nameLocation": "2404:21:29",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "2434:3:29",
												"nodeType": "VariableDeclaration",
												"scope": 2063,
												"src": "2426:11:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2426:7:29",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2425:13:29"
									},
									"returnParameters": {
										"id": 2040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2063,
												"src": "2462:28:29",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DelayedStrategyParams_$1484_memory_ptr",
													"typeString": "struct IUniV3VaultGovernance.DelayedStrategyParams"
												},
												"typeName": {
													"id": 2038,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2037,
														"name": "DelayedStrategyParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1484,
														"src": "2462:21:29"
													},
													"referencedDeclaration": 1484,
													"src": "2462:21:29",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DelayedStrategyParams_$1484_storage_ptr",
														"typeString": "struct IUniV3VaultGovernance.DelayedStrategyParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2461:30:29"
									},
									"scope": 2359,
									"src": "2395:323:29",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2561
									],
									"body": {
										"id": 2084,
										"nodeType": "Block",
										"src": "2846:120:29",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2074,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2066,
																"src": "2888:11:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 2072,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2864:5:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_UniV3VaultGovernance_$2359_$",
																	"typeString": "type(contract super UniV3VaultGovernance)"
																}
															},
															"id": 2073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2561,
															"src": "2864:23:29",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 2075,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2864:36:29",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 2081,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2077,
																		"name": "IUniV3VaultGovernance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1561,
																		"src": "2909:21:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IUniV3VaultGovernance_$1561_$",
																			"typeString": "type(contract IUniV3VaultGovernance)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IUniV3VaultGovernance_$1561_$",
																			"typeString": "type(contract IUniV3VaultGovernance)"
																		}
																	],
																	"id": 2076,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2904:4:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2078,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2904:27:29",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IUniV3VaultGovernance_$1561",
																	"typeString": "type(contract IUniV3VaultGovernance)"
																}
															},
															"id": 2079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2904:39:29",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2080,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2066,
															"src": "2947:11:29",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2904:54:29",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2864:94:29",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2071,
												"id": 2083,
												"nodeType": "Return",
												"src": "2857:101:29"
											}
										]
									},
									"documentation": {
										"id": 2064,
										"nodeType": "StructuredDocumentation",
										"src": "2726:23:29",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 2085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2764:17:29",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2068,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2822:8:29"
									},
									"parameters": {
										"id": 2067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2789:11:29",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "2782:18:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2065,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2782:6:29",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2781:20:29"
									},
									"returnParameters": {
										"id": 2071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "2840:4:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2069,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2840:4:29",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2839:6:29"
									},
									"scope": 2359,
									"src": "2755:211:29",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1505
									],
									"body": {
										"id": 2138,
										"nodeType": "Block",
										"src": "3172:357:29",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2095,
																			"name": "params",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2089,
																			"src": "3199:6:29",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DelayedProtocolParams_$1481_calldata_ptr",
																				"typeString": "struct IUniV3VaultGovernance.DelayedProtocolParams calldata"
																			}
																		},
																		"id": 2096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "positionManager",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1477,
																		"src": "3199:22:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_INonfungiblePositionManager_$953",
																			"typeString": "contract INonfungiblePositionManager"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_INonfungiblePositionManager_$953",
																			"typeString": "contract INonfungiblePositionManager"
																		}
																	],
																	"id": 2094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3191:7:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2093,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3191:7:29",
																		"typeDescriptions": {}
																	}
																},
																"id": 2097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3191:31:29",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3234:1:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3226:7:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2098,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3226:7:29",
																		"typeDescriptions": {}
																	}
																},
																"id": 2101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3226:10:29",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3191:45:29",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 2103,
																"name": "ExceptionsLibrary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1757,
																"src": "3238:17:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$1757_$",
																	"typeString": "type(library ExceptionsLibrary)"
																}
															},
															"id": 2104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "ADDRESS_ZERO",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1693,
															"src": "3238:30:29",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2092,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3183:7:29",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3183:86:29",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2106,
												"nodeType": "ExpressionStatement",
												"src": "3183:86:29"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2110,
																			"name": "params",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2089,
																			"src": "3296:6:29",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DelayedProtocolParams_$1481_calldata_ptr",
																				"typeString": "struct IUniV3VaultGovernance.DelayedProtocolParams calldata"
																			}
																		},
																		"id": 2111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "oracle",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1480,
																		"src": "3296:13:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IOracle_$1265",
																			"typeString": "contract IOracle"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IOracle_$1265",
																			"typeString": "contract IOracle"
																		}
																	],
																	"id": 2109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3288:7:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2108,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3288:7:29",
																		"typeDescriptions": {}
																	}
																},
																"id": 2112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3288:22:29",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3322:1:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3314:7:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2113,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3314:7:29",
																		"typeDescriptions": {}
																	}
																},
																"id": 2116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3314:10:29",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3288:36:29",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 2118,
																"name": "ExceptionsLibrary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1757,
																"src": "3326:17:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$1757_$",
																	"typeString": "type(library ExceptionsLibrary)"
																}
															},
															"id": 2119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "ADDRESS_ZERO",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1693,
															"src": "3326:30:29",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2107,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3280:7:29",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3280:77:29",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2121,
												"nodeType": "ExpressionStatement",
												"src": "3280:77:29"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2125,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2089,
																	"src": "3407:6:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_DelayedProtocolParams_$1481_calldata_ptr",
																		"typeString": "struct IUniV3VaultGovernance.DelayedProtocolParams calldata"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_DelayedProtocolParams_$1481_calldata_ptr",
																		"typeString": "struct IUniV3VaultGovernance.DelayedProtocolParams calldata"
																	}
																],
																"expression": {
																	"id": 2123,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "3396:3:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2124,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "3396:10:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3396:18:29",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2122,
														"name": "_stageDelayedProtocolParams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3058,
														"src": "3368:27:29",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (bytes memory)"
														}
													},
													"id": 2127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3368:47:29",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2128,
												"nodeType": "ExpressionStatement",
												"src": "3368:47:29"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2130,
																"name": "tx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967270,
																"src": "3458:2:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_transaction",
																	"typeString": "tx"
																}
															},
															"id": 2131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "origin",
															"nodeType": "MemberAccess",
															"src": "3458:9:29",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2132,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3469:3:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3469:10:29",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2134,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2089,
															"src": "3481:6:29",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DelayedProtocolParams_$1481_calldata_ptr",
																"typeString": "struct IUniV3VaultGovernance.DelayedProtocolParams calldata"
															}
														},
														{
															"id": 2135,
															"name": "_delayedProtocolParamsTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2410,
															"src": "3489:31:29",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_struct$_DelayedProtocolParams_$1481_calldata_ptr",
																"typeString": "struct IUniV3VaultGovernance.DelayedProtocolParams calldata"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2129,
														"name": "StageDelayedProtocolParams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2322,
														"src": "3431:26:29",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_struct$_DelayedProtocolParams_$1481_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,struct IUniV3VaultGovernance.DelayedProtocolParams memory,uint256)"
														}
													},
													"id": 2136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3431:90:29",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2137,
												"nodeType": "EmitStatement",
												"src": "3426:95:29"
											}
										]
									},
									"documentation": {
										"id": 2086,
										"nodeType": "StructuredDocumentation",
										"src": "3045:37:29",
										"text": "@inheritdoc IUniV3VaultGovernance"
									},
									"functionSelector": "b2fe31ad",
									"id": 2139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stageDelayedProtocolParams",
									"nameLocation": "3097:26:29",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2089,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "3155:6:29",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "3124:37:29",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DelayedProtocolParams_$1481_calldata_ptr",
													"typeString": "struct IUniV3VaultGovernance.DelayedProtocolParams"
												},
												"typeName": {
													"id": 2088,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2087,
														"name": "DelayedProtocolParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1481,
														"src": "3124:21:29"
													},
													"referencedDeclaration": 1481,
													"src": "3124:21:29",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DelayedProtocolParams_$1481_storage_ptr",
														"typeString": "struct IUniV3VaultGovernance.DelayedProtocolParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3123:39:29"
									},
									"returnParameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3172:0:29"
									},
									"scope": 2359,
									"src": "3088:441:29",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1509
									],
									"body": {
										"id": 2159,
										"nodeType": "Block",
										"src": "3628:226:29",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2143,
														"name": "_commitDelayedProtocolParams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3093,
														"src": "3639:28:29",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3639:30:29",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2145,
												"nodeType": "ExpressionStatement",
												"src": "3639:30:29"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2147,
																"name": "tx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967270,
																"src": "3727:2:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_transaction",
																	"typeString": "tx"
																}
															},
															"id": 2148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "origin",
															"nodeType": "MemberAccess",
															"src": "3727:9:29",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2149,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3751:3:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3751:10:29",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2153,
																	"name": "_delayedProtocolParams",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2406,
																	"src": "3787:22:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage",
																		"typeString": "bytes storage ref"
																	}
																},
																{
																	"components": [
																		{
																			"id": 2154,
																			"name": "DelayedProtocolParams",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1481,
																			"src": "3812:21:29",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_struct$_DelayedProtocolParams_$1481_storage_ptr_$",
																				"typeString": "type(struct IUniV3VaultGovernance.DelayedProtocolParams storage pointer)"
																			}
																		}
																	],
																	"id": 2155,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3811:23:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_DelayedProtocolParams_$1481_storage_ptr_$",
																		"typeString": "type(struct IUniV3VaultGovernance.DelayedProtocolParams storage pointer)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_storage",
																		"typeString": "bytes storage ref"
																	},
																	{
																		"typeIdentifier": "t_type$_t_struct$_DelayedProtocolParams_$1481_storage_ptr_$",
																		"typeString": "type(struct IUniV3VaultGovernance.DelayedProtocolParams storage pointer)"
																	}
																],
																"expression": {
																	"id": 2151,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "3776:3:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "3776:10:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3776:59:29",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DelayedProtocolParams_$1481_memory_ptr",
																"typeString": "struct IUniV3VaultGovernance.DelayedProtocolParams memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_struct$_DelayedProtocolParams_$1481_memory_ptr",
																"typeString": "struct IUniV3VaultGovernance.DelayedProtocolParams memory"
															}
														],
														"id": 2146,
														"name": "CommitDelayedProtocolParams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2332,
														"src": "3685:27:29",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_struct$_DelayedProtocolParams_$1481_memory_ptr_$returns$__$",
															"typeString": "function (address,address,struct IUniV3VaultGovernance.DelayedProtocolParams memory)"
														}
													},
													"id": 2157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3685:161:29",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2158,
												"nodeType": "EmitStatement",
												"src": "3680:166:29"
											}
										]
									},
									"documentation": {
										"id": 2140,
										"nodeType": "StructuredDocumentation",
										"src": "3537:37:29",
										"text": "@inheritdoc IUniV3VaultGovernance"
									},
									"functionSelector": "98347a5d",
									"id": 2160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "commitDelayedProtocolParams",
									"nameLocation": "3589:27:29",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3616:2:29"
									},
									"returnParameters": {
										"id": 2142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3628:0:29"
									},
									"scope": 2359,
									"src": "3580:274:29",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1536
									],
									"body": {
										"id": 2198,
										"nodeType": "Block",
										"src": "4002:269:29",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 2173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2170,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2166,
																	"src": "4021:6:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_DelayedStrategyParams_$1484_calldata_ptr",
																		"typeString": "struct IUniV3VaultGovernance.DelayedStrategyParams calldata"
																	}
																},
																"id": 2171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "safetyIndicesSet",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1483,
																"src": "4021:23:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "31",
																"id": 2172,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4047:1:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "4021:27:29",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 2174,
																"name": "ExceptionsLibrary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1757,
																"src": "4050:17:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$1757_$",
																	"typeString": "type(library ExceptionsLibrary)"
																}
															},
															"id": 2175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "LIMIT_UNDERFLOW",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1726,
															"src": "4050:33:29",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2169,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4013:7:29",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4013:71:29",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2177,
												"nodeType": "ExpressionStatement",
												"src": "4013:71:29"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2179,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2163,
															"src": "4123:3:29",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 2182,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2166,
																	"src": "4139:6:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_DelayedStrategyParams_$1484_calldata_ptr",
																		"typeString": "struct IUniV3VaultGovernance.DelayedStrategyParams calldata"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_DelayedStrategyParams_$1484_calldata_ptr",
																		"typeString": "struct IUniV3VaultGovernance.DelayedStrategyParams calldata"
																	}
																],
																"expression": {
																	"id": 2180,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4128:3:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2181,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "4128:10:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4128:18:29",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2178,
														"name": "_stageDelayedStrategyParams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2875,
														"src": "4095:27:29",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (uint256,bytes memory)"
														}
													},
													"id": 2184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4095:52:29",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2185,
												"nodeType": "ExpressionStatement",
												"src": "4095:52:29"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2187,
																"name": "tx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967270,
																"src": "4190:2:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_transaction",
																	"typeString": "tx"
																}
															},
															"id": 2188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "origin",
															"nodeType": "MemberAccess",
															"src": "4190:9:29",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2189,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4201:3:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4201:10:29",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2191,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2163,
															"src": "4213:3:29",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2192,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2166,
															"src": "4218:6:29",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DelayedStrategyParams_$1484_calldata_ptr",
																"typeString": "struct IUniV3VaultGovernance.DelayedStrategyParams calldata"
															}
														},
														{
															"baseExpression": {
																"id": 2193,
																"name": "_delayedStrategyParamsTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2392,
																"src": "4226:31:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 2195,
															"indexExpression": {
																"id": 2194,
																"name": "nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2163,
																"src": "4258:3:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4226:36:29",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_struct$_DelayedStrategyParams_$1484_calldata_ptr",
																"typeString": "struct IUniV3VaultGovernance.DelayedStrategyParams calldata"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2186,
														"name": "StageDelayedStrategyParams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2346,
														"src": "4163:26:29",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_struct$_DelayedStrategyParams_$1484_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,struct IUniV3VaultGovernance.DelayedStrategyParams memory,uint256)"
														}
													},
													"id": 2196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4163:100:29",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2197,
												"nodeType": "EmitStatement",
												"src": "4158:105:29"
											}
										]
									},
									"documentation": {
										"id": 2161,
										"nodeType": "StructuredDocumentation",
										"src": "3862:37:29",
										"text": "@inheritdoc IUniV3VaultGovernance"
									},
									"functionSelector": "25281714",
									"id": 2199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stageDelayedStrategyParams",
									"nameLocation": "3914:26:29",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "3949:3:29",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "3941:11:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3941:7:29",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "3985:6:29",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "3954:37:29",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DelayedStrategyParams_$1484_calldata_ptr",
													"typeString": "struct IUniV3VaultGovernance.DelayedStrategyParams"
												},
												"typeName": {
													"id": 2165,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2164,
														"name": "DelayedStrategyParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1484,
														"src": "3954:21:29"
													},
													"referencedDeclaration": 1484,
													"src": "3954:21:29",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DelayedStrategyParams_$1484_storage_ptr",
														"typeString": "struct IUniV3VaultGovernance.DelayedStrategyParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3940:52:29"
									},
									"returnParameters": {
										"id": 2168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4002:0:29"
									},
									"scope": 2359,
									"src": "3905:366:29",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1542
									],
									"body": {
										"id": 2225,
										"nodeType": "Block",
										"src": "4381:252:29",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2206,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2202,
															"src": "4421:3:29",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2205,
														"name": "_commitDelayedStrategyParams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2927,
														"src": "4392:28:29",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4392:33:29",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2208,
												"nodeType": "ExpressionStatement",
												"src": "4392:33:29"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2210,
																"name": "tx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967270,
																"src": "4483:2:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_transaction",
																	"typeString": "tx"
																}
															},
															"id": 2211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "origin",
															"nodeType": "MemberAccess",
															"src": "4483:9:29",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2212,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4507:3:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4507:10:29",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2214,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2202,
															"src": "4532:3:29",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"baseExpression": {
																		"id": 2217,
																		"name": "_delayedStrategyParams",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2384,
																		"src": "4561:22:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
																			"typeString": "mapping(uint256 => bytes storage ref)"
																		}
																	},
																	"id": 2219,
																	"indexExpression": {
																		"id": 2218,
																		"name": "nft",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2202,
																		"src": "4584:3:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4561:27:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage",
																		"typeString": "bytes storage ref"
																	}
																},
																{
																	"components": [
																		{
																			"id": 2220,
																			"name": "DelayedStrategyParams",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1484,
																			"src": "4591:21:29",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_struct$_DelayedStrategyParams_$1484_storage_ptr_$",
																				"typeString": "type(struct IUniV3VaultGovernance.DelayedStrategyParams storage pointer)"
																			}
																		}
																	],
																	"id": 2221,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4590:23:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_DelayedStrategyParams_$1484_storage_ptr_$",
																		"typeString": "type(struct IUniV3VaultGovernance.DelayedStrategyParams storage pointer)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_storage",
																		"typeString": "bytes storage ref"
																	},
																	{
																		"typeIdentifier": "t_type$_t_struct$_DelayedStrategyParams_$1484_storage_ptr_$",
																		"typeString": "type(struct IUniV3VaultGovernance.DelayedStrategyParams storage pointer)"
																	}
																],
																"expression": {
																	"id": 2215,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4550:3:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4550:10:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4550:64:29",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DelayedStrategyParams_$1484_memory_ptr",
																"typeString": "struct IUniV3VaultGovernance.DelayedStrategyParams memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_struct$_DelayedStrategyParams_$1484_memory_ptr",
																"typeString": "struct IUniV3VaultGovernance.DelayedStrategyParams memory"
															}
														],
														"id": 2209,
														"name": "CommitDelayedStrategyParams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2358,
														"src": "4441:27:29",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_struct$_DelayedStrategyParams_$1484_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,struct IUniV3VaultGovernance.DelayedStrategyParams memory)"
														}
													},
													"id": 2223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4441:184:29",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2224,
												"nodeType": "EmitStatement",
												"src": "4436:189:29"
											}
										]
									},
									"documentation": {
										"id": 2200,
										"nodeType": "StructuredDocumentation",
										"src": "4279:37:29",
										"text": "@inheritdoc IUniV3VaultGovernance"
									},
									"functionSelector": "0bdedd56",
									"id": 2226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "commitDelayedStrategyParams",
									"nameLocation": "4331:27:29",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "4367:3:29",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "4359:11:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4359:7:29",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4358:13:29"
									},
									"returnParameters": {
										"id": 2204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4381:0:29"
									},
									"scope": 2359,
									"src": "4322:311:29",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1560
									],
									"body": {
										"id": 2285,
										"nodeType": "Block",
										"src": "4880:285:29",
										"statements": [
											{
												"assignments": [
													2245
												],
												"declarations": [
													{
														"constant": false,
														"id": 2245,
														"mutability": "mutable",
														"name": "vaddr",
														"nameLocation": "4899:5:29",
														"nodeType": "VariableDeclaration",
														"scope": 2285,
														"src": "4891:13:29",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2244,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4891:7:29",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2246,
												"nodeType": "VariableDeclarationStatement",
												"src": "4891:13:29"
											},
											{
												"expression": {
													"id": 2253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 2247,
																"name": "vaddr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2245,
																"src": "4916:5:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2248,
																"name": "nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2242,
																"src": "4923:3:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2249,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4915:12:29",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
															"typeString": "tuple(address,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2251,
																"name": "owner_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2232,
																"src": "4943:6:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2250,
															"name": "_createVault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2830,
															"src": "4930:12:29",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$_t_uint256_$",
																"typeString": "function (address) returns (address,uint256)"
															}
														},
														"id": 2252,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4930:20:29",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
															"typeString": "tuple(address,uint256)"
														}
													},
													"src": "4915:35:29",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2254,
												"nodeType": "ExpressionStatement",
												"src": "4915:35:29"
											},
											{
												"expression": {
													"id": 2259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2255,
														"name": "vault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2240,
														"src": "4961:5:29",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniV3Vault_$1466",
															"typeString": "contract IUniV3Vault"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2257,
																"name": "vaddr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2245,
																"src": "4981:5:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2256,
															"name": "IUniV3Vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1466,
															"src": "4969:11:29",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUniV3Vault_$1466_$",
																"typeString": "type(contract IUniV3Vault)"
															}
														},
														"id": 2258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4969:18:29",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniV3Vault_$1466",
															"typeString": "contract IUniV3Vault"
														}
													},
													"src": "4961:26:29",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniV3Vault_$1466",
														"typeString": "contract IUniV3Vault"
													}
												},
												"id": 2260,
												"nodeType": "ExpressionStatement",
												"src": "4961:26:29"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2264,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2242,
															"src": "5015:3:29",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2265,
															"name": "vaultTokens_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2230,
															"src": "5020:12:29",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"id": 2266,
															"name": "fee_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2234,
															"src": "5034:4:29",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"id": 2267,
															"name": "uniV3Helper_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2236,
															"src": "5040:12:29",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2261,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2240,
															"src": "4998:5:29",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniV3Vault_$1466",
																"typeString": "contract IUniV3Vault"
															}
														},
														"id": 2263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "initialize",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1458,
														"src": "4998:16:29",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_uint24_$_t_address_$returns$__$",
															"typeString": "function (uint256,address[] memory,uint24,address) external"
														}
													},
													"id": 2268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4998:55:29",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2269,
												"nodeType": "ExpressionStatement",
												"src": "4998:55:29"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2271,
																"name": "tx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967270,
																"src": "5083:2:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_transaction",
																	"typeString": "tx"
																}
															},
															"id": 2272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "origin",
															"nodeType": "MemberAccess",
															"src": "5083:9:29",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2273,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5094:3:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5094:10:29",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2275,
															"name": "vaultTokens_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2230,
															"src": "5106:12:29",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 2278,
																	"name": "fee_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2234,
																	"src": "5131:4:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																],
																"expression": {
																	"id": 2276,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "5120:3:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2277,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "5120:10:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5120:16:29",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2280,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2232,
															"src": "5138:6:29",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2281,
															"name": "vaddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2245,
															"src": "5146:5:29",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2282,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2242,
															"src": "5153:3:29",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2270,
														"name": "DeployedVault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3180,
														"src": "5069:13:29",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address[] memory,bytes memory,address,address,uint256)"
														}
													},
													"id": 2283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5069:88:29",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2284,
												"nodeType": "EmitStatement",
												"src": "5064:93:29"
											}
										]
									},
									"documentation": {
										"id": 2227,
										"nodeType": "StructuredDocumentation",
										"src": "4641:37:29",
										"text": "@inheritdoc IUniV3VaultGovernance"
									},
									"functionSelector": "66c153e9",
									"id": 2286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createVault",
									"nameLocation": "4693:11:29",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2230,
												"mutability": "mutable",
												"name": "vaultTokens_",
												"nameLocation": "4732:12:29",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "4715:29:29",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2228,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4715:7:29",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2229,
													"nodeType": "ArrayTypeName",
													"src": "4715:9:29",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2232,
												"mutability": "mutable",
												"name": "owner_",
												"nameLocation": "4763:6:29",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "4755:14:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4755:7:29",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "fee_",
												"nameLocation": "4787:4:29",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "4780:11:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2233,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "4780:6:29",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "uniV3Helper_",
												"nameLocation": "4810:12:29",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "4802:20:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4802:7:29",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4704:125:29"
									},
									"returnParameters": {
										"id": 2243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2240,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "4860:5:29",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "4848:17:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniV3Vault_$1466",
													"typeString": "contract IUniV3Vault"
												},
												"typeName": {
													"id": 2239,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2238,
														"name": "IUniV3Vault",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1466,
														"src": "4848:11:29"
													},
													"referencedDeclaration": 1466,
													"src": "4848:11:29",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniV3Vault_$1466",
														"typeString": "contract IUniV3Vault"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2242,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "4875:3:29",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "4867:11:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4867:7:29",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4847:32:29"
									},
									"scope": 2359,
									"src": "4684:481:29",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1832
									],
									"body": {
										"id": 2297,
										"nodeType": "Block",
										"src": "5306:57:29",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "556e6956335661756c74476f7665726e616e6365",
															"id": 2294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5332:22:29",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_def021b2b9f41a3664a0292d6abbd38afc56dda06d5cb68095735684632b6284",
																"typeString": "literal_string \"UniV3VaultGovernance\""
															},
															"value": "UniV3VaultGovernance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_def021b2b9f41a3664a0292d6abbd38afc56dda06d5cb68095735684632b6284",
																"typeString": "literal_string \"UniV3VaultGovernance\""
															}
														],
														"id": 2293,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5324:7:29",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes32_$",
															"typeString": "type(bytes32)"
														},
														"typeName": {
															"id": 2292,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5324:7:29",
															"typeDescriptions": {}
														}
													},
													"id": 2295,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5324:31:29",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2291,
												"id": 2296,
												"nodeType": "Return",
												"src": "5317:38:29"
											}
										]
									},
									"id": 2298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contractName",
									"nameLocation": "5249:13:29",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2288,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5279:8:29"
									},
									"parameters": {
										"id": 2287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5262:2:29"
									},
									"returnParameters": {
										"id": 2291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "5297:7:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2289,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5297:7:29",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5296:9:29"
									},
									"scope": 2359,
									"src": "5240:123:29",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1837
									],
									"body": {
										"id": 2309,
										"nodeType": "Block",
										"src": "5440:42:29",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "312e312e30",
															"id": 2306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5466:7:29",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6815ba53416ba06aff1932cc76b3832272bafab9bc8e066be382e32b06ba5546",
																"typeString": "literal_string \"1.1.0\""
															},
															"value": "1.1.0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_6815ba53416ba06aff1932cc76b3832272bafab9bc8e066be382e32b06ba5546",
																"typeString": "literal_string \"1.1.0\""
															}
														],
														"id": 2305,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5458:7:29",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes32_$",
															"typeString": "type(bytes32)"
														},
														"typeName": {
															"id": 2304,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5458:7:29",
															"typeDescriptions": {}
														}
													},
													"id": 2307,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5458:16:29",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2303,
												"id": 2308,
												"nodeType": "Return",
												"src": "5451:23:29"
											}
										]
									},
									"id": 2310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contractVersion",
									"nameLocation": "5380:16:29",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2300,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5413:8:29"
									},
									"parameters": {
										"id": 2299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5396:2:29"
									},
									"returnParameters": {
										"id": 2303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "5431:7:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2301,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5431:7:29",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5430:9:29"
									},
									"scope": 2359,
									"src": "5371:111:29",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2311,
										"nodeType": "StructuredDocumentation",
										"src": "5563:306:29",
										"text": "@notice Emitted when new DelayedProtocolParams are staged for commit\n @param origin Origin of the transaction (tx.origin)\n @param sender Sender of the call (msg.sender)\n @param params New params that were staged for commit\n @param when When the params could be committed"
									},
									"id": 2322,
									"name": "StageDelayedProtocolParams",
									"nameLocation": "5881:26:29",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2313,
												"indexed": true,
												"mutability": "mutable",
												"name": "origin",
												"nameLocation": "5934:6:29",
												"nodeType": "VariableDeclaration",
												"scope": 2322,
												"src": "5918:22:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5918:7:29",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2315,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5967:6:29",
												"nodeType": "VariableDeclaration",
												"scope": 2322,
												"src": "5951:22:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5951:7:29",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2318,
												"indexed": false,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "6006:6:29",
												"nodeType": "VariableDeclaration",
												"scope": 2322,
												"src": "5984:28:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DelayedProtocolParams_$1481_memory_ptr",
													"typeString": "struct IUniV3VaultGovernance.DelayedProtocolParams"
												},
												"typeName": {
													"id": 2317,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2316,
														"name": "DelayedProtocolParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1481,
														"src": "5984:21:29"
													},
													"referencedDeclaration": 1481,
													"src": "5984:21:29",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DelayedProtocolParams_$1481_storage_ptr",
														"typeString": "struct IUniV3VaultGovernance.DelayedProtocolParams"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2320,
												"indexed": false,
												"mutability": "mutable",
												"name": "when",
												"nameLocation": "6031:4:29",
												"nodeType": "VariableDeclaration",
												"scope": 2322,
												"src": "6023:12:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6023:7:29",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5907:135:29"
									},
									"src": "5875:168:29"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2323,
										"nodeType": "StructuredDocumentation",
										"src": "6049:233:29",
										"text": "@notice Emitted when new DelayedProtocolParams are committed\n @param origin Origin of the transaction (tx.origin)\n @param sender Sender of the call (msg.sender)\n @param params New params that are committed"
									},
									"id": 2332,
									"name": "CommitDelayedProtocolParams",
									"nameLocation": "6294:27:29",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2325,
												"indexed": true,
												"mutability": "mutable",
												"name": "origin",
												"nameLocation": "6338:6:29",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "6322:22:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6322:7:29",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2327,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "6362:6:29",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "6346:22:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6346:7:29",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2330,
												"indexed": false,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "6392:6:29",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "6370:28:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DelayedProtocolParams_$1481_memory_ptr",
													"typeString": "struct IUniV3VaultGovernance.DelayedProtocolParams"
												},
												"typeName": {
													"id": 2329,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2328,
														"name": "DelayedProtocolParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1481,
														"src": "6370:21:29"
													},
													"referencedDeclaration": 1481,
													"src": "6370:21:29",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DelayedProtocolParams_$1481_storage_ptr",
														"typeString": "struct IUniV3VaultGovernance.DelayedProtocolParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6321:78:29"
									},
									"src": "6288:112:29"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2333,
										"nodeType": "StructuredDocumentation",
										"src": "6408:357:29",
										"text": "@notice Emitted when new DelayedStrategyParams are staged for commit\n @param origin Origin of the transaction (tx.origin)\n @param sender Sender of the call (msg.sender)\n @param nft VaultRegistry NFT of the vault\n @param params New params that were staged for commit\n @param when When the params could be committed"
									},
									"id": 2346,
									"name": "StageDelayedStrategyParams",
									"nameLocation": "6777:26:29",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2335,
												"indexed": true,
												"mutability": "mutable",
												"name": "origin",
												"nameLocation": "6830:6:29",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "6814:22:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6814:7:29",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2337,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "6863:6:29",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "6847:22:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6847:7:29",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2339,
												"indexed": true,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "6896:3:29",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "6880:19:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6880:7:29",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2342,
												"indexed": false,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "6932:6:29",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "6910:28:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DelayedStrategyParams_$1484_memory_ptr",
													"typeString": "struct IUniV3VaultGovernance.DelayedStrategyParams"
												},
												"typeName": {
													"id": 2341,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2340,
														"name": "DelayedStrategyParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1484,
														"src": "6910:21:29"
													},
													"referencedDeclaration": 1484,
													"src": "6910:21:29",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DelayedStrategyParams_$1484_storage_ptr",
														"typeString": "struct IUniV3VaultGovernance.DelayedStrategyParams"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2344,
												"indexed": false,
												"mutability": "mutable",
												"name": "when",
												"nameLocation": "6957:4:29",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "6949:12:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6949:7:29",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6803:165:29"
									},
									"src": "6771:198:29"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2347,
										"nodeType": "StructuredDocumentation",
										"src": "6977:284:29",
										"text": "@notice Emitted when new DelayedStrategyParams are committed\n @param origin Origin of the transaction (tx.origin)\n @param sender Sender of the call (msg.sender)\n @param nft VaultRegistry NFT of the vault\n @param params New params that are committed"
									},
									"id": 2358,
									"name": "CommitDelayedStrategyParams",
									"nameLocation": "7273:27:29",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2349,
												"indexed": true,
												"mutability": "mutable",
												"name": "origin",
												"nameLocation": "7327:6:29",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "7311:22:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7311:7:29",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2351,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7360:6:29",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "7344:22:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7344:7:29",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2353,
												"indexed": true,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "7393:3:29",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "7377:19:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7377:7:29",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2356,
												"indexed": false,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "7429:6:29",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "7407:28:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DelayedStrategyParams_$1484_memory_ptr",
													"typeString": "struct IUniV3VaultGovernance.DelayedStrategyParams"
												},
												"typeName": {
													"id": 2355,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2354,
														"name": "DelayedStrategyParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1484,
														"src": "7407:21:29"
													},
													"referencedDeclaration": 1484,
													"src": "7407:21:29",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DelayedStrategyParams_$1484_storage_ptr",
														"typeString": "struct IUniV3VaultGovernance.DelayedStrategyParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7300:142:29"
									},
									"src": "7267:176:29"
								}
							],
							"scope": 2360,
							"src": "391:7055:29",
							"usedErrors": []
						}
					],
					"src": "46:7402:29"
				},
				"id": 29
			},
			"contracts/vaults/VaultGovernance.sol": {
				"ast": {
					"absolutePath": "contracts/vaults/VaultGovernance.sol",
					"exportedSymbols": {
						"Clones": [
							177
						],
						"ERC165": [
							335
						],
						"ExceptionsLibrary": [
							1757
						],
						"IAccessControl": [
							72
						],
						"IAccessControlEnumerable": [
							97
						],
						"IDefaultAccessControl": [
							1310
						],
						"IERC165": [
							347
						],
						"IERC721": [
							293
						],
						"IProtocolGovernance": [
							610
						],
						"IUnitPricesGovernance": [
							663
						],
						"IVault": [
							1618
						],
						"IVaultGovernance": [
							1687
						],
						"IVaultRegistry": [
							754
						],
						"PermissionIdsLibrary": [
							1782
						],
						"VaultGovernance": [
							3181
						]
					},
					"id": 3182,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2361,
							"literals": [
								"solidity",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "38:22:30"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
							"file": "@openzeppelin/contracts/proxy/Clones.sol",
							"id": 2362,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3182,
							"sourceUnit": 178,
							"src": "64:50:30",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"id": 2363,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3182,
							"sourceUnit": 336,
							"src": "116:64:30",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IProtocolGovernance.sol",
							"file": "../interfaces/IProtocolGovernance.sol",
							"id": 2364,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3182,
							"sourceUnit": 611,
							"src": "182:47:30",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/vaults/IVaultGovernance.sol",
							"file": "../interfaces/vaults/IVaultGovernance.sol",
							"id": 2365,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3182,
							"sourceUnit": 1688,
							"src": "231:51:30",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/ExceptionsLibrary.sol",
							"file": "../libraries/ExceptionsLibrary.sol",
							"id": 2366,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3182,
							"sourceUnit": 1758,
							"src": "284:44:30",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/PermissionIdsLibrary.sol",
							"file": "../libraries/PermissionIdsLibrary.sol",
							"id": 2367,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3182,
							"sourceUnit": 1783,
							"src": "330:47:30",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2369,
										"name": "IVaultGovernance",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1687,
										"src": "715:16:30"
									},
									"id": 2370,
									"nodeType": "InheritanceSpecifier",
									"src": "715:16:30"
								},
								{
									"baseName": {
										"id": 2371,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 335,
										"src": "733:6:30"
									},
									"id": 2372,
									"nodeType": "InheritanceSpecifier",
									"src": "733:6:30"
								}
							],
							"canonicalName": "VaultGovernance",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2368,
								"nodeType": "StructuredDocumentation",
								"src": "381:297:30",
								"text": "@notice Internal contract for managing different params.\n @dev The contract should be overriden by the concrete VaultGovernance,\n define different params structs and use abi.decode / abi.encode to serialize\n to bytes in this contract. It also should emit events on params change."
							},
							"fullyImplemented": true,
							"id": 3181,
							"linearizedBaseContracts": [
								3181,
								335,
								347,
								1687
							],
							"name": "VaultGovernance",
							"nameLocation": "696:15:30",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2375,
									"mutability": "mutable",
									"name": "_internalParams",
									"nameLocation": "771:15:30",
									"nodeType": "VariableDeclaration",
									"scope": 3181,
									"src": "747:39:30",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_InternalParams_$1633_storage",
										"typeString": "struct IVaultGovernance.InternalParams"
									},
									"typeName": {
										"id": 2374,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2373,
											"name": "InternalParams",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1633,
											"src": "747:14:30"
										},
										"referencedDeclaration": 1633,
										"src": "747:14:30",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_InternalParams_$1633_storage_ptr",
											"typeString": "struct IVaultGovernance.InternalParams"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2378,
									"mutability": "mutable",
									"name": "_stagedInternalParams",
									"nameLocation": "816:21:30",
									"nodeType": "VariableDeclaration",
									"scope": 3181,
									"src": "793:44:30",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_InternalParams_$1633_storage",
										"typeString": "struct IVaultGovernance.InternalParams"
									},
									"typeName": {
										"id": 2377,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2376,
											"name": "InternalParams",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1633,
											"src": "793:14:30"
										},
										"referencedDeclaration": 1633,
										"src": "793:14:30",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_InternalParams_$1633_storage_ptr",
											"typeString": "struct IVaultGovernance.InternalParams"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2380,
									"mutability": "mutable",
									"name": "_internalParamsTimestamp",
									"nameLocation": "861:24:30",
									"nodeType": "VariableDeclaration",
									"scope": 3181,
									"src": "844:41:30",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2379,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "844:7:30",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2384,
									"mutability": "mutable",
									"name": "_delayedStrategyParams",
									"nameLocation": "929:22:30",
									"nodeType": "VariableDeclaration",
									"scope": 3181,
									"src": "894:57:30",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
										"typeString": "mapping(uint256 => bytes)"
									},
									"typeName": {
										"id": 2383,
										"keyType": {
											"id": 2381,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "902:7:30",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "894:25:30",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
											"typeString": "mapping(uint256 => bytes)"
										},
										"valueType": {
											"id": 2382,
											"name": "bytes",
											"nodeType": "ElementaryTypeName",
											"src": "913:5:30",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2388,
									"mutability": "mutable",
									"name": "_stagedDelayedStrategyParams",
									"nameLocation": "993:28:30",
									"nodeType": "VariableDeclaration",
									"scope": 3181,
									"src": "958:63:30",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
										"typeString": "mapping(uint256 => bytes)"
									},
									"typeName": {
										"id": 2387,
										"keyType": {
											"id": 2385,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "966:7:30",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "958:25:30",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
											"typeString": "mapping(uint256 => bytes)"
										},
										"valueType": {
											"id": 2386,
											"name": "bytes",
											"nodeType": "ElementaryTypeName",
											"src": "977:5:30",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2392,
									"mutability": "mutable",
									"name": "_delayedStrategyParamsTimestamp",
									"nameLocation": "1065:31:30",
									"nodeType": "VariableDeclaration",
									"scope": 3181,
									"src": "1028:68:30",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 2391,
										"keyType": {
											"id": 2389,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1036:7:30",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1028:27:30",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 2390,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1047:7:30",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2396,
									"mutability": "mutable",
									"name": "_delayedProtocolPerVaultParams",
									"nameLocation": "1140:30:30",
									"nodeType": "VariableDeclaration",
									"scope": 3181,
									"src": "1105:65:30",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
										"typeString": "mapping(uint256 => bytes)"
									},
									"typeName": {
										"id": 2395,
										"keyType": {
											"id": 2393,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1113:7:30",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1105:25:30",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
											"typeString": "mapping(uint256 => bytes)"
										},
										"valueType": {
											"id": 2394,
											"name": "bytes",
											"nodeType": "ElementaryTypeName",
											"src": "1124:5:30",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2400,
									"mutability": "mutable",
									"name": "_stagedDelayedProtocolPerVaultParams",
									"nameLocation": "1212:36:30",
									"nodeType": "VariableDeclaration",
									"scope": 3181,
									"src": "1177:71:30",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
										"typeString": "mapping(uint256 => bytes)"
									},
									"typeName": {
										"id": 2399,
										"keyType": {
											"id": 2397,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1185:7:30",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1177:25:30",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
											"typeString": "mapping(uint256 => bytes)"
										},
										"valueType": {
											"id": 2398,
											"name": "bytes",
											"nodeType": "ElementaryTypeName",
											"src": "1196:5:30",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2404,
									"mutability": "mutable",
									"name": "_delayedProtocolPerVaultParamsTimestamp",
									"nameLocation": "1292:39:30",
									"nodeType": "VariableDeclaration",
									"scope": 3181,
									"src": "1255:76:30",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 2403,
										"keyType": {
											"id": 2401,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1263:7:30",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1255:27:30",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 2402,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1274:7:30",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2406,
									"mutability": "mutable",
									"name": "_delayedProtocolParams",
									"nameLocation": "1355:22:30",
									"nodeType": "VariableDeclaration",
									"scope": 3181,
									"src": "1340:37:30",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 2405,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "1340:5:30",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2408,
									"mutability": "mutable",
									"name": "_stagedDelayedProtocolParams",
									"nameLocation": "1399:28:30",
									"nodeType": "VariableDeclaration",
									"scope": 3181,
									"src": "1384:43:30",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 2407,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "1384:5:30",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2410,
									"mutability": "mutable",
									"name": "_delayedProtocolParamsTimestamp",
									"nameLocation": "1451:31:30",
									"nodeType": "VariableDeclaration",
									"scope": 3181,
									"src": "1434:48:30",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2409,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1434:7:30",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2414,
									"mutability": "mutable",
									"name": "_strategyParams",
									"nameLocation": "1526:15:30",
									"nodeType": "VariableDeclaration",
									"scope": 3181,
									"src": "1491:50:30",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
										"typeString": "mapping(uint256 => bytes)"
									},
									"typeName": {
										"id": 2413,
										"keyType": {
											"id": 2411,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1499:7:30",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1491:25:30",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
											"typeString": "mapping(uint256 => bytes)"
										},
										"valueType": {
											"id": 2412,
											"name": "bytes",
											"nodeType": "ElementaryTypeName",
											"src": "1510:5:30",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2416,
									"mutability": "mutable",
									"name": "_protocolParams",
									"nameLocation": "1563:15:30",
									"nodeType": "VariableDeclaration",
									"scope": 3181,
									"src": "1548:30:30",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 2415,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "1548:5:30",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2418,
									"mutability": "mutable",
									"name": "_operatorParams",
									"nameLocation": "1600:15:30",
									"nodeType": "VariableDeclaration",
									"scope": 3181,
									"src": "1585:30:30",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 2417,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "1585:5:30",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2474,
										"nodeType": "Block",
										"src": "1772:360:30",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2428,
																			"name": "internalParams_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2422,
																			"src": "1799:15:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_InternalParams_$1633_memory_ptr",
																				"typeString": "struct IVaultGovernance.InternalParams memory"
																			}
																		},
																		"id": 2429,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "protocolGovernance",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1626,
																		"src": "1799:34:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IProtocolGovernance_$610",
																			"typeString": "contract IProtocolGovernance"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IProtocolGovernance_$610",
																			"typeString": "contract IProtocolGovernance"
																		}
																	],
																	"id": 2427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1791:7:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2426,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1791:7:30",
																		"typeDescriptions": {}
																	}
																},
																"id": 2430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1791:43:30",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1846:1:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1838:7:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2431,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1838:7:30",
																		"typeDescriptions": {}
																	}
																},
																"id": 2434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1838:10:30",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1791:57:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 2436,
																"name": "ExceptionsLibrary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1757,
																"src": "1850:17:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$1757_$",
																	"typeString": "type(library ExceptionsLibrary)"
																}
															},
															"id": 2437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "ADDRESS_ZERO",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1693,
															"src": "1850:30:30",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2425,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1783:7:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1783:98:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2439,
												"nodeType": "ExpressionStatement",
												"src": "1783:98:30"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2443,
																			"name": "internalParams_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2422,
																			"src": "1908:15:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_InternalParams_$1633_memory_ptr",
																				"typeString": "struct IVaultGovernance.InternalParams memory"
																			}
																		},
																		"id": 2444,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "registry",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1629,
																		"src": "1908:24:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IVaultRegistry_$754",
																			"typeString": "contract IVaultRegistry"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IVaultRegistry_$754",
																			"typeString": "contract IVaultRegistry"
																		}
																	],
																	"id": 2442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1900:7:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2441,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1900:7:30",
																		"typeDescriptions": {}
																	}
																},
																"id": 2445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1900:33:30",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1945:1:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1937:7:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2446,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1937:7:30",
																		"typeDescriptions": {}
																	}
																},
																"id": 2449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1937:10:30",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1900:47:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 2451,
																"name": "ExceptionsLibrary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1757,
																"src": "1949:17:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$1757_$",
																	"typeString": "type(library ExceptionsLibrary)"
																}
															},
															"id": 2452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "ADDRESS_ZERO",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1693,
															"src": "1949:30:30",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2440,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1892:7:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1892:88:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2454,
												"nodeType": "ExpressionStatement",
												"src": "1892:88:30"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2458,
																			"name": "internalParams_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2422,
																			"src": "2007:15:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_InternalParams_$1633_memory_ptr",
																				"typeString": "struct IVaultGovernance.InternalParams memory"
																			}
																		},
																		"id": 2459,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "singleton",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1632,
																		"src": "2007:25:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IVault_$1618",
																			"typeString": "contract IVault"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IVault_$1618",
																			"typeString": "contract IVault"
																		}
																	],
																	"id": 2457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1999:7:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2456,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1999:7:30",
																		"typeDescriptions": {}
																	}
																},
																"id": 2460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1999:34:30",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2045:1:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2037:7:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2461,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2037:7:30",
																		"typeDescriptions": {}
																	}
																},
																"id": 2464,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2037:10:30",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1999:48:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 2466,
																"name": "ExceptionsLibrary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1757,
																"src": "2049:17:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$1757_$",
																	"typeString": "type(library ExceptionsLibrary)"
																}
															},
															"id": 2467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "ADDRESS_ZERO",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1693,
															"src": "2049:30:30",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2455,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1991:7:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1991:89:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2469,
												"nodeType": "ExpressionStatement",
												"src": "1991:89:30"
											},
											{
												"expression": {
													"id": 2472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2470,
														"name": "_internalParams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2375,
														"src": "2091:15:30",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InternalParams_$1633_storage",
															"typeString": "struct IVaultGovernance.InternalParams storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2471,
														"name": "internalParams_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2422,
														"src": "2109:15:30",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InternalParams_$1633_memory_ptr",
															"typeString": "struct IVaultGovernance.InternalParams memory"
														}
													},
													"src": "2091:33:30",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InternalParams_$1633_storage",
														"typeString": "struct IVaultGovernance.InternalParams storage ref"
													}
												},
												"id": 2473,
												"nodeType": "ExpressionStatement",
												"src": "2091:33:30"
											}
										]
									},
									"documentation": {
										"id": 2419,
										"nodeType": "StructuredDocumentation",
										"src": "1624:91:30",
										"text": "@notice Creates a new contract.\n @param internalParams_ Initial Internal Params"
									},
									"id": 2475,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2422,
												"mutability": "mutable",
												"name": "internalParams_",
												"nameLocation": "1755:15:30",
												"nodeType": "VariableDeclaration",
												"scope": 2475,
												"src": "1733:37:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InternalParams_$1633_memory_ptr",
													"typeString": "struct IVaultGovernance.InternalParams"
												},
												"typeName": {
													"id": 2421,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2420,
														"name": "InternalParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1633,
														"src": "1733:14:30"
													},
													"referencedDeclaration": 1633,
													"src": "1733:14:30",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InternalParams_$1633_storage_ptr",
														"typeString": "struct IVaultGovernance.InternalParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1732:39:30"
									},
									"returnParameters": {
										"id": 2424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1772:0:30"
									},
									"scope": 3181,
									"src": "1721:411:30",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1641
									],
									"body": {
										"id": 2487,
										"nodeType": "Block",
										"src": "2330:62:30",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2483,
														"name": "_delayedStrategyParamsTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2392,
														"src": "2348:31:30",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 2485,
													"indexExpression": {
														"id": 2484,
														"name": "nft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2478,
														"src": "2380:3:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2348:36:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2482,
												"id": 2486,
												"nodeType": "Return",
												"src": "2341:43:30"
											}
										]
									},
									"documentation": {
										"id": 2476,
										"nodeType": "StructuredDocumentation",
										"src": "2207:32:30",
										"text": "@inheritdoc IVaultGovernance"
									},
									"functionSelector": "6707acee",
									"id": 2488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delayedStrategyParamsTimestamp",
									"nameLocation": "2254:30:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2478,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "2293:3:30",
												"nodeType": "VariableDeclaration",
												"scope": 2488,
												"src": "2285:11:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2285:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:13:30"
									},
									"returnParameters": {
										"id": 2482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2488,
												"src": "2321:7:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2321:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:9:30"
									},
									"scope": 3181,
									"src": "2245:147:30",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1655
									],
									"body": {
										"id": 2500,
										"nodeType": "Block",
										"src": "2531:70:30",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2496,
														"name": "_delayedProtocolPerVaultParamsTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2404,
														"src": "2549:39:30",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 2498,
													"indexExpression": {
														"id": 2497,
														"name": "nft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2491,
														"src": "2589:3:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2549:44:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2495,
												"id": 2499,
												"nodeType": "Return",
												"src": "2542:51:30"
											}
										]
									},
									"documentation": {
										"id": 2489,
										"nodeType": "StructuredDocumentation",
										"src": "2400:32:30",
										"text": "@inheritdoc IVaultGovernance"
									},
									"functionSelector": "511ce798",
									"id": 2501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delayedProtocolPerVaultParamsTimestamp",
									"nameLocation": "2447:38:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2491,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "2494:3:30",
												"nodeType": "VariableDeclaration",
												"scope": 2501,
												"src": "2486:11:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2486:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2485:13:30"
									},
									"returnParameters": {
										"id": 2495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2501,
												"src": "2522:7:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2521:9:30"
									},
									"scope": 3181,
									"src": "2438:163:30",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1647
									],
									"body": {
										"id": 2509,
										"nodeType": "Block",
										"src": "2721:57:30",
										"statements": [
											{
												"expression": {
													"id": 2507,
													"name": "_delayedProtocolParamsTimestamp",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2410,
													"src": "2739:31:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2506,
												"id": 2508,
												"nodeType": "Return",
												"src": "2732:38:30"
											}
										]
									},
									"documentation": {
										"id": 2502,
										"nodeType": "StructuredDocumentation",
										"src": "2609:32:30",
										"text": "@inheritdoc IVaultGovernance"
									},
									"functionSelector": "e4af6e79",
									"id": 2510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delayedProtocolParamsTimestamp",
									"nameLocation": "2656:30:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2686:2:30"
									},
									"returnParameters": {
										"id": 2506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2505,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2510,
												"src": "2712:7:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:9:30"
									},
									"scope": 3181,
									"src": "2647:131:30",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1661
									],
									"body": {
										"id": 2518,
										"nodeType": "Block",
										"src": "2891:50:30",
										"statements": [
											{
												"expression": {
													"id": 2516,
													"name": "_internalParamsTimestamp",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2380,
													"src": "2909:24:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2515,
												"id": 2517,
												"nodeType": "Return",
												"src": "2902:31:30"
											}
										]
									},
									"documentation": {
										"id": 2511,
										"nodeType": "StructuredDocumentation",
										"src": "2786:32:30",
										"text": "@inheritdoc IVaultGovernance"
									},
									"functionSelector": "1c7f4c73",
									"id": 2519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "internalParamsTimestamp",
									"nameLocation": "2833:23:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2856:2:30"
									},
									"returnParameters": {
										"id": 2515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2519,
												"src": "2882:7:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:30"
									},
									"scope": 3181,
									"src": "2824:117:30",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1668
									],
									"body": {
										"id": 2528,
										"nodeType": "Block",
										"src": "3059:41:30",
										"statements": [
											{
												"expression": {
													"id": 2526,
													"name": "_internalParams",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2375,
													"src": "3077:15:30",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InternalParams_$1633_storage",
														"typeString": "struct IVaultGovernance.InternalParams storage ref"
													}
												},
												"functionReturnParameters": 2525,
												"id": 2527,
												"nodeType": "Return",
												"src": "3070:22:30"
											}
										]
									},
									"documentation": {
										"id": 2520,
										"nodeType": "StructuredDocumentation",
										"src": "2949:32:30",
										"text": "@inheritdoc IVaultGovernance"
									},
									"functionSelector": "7ac46fbb",
									"id": 2529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "internalParams",
									"nameLocation": "2996:14:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3010:2:30"
									},
									"returnParameters": {
										"id": 2525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2529,
												"src": "3036:21:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InternalParams_$1633_memory_ptr",
													"typeString": "struct IVaultGovernance.InternalParams"
												},
												"typeName": {
													"id": 2523,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2522,
														"name": "InternalParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1633,
														"src": "3036:14:30"
													},
													"referencedDeclaration": 1633,
													"src": "3036:14:30",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InternalParams_$1633_storage_ptr",
														"typeString": "struct IVaultGovernance.InternalParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3035:23:30"
									},
									"scope": 3181,
									"src": "2987:113:30",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1675
									],
									"body": {
										"id": 2538,
										"nodeType": "Block",
										"src": "3224:47:30",
										"statements": [
											{
												"expression": {
													"id": 2536,
													"name": "_stagedInternalParams",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2378,
													"src": "3242:21:30",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InternalParams_$1633_storage",
														"typeString": "struct IVaultGovernance.InternalParams storage ref"
													}
												},
												"functionReturnParameters": 2535,
												"id": 2537,
												"nodeType": "Return",
												"src": "3235:28:30"
											}
										]
									},
									"documentation": {
										"id": 2530,
										"nodeType": "StructuredDocumentation",
										"src": "3108:32:30",
										"text": "@inheritdoc IVaultGovernance"
									},
									"functionSelector": "86c6be3e",
									"id": 2539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stagedInternalParams",
									"nameLocation": "3155:20:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2531,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3175:2:30"
									},
									"returnParameters": {
										"id": 2535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2539,
												"src": "3201:21:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InternalParams_$1633_memory_ptr",
													"typeString": "struct IVaultGovernance.InternalParams"
												},
												"typeName": {
													"id": 2533,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2532,
														"name": "InternalParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1633,
														"src": "3201:14:30"
													},
													"referencedDeclaration": 1633,
													"src": "3201:14:30",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InternalParams_$1633_storage_ptr",
														"typeString": "struct IVaultGovernance.InternalParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3200:23:30"
									},
									"scope": 3181,
									"src": "3146:125:30",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										334
									],
									"body": {
										"id": 2560,
										"nodeType": "Block",
										"src": "3378:115:30",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2550,
																"name": "interfaceID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2541,
																"src": "3420:11:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 2548,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "3396:5:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_VaultGovernance_$3181_$",
																	"typeString": "type(contract super VaultGovernance)"
																}
															},
															"id": 2549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 334,
															"src": "3396:23:30",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 2551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3396:36:30",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 2557,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2552,
															"name": "interfaceID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2541,
															"src": "3436:11:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2554,
																		"name": "IVaultGovernance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1687,
																		"src": "3456:16:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IVaultGovernance_$1687_$",
																			"typeString": "type(contract IVaultGovernance)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IVaultGovernance_$1687_$",
																			"typeString": "type(contract IVaultGovernance)"
																		}
																	],
																	"id": 2553,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "3451:4:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3451:22:30",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IVaultGovernance_$1687",
																	"typeString": "type(contract IVaultGovernance)"
																}
															},
															"id": 2556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "3451:34:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "3436:49:30",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3396:89:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2547,
												"id": 2559,
												"nodeType": "Return",
												"src": "3389:96:30"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 2561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3288:17:30",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2544,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2543,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 335,
												"src": "3355:6:30"
											}
										],
										"src": "3346:16:30"
									},
									"parameters": {
										"id": 2542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2541,
												"mutability": "mutable",
												"name": "interfaceID",
												"nameLocation": "3313:11:30",
												"nodeType": "VariableDeclaration",
												"scope": 2561,
												"src": "3306:18:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2540,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3306:6:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3305:20:30"
									},
									"returnParameters": {
										"id": 2547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2561,
												"src": "3372:4:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3372:4:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3371:6:30"
									},
									"scope": 3181,
									"src": "3279:214:30",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1682
									],
									"body": {
										"id": 2639,
										"nodeType": "Block",
										"src": "3681:580:30",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2568,
														"name": "_requireProtocolAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2735,
														"src": "3692:21:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 2569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3692:23:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2570,
												"nodeType": "ExpressionStatement",
												"src": "3692:23:30"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2574,
																			"name": "newParams",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2565,
																			"src": "3742:9:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_InternalParams_$1633_memory_ptr",
																				"typeString": "struct IVaultGovernance.InternalParams memory"
																			}
																		},
																		"id": 2575,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "protocolGovernance",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1626,
																		"src": "3742:28:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IProtocolGovernance_$610",
																			"typeString": "contract IProtocolGovernance"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IProtocolGovernance_$610",
																			"typeString": "contract IProtocolGovernance"
																		}
																	],
																	"id": 2573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3734:7:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2572,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3734:7:30",
																		"typeDescriptions": {}
																	}
																},
																"id": 2576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3734:37:30",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3783:1:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3775:7:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2577,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3775:7:30",
																		"typeDescriptions": {}
																	}
																},
																"id": 2580,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3775:10:30",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3734:51:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 2582,
																"name": "ExceptionsLibrary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1757,
																"src": "3787:17:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$1757_$",
																	"typeString": "type(library ExceptionsLibrary)"
																}
															},
															"id": 2583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "ADDRESS_ZERO",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1693,
															"src": "3787:30:30",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2571,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3726:7:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3726:92:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2585,
												"nodeType": "ExpressionStatement",
												"src": "3726:92:30"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2589,
																			"name": "newParams",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2565,
																			"src": "3845:9:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_InternalParams_$1633_memory_ptr",
																				"typeString": "struct IVaultGovernance.InternalParams memory"
																			}
																		},
																		"id": 2590,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "registry",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1629,
																		"src": "3845:18:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IVaultRegistry_$754",
																			"typeString": "contract IVaultRegistry"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IVaultRegistry_$754",
																			"typeString": "contract IVaultRegistry"
																		}
																	],
																	"id": 2588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3837:7:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2587,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3837:7:30",
																		"typeDescriptions": {}
																	}
																},
																"id": 2591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3837:27:30",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3876:1:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3868:7:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2592,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3868:7:30",
																		"typeDescriptions": {}
																	}
																},
																"id": 2595,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3868:10:30",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3837:41:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 2597,
																"name": "ExceptionsLibrary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1757,
																"src": "3880:17:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$1757_$",
																	"typeString": "type(library ExceptionsLibrary)"
																}
															},
															"id": 2598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "ADDRESS_ZERO",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1693,
															"src": "3880:30:30",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2586,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3829:7:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3829:82:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2600,
												"nodeType": "ExpressionStatement",
												"src": "3829:82:30"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2604,
																			"name": "newParams",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2565,
																			"src": "3938:9:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_InternalParams_$1633_memory_ptr",
																				"typeString": "struct IVaultGovernance.InternalParams memory"
																			}
																		},
																		"id": 2605,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "singleton",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1632,
																		"src": "3938:19:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IVault_$1618",
																			"typeString": "contract IVault"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IVault_$1618",
																			"typeString": "contract IVault"
																		}
																	],
																	"id": 2603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3930:7:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2602,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3930:7:30",
																		"typeDescriptions": {}
																	}
																},
																"id": 2606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3930:28:30",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3970:1:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3962:7:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2607,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3962:7:30",
																		"typeDescriptions": {}
																	}
																},
																"id": 2610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3962:10:30",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3930:42:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 2612,
																"name": "ExceptionsLibrary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1757,
																"src": "3974:17:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$1757_$",
																	"typeString": "type(library ExceptionsLibrary)"
																}
															},
															"id": 2613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "ADDRESS_ZERO",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1693,
															"src": "3974:30:30",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2601,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3922:7:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3922:83:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2615,
												"nodeType": "ExpressionStatement",
												"src": "3922:83:30"
											},
											{
												"expression": {
													"id": 2618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2616,
														"name": "_stagedInternalParams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2378,
														"src": "4016:21:30",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InternalParams_$1633_storage",
															"typeString": "struct IVaultGovernance.InternalParams storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2617,
														"name": "newParams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2565,
														"src": "4040:9:30",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InternalParams_$1633_memory_ptr",
															"typeString": "struct IVaultGovernance.InternalParams memory"
														}
													},
													"src": "4016:33:30",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InternalParams_$1633_storage",
														"typeString": "struct IVaultGovernance.InternalParams storage ref"
													}
												},
												"id": 2619,
												"nodeType": "ExpressionStatement",
												"src": "4016:33:30"
											},
											{
												"expression": {
													"id": 2628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2620,
														"name": "_internalParamsTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2380,
														"src": "4060:24:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2627,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2621,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4087:5:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4087:15:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"expression": {
																		"id": 2623,
																		"name": "_internalParams",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2375,
																		"src": "4105:15:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InternalParams_$1633_storage",
																			"typeString": "struct IVaultGovernance.InternalParams storage ref"
																		}
																	},
																	"id": 2624,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "protocolGovernance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1626,
																	"src": "4105:34:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IProtocolGovernance_$610",
																		"typeString": "contract IProtocolGovernance"
																	}
																},
																"id": 2625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "governanceDelay",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 466,
																"src": "4105:50:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 2626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4105:52:30",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4087:70:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4060:97:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2629,
												"nodeType": "ExpressionStatement",
												"src": "4060:97:30"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2631,
																"name": "tx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967270,
																"src": "4194:2:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_transaction",
																	"typeString": "tx"
																}
															},
															"id": 2632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "origin",
															"nodeType": "MemberAccess",
															"src": "4194:9:30",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2633,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4205:3:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4205:10:30",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2635,
															"name": "newParams",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2565,
															"src": "4217:9:30",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InternalParams_$1633_memory_ptr",
																"typeString": "struct IVaultGovernance.InternalParams memory"
															}
														},
														{
															"id": 2636,
															"name": "_internalParamsTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2380,
															"src": "4228:24:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_struct$_InternalParams_$1633_memory_ptr",
																"typeString": "struct IVaultGovernance.InternalParams memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2630,
														"name": "StagedInternalParams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3152,
														"src": "4173:20:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_struct$_InternalParams_$1633_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,struct IVaultGovernance.InternalParams memory,uint256)"
														}
													},
													"id": 2637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4173:80:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2638,
												"nodeType": "EmitStatement",
												"src": "4168:85:30"
											}
										]
									},
									"documentation": {
										"id": 2562,
										"nodeType": "StructuredDocumentation",
										"src": "3572:32:30",
										"text": "@inheritdoc IVaultGovernance"
									},
									"functionSelector": "09946538",
									"id": 2640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stageInternalParams",
									"nameLocation": "3619:19:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2565,
												"mutability": "mutable",
												"name": "newParams",
												"nameLocation": "3661:9:30",
												"nodeType": "VariableDeclaration",
												"scope": 2640,
												"src": "3639:31:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InternalParams_$1633_memory_ptr",
													"typeString": "struct IVaultGovernance.InternalParams"
												},
												"typeName": {
													"id": 2564,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2563,
														"name": "InternalParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1633,
														"src": "3639:14:30"
													},
													"referencedDeclaration": 1633,
													"src": "3639:14:30",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InternalParams_$1633_storage_ptr",
														"typeString": "struct IVaultGovernance.InternalParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3638:33:30"
									},
									"returnParameters": {
										"id": 2567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3681:0:30"
									},
									"scope": 3181,
									"src": "3610:651:30",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1686
									],
									"body": {
										"id": 2682,
										"nodeType": "Block",
										"src": "4348:416:30",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2644,
														"name": "_requireProtocolAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2735,
														"src": "4359:21:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 2645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4359:23:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2646,
												"nodeType": "ExpressionStatement",
												"src": "4359:23:30"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2648,
																"name": "_internalParamsTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2380,
																"src": "4401:24:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4429:1:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4401:29:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 2651,
																"name": "ExceptionsLibrary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1757,
																"src": "4432:17:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$1757_$",
																	"typeString": "type(library ExceptionsLibrary)"
																}
															},
															"id": 2652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "NULL",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1711,
															"src": "4432:22:30",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2647,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4393:7:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4393:62:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2654,
												"nodeType": "ExpressionStatement",
												"src": "4393:62:30"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2656,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4474:5:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4474:15:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2658,
																"name": "_internalParamsTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2380,
																"src": "4493:24:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4474:43:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 2660,
																"name": "ExceptionsLibrary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1757,
																"src": "4519:17:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$1757_$",
																	"typeString": "type(library ExceptionsLibrary)"
																}
															},
															"id": 2661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "TIMESTAMP",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1714,
															"src": "4519:27:30",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2655,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4466:7:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4466:81:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2663,
												"nodeType": "ExpressionStatement",
												"src": "4466:81:30"
											},
											{
												"expression": {
													"id": 2666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2664,
														"name": "_internalParams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2375,
														"src": "4558:15:30",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InternalParams_$1633_storage",
															"typeString": "struct IVaultGovernance.InternalParams storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2665,
														"name": "_stagedInternalParams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2378,
														"src": "4576:21:30",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InternalParams_$1633_storage",
															"typeString": "struct IVaultGovernance.InternalParams storage ref"
														}
													},
													"src": "4558:39:30",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InternalParams_$1633_storage",
														"typeString": "struct IVaultGovernance.InternalParams storage ref"
													}
												},
												"id": 2667,
												"nodeType": "ExpressionStatement",
												"src": "4558:39:30"
											},
											{
												"expression": {
													"id": 2669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "4608:31:30",
													"subExpression": {
														"id": 2668,
														"name": "_internalParamsTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2380,
														"src": "4615:24:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2670,
												"nodeType": "ExpressionStatement",
												"src": "4608:31:30"
											},
											{
												"expression": {
													"id": 2672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "4650:28:30",
													"subExpression": {
														"id": 2671,
														"name": "_stagedInternalParams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2378,
														"src": "4657:21:30",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InternalParams_$1633_storage",
															"typeString": "struct IVaultGovernance.InternalParams storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2673,
												"nodeType": "ExpressionStatement",
												"src": "4650:28:30"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2675,
																"name": "tx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967270,
																"src": "4717:2:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_transaction",
																	"typeString": "tx"
																}
															},
															"id": 2676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "origin",
															"nodeType": "MemberAccess",
															"src": "4717:9:30",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2677,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4728:3:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4728:10:30",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2679,
															"name": "_internalParams",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2375,
															"src": "4740:15:30",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InternalParams_$1633_storage",
																"typeString": "struct IVaultGovernance.InternalParams storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_struct$_InternalParams_$1633_storage",
																"typeString": "struct IVaultGovernance.InternalParams storage ref"
															}
														],
														"id": 2674,
														"name": "CommitedInternalParams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3162,
														"src": "4694:22:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_struct$_InternalParams_$1633_memory_ptr_$returns$__$",
															"typeString": "function (address,address,struct IVaultGovernance.InternalParams memory)"
														}
													},
													"id": 2680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4694:62:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2681,
												"nodeType": "EmitStatement",
												"src": "4689:67:30"
											}
										]
									},
									"documentation": {
										"id": 2641,
										"nodeType": "StructuredDocumentation",
										"src": "4269:32:30",
										"text": "@inheritdoc IVaultGovernance"
									},
									"functionSelector": "d4a07d34",
									"id": 2683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "commitInternalParams",
									"nameLocation": "4316:20:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4336:2:30"
									},
									"returnParameters": {
										"id": 2643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4348:0:30"
									},
									"scope": 3181,
									"src": "4307:457:30",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2719,
										"nodeType": "Block",
										"src": "4899:300:30",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 2713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 2692,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "4976:3:30",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 2693,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "4976:10:30",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"expression": {
																						"id": 2689,
																						"name": "_internalParams",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2375,
																						"src": "4933:15:30",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_InternalParams_$1633_storage",
																							"typeString": "struct IVaultGovernance.InternalParams storage ref"
																						}
																					},
																					"id": 2690,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "protocolGovernance",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1626,
																					"src": "4933:34:30",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IProtocolGovernance_$610",
																						"typeString": "contract IProtocolGovernance"
																					}
																				},
																				"id": 2691,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "isAdmin",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1301,
																				"src": "4933:42:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																					"typeString": "function (address) view external returns (bool)"
																				}
																			},
																			"id": 2694,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4933:54:30",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 2702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2698,
																						"name": "nft",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2685,
																						"src": "5045:3:30",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 2695,
																							"name": "_internalParams",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2375,
																							"src": "5008:15:30",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_InternalParams_$1633_storage",
																								"typeString": "struct IVaultGovernance.InternalParams storage ref"
																							}
																						},
																						"id": 2696,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "registry",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1629,
																						"src": "5008:24:30",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IVaultRegistry_$754",
																							"typeString": "contract IVaultRegistry"
																						}
																					},
																					"id": 2697,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "getApproved",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 262,
																					"src": "5008:36:30",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																						"typeString": "function (uint256) view external returns (address)"
																					}
																				},
																				"id": 2699,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5008:41:30",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"expression": {
																					"id": 2700,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "5053:3:30",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2701,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "5053:10:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "5008:55:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "4933:130:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				"id": 2711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 2707,
																							"name": "nft",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2685,
																							"src": "5118:3:30",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"expression": {
																								"id": 2704,
																								"name": "_internalParams",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2375,
																								"src": "5085:15:30",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_InternalParams_$1633_storage",
																									"typeString": "struct IVaultGovernance.InternalParams storage ref"
																								}
																							},
																							"id": 2705,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "registry",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1629,
																							"src": "5085:24:30",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IVaultRegistry_$754",
																								"typeString": "contract IVaultRegistry"
																							}
																						},
																						"id": 2706,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "ownerOf",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 226,
																						"src": "5085:32:30",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																							"typeString": "function (uint256) view external returns (address)"
																						}
																					},
																					"id": 2708,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5085:37:30",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2709,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "5126:3:30",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 2710,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "5126:10:30",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"src": "5085:51:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 2712,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5084:53:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "4933:204:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 2714,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4932:206:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 2715,
																"name": "ExceptionsLibrary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1757,
																"src": "5153:17:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$1757_$",
																	"typeString": "type(library ExceptionsLibrary)"
																}
															},
															"id": 2716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "FORBIDDEN",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1717,
															"src": "5153:27:30",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2688,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4910:7:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4910:281:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2718,
												"nodeType": "ExpressionStatement",
												"src": "4910:281:30"
											}
										]
									},
									"id": 2720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireAtLeastStrategy",
									"nameLocation": "4848:23:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2685,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "4880:3:30",
												"nodeType": "VariableDeclaration",
												"scope": 2720,
												"src": "4872:11:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4872:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4871:13:30"
									},
									"returnParameters": {
										"id": 2687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4899:0:30"
									},
									"scope": 3181,
									"src": "4839:360:30",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2734,
										"nodeType": "Block",
										"src": "5254:111:30",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2727,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5316:3:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5316:10:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 2724,
																		"name": "_internalParams",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2375,
																		"src": "5273:15:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InternalParams_$1633_storage",
																			"typeString": "struct IVaultGovernance.InternalParams storage ref"
																		}
																	},
																	"id": 2725,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "protocolGovernance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1626,
																	"src": "5273:34:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IProtocolGovernance_$610",
																		"typeString": "contract IProtocolGovernance"
																	}
																},
																"id": 2726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isAdmin",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1301,
																"src": "5273:42:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view external returns (bool)"
																}
															},
															"id": 2729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5273:54:30",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 2730,
																"name": "ExceptionsLibrary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1757,
																"src": "5329:17:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$1757_$",
																	"typeString": "type(library ExceptionsLibrary)"
																}
															},
															"id": 2731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "FORBIDDEN",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1717,
															"src": "5329:27:30",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2723,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5265:7:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5265:92:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2733,
												"nodeType": "ExpressionStatement",
												"src": "5265:92:30"
											}
										]
									},
									"id": 2735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireProtocolAdmin",
									"nameLocation": "5216:21:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5237:2:30"
									},
									"returnParameters": {
										"id": 2722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5254:0:30"
									},
									"scope": 3181,
									"src": "5207:158:30",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2760,
										"nodeType": "Block",
										"src": "5422:202:30",
										"statements": [
											{
												"assignments": [
													2740
												],
												"declarations": [
													{
														"constant": false,
														"id": 2740,
														"mutability": "mutable",
														"name": "governance",
														"nameLocation": "5453:10:30",
														"nodeType": "VariableDeclaration",
														"scope": 2760,
														"src": "5433:30:30",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IProtocolGovernance_$610",
															"typeString": "contract IProtocolGovernance"
														},
														"typeName": {
															"id": 2739,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2738,
																"name": "IProtocolGovernance",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 610,
																"src": "5433:19:30"
															},
															"referencedDeclaration": 610,
															"src": "5433:19:30",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IProtocolGovernance_$610",
																"typeString": "contract IProtocolGovernance"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2743,
												"initialValue": {
													"expression": {
														"id": 2741,
														"name": "_internalParams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2375,
														"src": "5466:15:30",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InternalParams_$1633_storage",
															"typeString": "struct IVaultGovernance.InternalParams storage ref"
														}
													},
													"id": 2742,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "protocolGovernance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1626,
													"src": "5466:34:30",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IProtocolGovernance_$610",
														"typeString": "contract IProtocolGovernance"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5433:67:30"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2747,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5538:3:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5538:10:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2745,
																		"name": "governance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2740,
																		"src": "5519:10:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IProtocolGovernance_$610",
																			"typeString": "contract IProtocolGovernance"
																		}
																	},
																	"id": 2746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "isAdmin",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1301,
																	"src": "5519:18:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view external returns (bool)"
																	}
																},
																"id": 2749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5519:30:30",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2752,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5575:3:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5575:10:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2750,
																		"name": "governance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2740,
																		"src": "5553:10:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IProtocolGovernance_$610",
																			"typeString": "contract IProtocolGovernance"
																		}
																	},
																	"id": 2751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "isOperator",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1309,
																	"src": "5553:21:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view external returns (bool)"
																	}
																},
																"id": 2754,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5553:33:30",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5519:67:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 2756,
																"name": "ExceptionsLibrary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1757,
																"src": "5588:17:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$1757_$",
																	"typeString": "type(library ExceptionsLibrary)"
																}
															},
															"id": 2757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "FORBIDDEN",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1717,
															"src": "5588:27:30",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2744,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5511:7:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5511:105:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2759,
												"nodeType": "ExpressionStatement",
												"src": "5511:105:30"
											}
										]
									},
									"id": 2761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireAtLeastOperator",
									"nameLocation": "5382:23:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5405:2:30"
									},
									"returnParameters": {
										"id": 2737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5422:0:30"
									},
									"scope": 3181,
									"src": "5373:251:30",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2829,
										"nodeType": "Block",
										"src": "5786:549:30",
										"statements": [
											{
												"assignments": [
													2772
												],
												"declarations": [
													{
														"constant": false,
														"id": 2772,
														"mutability": "mutable",
														"name": "protocolGovernance",
														"nameLocation": "5817:18:30",
														"nodeType": "VariableDeclaration",
														"scope": 2829,
														"src": "5797:38:30",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IProtocolGovernance_$610",
															"typeString": "contract IProtocolGovernance"
														},
														"typeName": {
															"id": 2771,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2770,
																"name": "IProtocolGovernance",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 610,
																"src": "5797:19:30"
															},
															"referencedDeclaration": 610,
															"src": "5797:19:30",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IProtocolGovernance_$610",
																"typeString": "contract IProtocolGovernance"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2777,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2774,
																"name": "_internalParams",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2375,
																"src": "5858:15:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InternalParams_$1633_storage",
																	"typeString": "struct IVaultGovernance.InternalParams storage ref"
																}
															},
															"id": 2775,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "protocolGovernance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1626,
															"src": "5858:34:30",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IProtocolGovernance_$610",
																"typeString": "contract IProtocolGovernance"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IProtocolGovernance_$610",
																"typeString": "contract IProtocolGovernance"
															}
														],
														"id": 2773,
														"name": "IProtocolGovernance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "5838:19:30",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IProtocolGovernance_$610_$",
															"typeString": "type(contract IProtocolGovernance)"
														}
													},
													"id": 2776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5838:55:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IProtocolGovernance_$610",
														"typeString": "contract IProtocolGovernance"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5797:96:30"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2781,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5959:3:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5959:10:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 2783,
																		"name": "PermissionIdsLibrary",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1782,
																		"src": "5971:20:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_PermissionIdsLibrary_$1782_$",
																			"typeString": "type(library PermissionIdsLibrary)"
																		}
																	},
																	"id": 2784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "CREATE_VAULT",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1766,
																	"src": "5971:33:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"expression": {
																	"id": 2779,
																	"name": "protocolGovernance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2772,
																	"src": "5926:18:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IProtocolGovernance_$610",
																		"typeString": "contract IProtocolGovernance"
																	}
																},
																"id": 2780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "hasPermission",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 443,
																"src": "5926:32:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_uint8_$returns$_t_bool_$",
																	"typeString": "function (address,uint8) view external returns (bool)"
																}
															},
															"id": 2785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5926:79:30",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 2786,
																"name": "ExceptionsLibrary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1757,
																"src": "6020:17:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$1757_$",
																	"typeString": "type(library ExceptionsLibrary)"
																}
															},
															"id": 2787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "FORBIDDEN",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1717,
															"src": "6020:27:30",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2778,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5904:7:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5904:154:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2789,
												"nodeType": "ExpressionStatement",
												"src": "5904:154:30"
											},
											{
												"assignments": [
													2792
												],
												"declarations": [
													{
														"constant": false,
														"id": 2792,
														"mutability": "mutable",
														"name": "vaultRegistry",
														"nameLocation": "6084:13:30",
														"nodeType": "VariableDeclaration",
														"scope": 2829,
														"src": "6069:28:30",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IVaultRegistry_$754",
															"typeString": "contract IVaultRegistry"
														},
														"typeName": {
															"id": 2791,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2790,
																"name": "IVaultRegistry",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 754,
																"src": "6069:14:30"
															},
															"referencedDeclaration": 754,
															"src": "6069:14:30",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IVaultRegistry_$754",
																"typeString": "contract IVaultRegistry"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2795,
												"initialValue": {
													"expression": {
														"id": 2793,
														"name": "_internalParams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2375,
														"src": "6100:15:30",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InternalParams_$1633_storage",
															"typeString": "struct IVaultGovernance.InternalParams storage ref"
														}
													},
													"id": 2794,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "registry",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1629,
													"src": "6100:24:30",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IVaultRegistry_$754",
														"typeString": "contract IVaultRegistry"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6069:55:30"
											},
											{
												"expression": {
													"id": 2802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2796,
														"name": "nft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2768,
														"src": "6135:3:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2801,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 2797,
																	"name": "vaultRegistry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2792,
																	"src": "6141:13:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IVaultRegistry_$754",
																		"typeString": "contract IVaultRegistry"
																	}
																},
																"id": 2798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "vaultsCount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 709,
																"src": "6141:25:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 2799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6141:27:30",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6171:1:30",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "6141:31:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6135:37:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2803,
												"nodeType": "ExpressionStatement",
												"src": "6135:37:30"
											},
											{
												"expression": {
													"id": 2817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2804,
														"name": "vault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2766,
														"src": "6183:5:30",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 2809,
																			"name": "_internalParams",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2375,
																			"src": "6225:15:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_InternalParams_$1633_storage",
																				"typeString": "struct IVaultGovernance.InternalParams storage ref"
																			}
																		},
																		"id": 2810,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "singleton",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1632,
																		"src": "6225:25:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IVault_$1618",
																			"typeString": "contract IVault"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IVault_$1618",
																			"typeString": "contract IVault"
																		}
																	],
																	"id": 2808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6217:7:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2807,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6217:7:30",
																		"typeDescriptions": {}
																	}
																},
																"id": 2811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6217:34:30",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 2814,
																		"name": "nft",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2768,
																		"src": "6261:3:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6253:7:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 2812,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6253:7:30",
																		"typeDescriptions": {}
																	}
																},
																"id": 2815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6253:12:30",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 2805,
																"name": "Clones",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 177,
																"src": "6191:6:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Clones_$177_$",
																	"typeString": "type(library Clones)"
																}
															},
															"id": 2806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "cloneDeterministic",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 142,
															"src": "6191:25:30",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$_t_address_$",
																"typeString": "function (address,bytes32) returns (address)"
															}
														},
														"id": 2816,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6191:75:30",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6183:83:30",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2818,
												"nodeType": "ExpressionStatement",
												"src": "6183:83:30"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2824,
																	"name": "vault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2766,
																	"src": "6313:5:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6305:7:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2822,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6305:7:30",
																	"typeDescriptions": {}
																}
															},
															"id": 2825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6305:14:30",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2826,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2763,
															"src": "6321:5:30",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2819,
															"name": "vaultRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2792,
															"src": "6277:13:30",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IVaultRegistry_$754",
																"typeString": "contract IVaultRegistry"
															}
														},
														"id": 2821,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "registerVault",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 703,
														"src": "6277:27:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) external returns (uint256)"
														}
													},
													"id": 2827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6277:50:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2828,
												"nodeType": "ExpressionStatement",
												"src": "6277:50:30"
											}
										]
									},
									"id": 2830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_createVault",
									"nameLocation": "5712:12:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2763,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5733:5:30",
												"nodeType": "VariableDeclaration",
												"scope": 2830,
												"src": "5725:13:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:30",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:15:30"
									},
									"returnParameters": {
										"id": 2769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2766,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "5766:5:30",
												"nodeType": "VariableDeclaration",
												"scope": 2830,
												"src": "5758:13:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5758:7:30",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2768,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "5781:3:30",
												"nodeType": "VariableDeclaration",
												"scope": 2830,
												"src": "5773:11:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5757:28:30"
									},
									"scope": 3181,
									"src": "5703:632:30",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2874,
										"nodeType": "Block",
										"src": "6539:353:30",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2839,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2833,
															"src": "6574:3:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2838,
														"name": "_requireAtLeastStrategy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2720,
														"src": "6550:23:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 2840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6550:28:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2841,
												"nodeType": "ExpressionStatement",
												"src": "6550:28:30"
											},
											{
												"expression": {
													"id": 2846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2842,
															"name": "_stagedDelayedStrategyParams",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2388,
															"src": "6589:28:30",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
																"typeString": "mapping(uint256 => bytes storage ref)"
															}
														},
														"id": 2844,
														"indexExpression": {
															"id": 2843,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2833,
															"src": "6618:3:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6589:33:30",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage",
															"typeString": "bytes storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2845,
														"name": "params",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2835,
														"src": "6625:6:30",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "6589:42:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage",
														"typeString": "bytes storage ref"
													}
												},
												"id": 2847,
												"nodeType": "ExpressionStatement",
												"src": "6589:42:30"
											},
											{
												"assignments": [
													2849
												],
												"declarations": [
													{
														"constant": false,
														"id": 2849,
														"mutability": "mutable",
														"name": "delayFactor",
														"nameLocation": "6650:11:30",
														"nodeType": "VariableDeclaration",
														"scope": 2874,
														"src": "6642:19:30",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2848,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6642:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2859,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2855,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 2850,
																	"name": "_delayedStrategyParams",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2384,
																	"src": "6664:22:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
																		"typeString": "mapping(uint256 => bytes storage ref)"
																	}
																},
																"id": 2852,
																"indexExpression": {
																	"id": 2851,
																	"name": "nft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2833,
																	"src": "6687:3:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6664:27:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_storage",
																	"typeString": "bytes storage ref"
																}
															},
															"id": 2853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "6664:34:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6702:1:30",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6664:39:30",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "31",
														"id": 2857,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6710:1:30",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"id": 2858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6664:47:30",
													"trueExpression": {
														"hexValue": "30",
														"id": 2856,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6706:1:30",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6642:69:30"
											},
											{
												"expression": {
													"id": 2872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2860,
															"name": "_delayedStrategyParamsTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2392,
															"src": "6722:31:30",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2862,
														"indexExpression": {
															"id": 2861,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2833,
															"src": "6754:3:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6722:36:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2871,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2863,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6774:5:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6774:15:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 2865,
																			"name": "_internalParams",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2375,
																			"src": "6805:15:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_InternalParams_$1633_storage",
																				"typeString": "struct IVaultGovernance.InternalParams storage ref"
																			}
																		},
																		"id": 2866,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "protocolGovernance",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1626,
																		"src": "6805:34:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IProtocolGovernance_$610",
																			"typeString": "contract IProtocolGovernance"
																		}
																	},
																	"id": 2867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "governanceDelay",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 466,
																	"src": "6805:50:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																		"typeString": "function () view external returns (uint256)"
																	}
																},
																"id": 2868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6805:52:30",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2869,
																"name": "delayFactor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2849,
																"src": "6873:11:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6805:79:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6774:110:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6722:162:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2873,
												"nodeType": "ExpressionStatement",
												"src": "6722:162:30"
											}
										]
									},
									"documentation": {
										"id": 2831,
										"nodeType": "StructuredDocumentation",
										"src": "6343:110:30",
										"text": "@notice Set Delayed Strategy Params\n @param nft Nft of the vault\n @param params New params"
									},
									"id": 2875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_stageDelayedStrategyParams",
									"nameLocation": "6468:27:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2833,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "6504:3:30",
												"nodeType": "VariableDeclaration",
												"scope": 2875,
												"src": "6496:11:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6496:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2835,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "6522:6:30",
												"nodeType": "VariableDeclaration",
												"scope": 2875,
												"src": "6509:19:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2834,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6509:5:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6495:34:30"
									},
									"returnParameters": {
										"id": 2837,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6539:0:30"
									},
									"scope": 3181,
									"src": "6459:433:30",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2926,
										"nodeType": "Block",
										"src": "7008:503:30",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2882,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2878,
															"src": "7043:3:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2881,
														"name": "_requireAtLeastStrategy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2720,
														"src": "7019:23:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 2883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7019:28:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2884,
												"nodeType": "ExpressionStatement",
												"src": "7019:28:30"
											},
											{
												"assignments": [
													2886
												],
												"declarations": [
													{
														"constant": false,
														"id": 2886,
														"mutability": "mutable",
														"name": "thisDelayedStrategyParamsTimestamp",
														"nameLocation": "7066:34:30",
														"nodeType": "VariableDeclaration",
														"scope": 2926,
														"src": "7058:42:30",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2885,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7058:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2890,
												"initialValue": {
													"baseExpression": {
														"id": 2887,
														"name": "_delayedStrategyParamsTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2392,
														"src": "7103:31:30",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 2889,
													"indexExpression": {
														"id": 2888,
														"name": "nft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2878,
														"src": "7135:3:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7103:36:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7058:81:30"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2892,
																"name": "thisDelayedStrategyParamsTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2886,
																"src": "7158:34:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7196:1:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7158:39:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 2895,
																"name": "ExceptionsLibrary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1757,
																"src": "7199:17:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$1757_$",
																	"typeString": "type(library ExceptionsLibrary)"
																}
															},
															"id": 2896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "NULL",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1711,
															"src": "7199:22:30",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2891,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7150:7:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7150:72:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2898,
												"nodeType": "ExpressionStatement",
												"src": "7150:72:30"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2900,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "7241:5:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "7241:15:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2902,
																"name": "thisDelayedStrategyParamsTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2886,
																"src": "7260:34:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7241:53:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 2904,
																"name": "ExceptionsLibrary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1757,
																"src": "7296:17:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$1757_$",
																	"typeString": "type(library ExceptionsLibrary)"
																}
															},
															"id": 2905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "TIMESTAMP",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1714,
															"src": "7296:27:30",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2899,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7233:7:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7233:91:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2907,
												"nodeType": "ExpressionStatement",
												"src": "7233:91:30"
											},
											{
												"expression": {
													"id": 2914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2908,
															"name": "_delayedStrategyParams",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2384,
															"src": "7335:22:30",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
																"typeString": "mapping(uint256 => bytes storage ref)"
															}
														},
														"id": 2910,
														"indexExpression": {
															"id": 2909,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2878,
															"src": "7358:3:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7335:27:30",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage",
															"typeString": "bytes storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 2911,
															"name": "_stagedDelayedStrategyParams",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2388,
															"src": "7365:28:30",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
																"typeString": "mapping(uint256 => bytes storage ref)"
															}
														},
														"id": 2913,
														"indexExpression": {
															"id": 2912,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2878,
															"src": "7394:3:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7365:33:30",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage",
															"typeString": "bytes storage ref"
														}
													},
													"src": "7335:63:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage",
														"typeString": "bytes storage ref"
													}
												},
												"id": 2915,
												"nodeType": "ExpressionStatement",
												"src": "7335:63:30"
											},
											{
												"expression": {
													"id": 2919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "7409:40:30",
													"subExpression": {
														"baseExpression": {
															"id": 2916,
															"name": "_stagedDelayedStrategyParams",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2388,
															"src": "7416:28:30",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
																"typeString": "mapping(uint256 => bytes storage ref)"
															}
														},
														"id": 2918,
														"indexExpression": {
															"id": 2917,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2878,
															"src": "7445:3:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7416:33:30",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage",
															"typeString": "bytes storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2920,
												"nodeType": "ExpressionStatement",
												"src": "7409:40:30"
											},
											{
												"expression": {
													"id": 2924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "7460:43:30",
													"subExpression": {
														"baseExpression": {
															"id": 2921,
															"name": "_delayedStrategyParamsTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2392,
															"src": "7467:31:30",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2923,
														"indexExpression": {
															"id": 2922,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2878,
															"src": "7499:3:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7467:36:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2925,
												"nodeType": "ExpressionStatement",
												"src": "7460:43:30"
											}
										]
									},
									"documentation": {
										"id": 2876,
										"nodeType": "StructuredDocumentation",
										"src": "6900:42:30",
										"text": "@notice Commit Delayed Strategy Params"
									},
									"id": 2927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_commitDelayedStrategyParams",
									"nameLocation": "6957:28:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2878,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "6994:3:30",
												"nodeType": "VariableDeclaration",
												"scope": 2927,
												"src": "6986:11:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6986:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6985:13:30"
									},
									"returnParameters": {
										"id": 2880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7008:0:30"
									},
									"scope": 3181,
									"src": "6948:563:30",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2970,
										"nodeType": "Block",
										"src": "7733:372:30",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2935,
														"name": "_requireProtocolAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2735,
														"src": "7744:21:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 2936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7744:23:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2937,
												"nodeType": "ExpressionStatement",
												"src": "7744:23:30"
											},
											{
												"expression": {
													"id": 2942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2938,
															"name": "_stagedDelayedProtocolPerVaultParams",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2400,
															"src": "7778:36:30",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
																"typeString": "mapping(uint256 => bytes storage ref)"
															}
														},
														"id": 2940,
														"indexExpression": {
															"id": 2939,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2930,
															"src": "7815:3:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7778:41:30",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage",
															"typeString": "bytes storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2941,
														"name": "params",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2932,
														"src": "7822:6:30",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "7778:50:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage",
														"typeString": "bytes storage ref"
													}
												},
												"id": 2943,
												"nodeType": "ExpressionStatement",
												"src": "7778:50:30"
											},
											{
												"assignments": [
													2945
												],
												"declarations": [
													{
														"constant": false,
														"id": 2945,
														"mutability": "mutable",
														"name": "delayFactor",
														"nameLocation": "7847:11:30",
														"nodeType": "VariableDeclaration",
														"scope": 2970,
														"src": "7839:19:30",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2944,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7839:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2955,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2951,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 2946,
																	"name": "_delayedProtocolPerVaultParams",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2396,
																	"src": "7861:30:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
																		"typeString": "mapping(uint256 => bytes storage ref)"
																	}
																},
																"id": 2948,
																"indexExpression": {
																	"id": 2947,
																	"name": "nft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2930,
																	"src": "7892:3:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7861:35:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_storage",
																	"typeString": "bytes storage ref"
																}
															},
															"id": 2949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "7861:42:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7907:1:30",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7861:47:30",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "31",
														"id": 2953,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7915:1:30",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"id": 2954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "7861:55:30",
													"trueExpression": {
														"hexValue": "30",
														"id": 2952,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7911:1:30",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7839:77:30"
											},
											{
												"expression": {
													"id": 2968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2956,
															"name": "_delayedProtocolPerVaultParamsTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2404,
															"src": "7927:39:30",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2958,
														"indexExpression": {
															"id": 2957,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2930,
															"src": "7967:3:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7927:44:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2959,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "7987:5:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "7987:15:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 2961,
																			"name": "_internalParams",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2375,
																			"src": "8018:15:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_InternalParams_$1633_storage",
																				"typeString": "struct IVaultGovernance.InternalParams storage ref"
																			}
																		},
																		"id": 2962,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "protocolGovernance",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1626,
																		"src": "8018:34:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IProtocolGovernance_$610",
																			"typeString": "contract IProtocolGovernance"
																		}
																	},
																	"id": 2963,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "governanceDelay",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 466,
																	"src": "8018:50:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																		"typeString": "function () view external returns (uint256)"
																	}
																},
																"id": 2964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8018:52:30",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2965,
																"name": "delayFactor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2945,
																"src": "8086:11:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8018:79:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7987:110:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7927:170:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2969,
												"nodeType": "ExpressionStatement",
												"src": "7927:170:30"
											}
										]
									},
									"documentation": {
										"id": 2928,
										"nodeType": "StructuredDocumentation",
										"src": "7519:120:30",
										"text": "@notice Set Delayed Protocol Per Vault Params\n @param nft Nft of the vault\n @param params New params"
									},
									"id": 2971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_stageDelayedProtocolPerVaultParams",
									"nameLocation": "7654:35:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2930,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "7698:3:30",
												"nodeType": "VariableDeclaration",
												"scope": 2971,
												"src": "7690:11:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7690:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2932,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "7716:6:30",
												"nodeType": "VariableDeclaration",
												"scope": 2971,
												"src": "7703:19:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2931,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7703:5:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7689:34:30"
									},
									"returnParameters": {
										"id": 2934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7733:0:30"
									},
									"scope": 3181,
									"src": "7645:460:30",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3021,
										"nodeType": "Block",
										"src": "8239:562:30",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2977,
														"name": "_requireProtocolAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2735,
														"src": "8250:21:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 2978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8250:23:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2979,
												"nodeType": "ExpressionStatement",
												"src": "8250:23:30"
											},
											{
												"assignments": [
													2981
												],
												"declarations": [
													{
														"constant": false,
														"id": 2981,
														"mutability": "mutable",
														"name": "thisDelayedProtocolPerVaultParamsTimestamp",
														"nameLocation": "8292:42:30",
														"nodeType": "VariableDeclaration",
														"scope": 3021,
														"src": "8284:50:30",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2980,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8284:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2985,
												"initialValue": {
													"baseExpression": {
														"id": 2982,
														"name": "_delayedProtocolPerVaultParamsTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2404,
														"src": "8337:39:30",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 2984,
													"indexExpression": {
														"id": 2983,
														"name": "nft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2974,
														"src": "8377:3:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8337:44:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8284:97:30"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2987,
																"name": "thisDelayedProtocolPerVaultParamsTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2981,
																"src": "8400:42:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8446:1:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8400:47:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 2990,
																"name": "ExceptionsLibrary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1757,
																"src": "8449:17:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$1757_$",
																	"typeString": "type(library ExceptionsLibrary)"
																}
															},
															"id": 2991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "NULL",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1711,
															"src": "8449:22:30",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2986,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8392:7:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8392:80:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2993,
												"nodeType": "ExpressionStatement",
												"src": "8392:80:30"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2995,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "8491:5:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "8491:15:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2997,
																"name": "thisDelayedProtocolPerVaultParamsTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2981,
																"src": "8510:42:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8491:61:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 2999,
																"name": "ExceptionsLibrary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1757,
																"src": "8554:17:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$1757_$",
																	"typeString": "type(library ExceptionsLibrary)"
																}
															},
															"id": 3000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "TIMESTAMP",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1714,
															"src": "8554:27:30",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2994,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8483:7:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8483:99:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3002,
												"nodeType": "ExpressionStatement",
												"src": "8483:99:30"
											},
											{
												"expression": {
													"id": 3009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3003,
															"name": "_delayedProtocolPerVaultParams",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2396,
															"src": "8593:30:30",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
																"typeString": "mapping(uint256 => bytes storage ref)"
															}
														},
														"id": 3005,
														"indexExpression": {
															"id": 3004,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2974,
															"src": "8624:3:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8593:35:30",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage",
															"typeString": "bytes storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 3006,
															"name": "_stagedDelayedProtocolPerVaultParams",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2400,
															"src": "8631:36:30",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
																"typeString": "mapping(uint256 => bytes storage ref)"
															}
														},
														"id": 3008,
														"indexExpression": {
															"id": 3007,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2974,
															"src": "8668:3:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8631:41:30",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage",
															"typeString": "bytes storage ref"
														}
													},
													"src": "8593:79:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage",
														"typeString": "bytes storage ref"
													}
												},
												"id": 3010,
												"nodeType": "ExpressionStatement",
												"src": "8593:79:30"
											},
											{
												"expression": {
													"id": 3014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "8683:48:30",
													"subExpression": {
														"baseExpression": {
															"id": 3011,
															"name": "_stagedDelayedProtocolPerVaultParams",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2400,
															"src": "8690:36:30",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
																"typeString": "mapping(uint256 => bytes storage ref)"
															}
														},
														"id": 3013,
														"indexExpression": {
															"id": 3012,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2974,
															"src": "8727:3:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8690:41:30",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage",
															"typeString": "bytes storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3015,
												"nodeType": "ExpressionStatement",
												"src": "8683:48:30"
											},
											{
												"expression": {
													"id": 3019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "8742:51:30",
													"subExpression": {
														"baseExpression": {
															"id": 3016,
															"name": "_delayedProtocolPerVaultParamsTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2404,
															"src": "8749:39:30",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3018,
														"indexExpression": {
															"id": 3017,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2974,
															"src": "8789:3:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8749:44:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3020,
												"nodeType": "ExpressionStatement",
												"src": "8742:51:30"
											}
										]
									},
									"documentation": {
										"id": 2972,
										"nodeType": "StructuredDocumentation",
										"src": "8113:52:30",
										"text": "@notice Commit Delayed Protocol Per Vault Params"
									},
									"id": 3022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_commitDelayedProtocolPerVaultParams",
									"nameLocation": "8180:36:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2974,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "8225:3:30",
												"nodeType": "VariableDeclaration",
												"scope": 3022,
												"src": "8217:11:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8217:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8216:13:30"
									},
									"returnParameters": {
										"id": 2976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8239:0:30"
									},
									"scope": 3181,
									"src": "8171:630:30",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3057,
										"nodeType": "Block",
										"src": "8955:333:30",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3028,
														"name": "_requireProtocolAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2735,
														"src": "8966:21:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 3029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8966:23:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3030,
												"nodeType": "ExpressionStatement",
												"src": "8966:23:30"
											},
											{
												"assignments": [
													3032
												],
												"declarations": [
													{
														"constant": false,
														"id": 3032,
														"mutability": "mutable",
														"name": "delayFactor",
														"nameLocation": "9008:11:30",
														"nodeType": "VariableDeclaration",
														"scope": 3057,
														"src": "9000:19:30",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3031,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9000:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3040,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 3033,
																"name": "_delayedProtocolParams",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2406,
																"src": "9022:22:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_storage",
																	"typeString": "bytes storage ref"
																}
															},
															"id": 3034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "9022:29:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 3035,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9055:1:30",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "9022:34:30",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "31",
														"id": 3038,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9063:1:30",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"id": 3039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "9022:42:30",
													"trueExpression": {
														"hexValue": "30",
														"id": 3037,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9059:1:30",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9000:64:30"
											},
											{
												"expression": {
													"id": 3043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3041,
														"name": "_stagedDelayedProtocolParams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2408,
														"src": "9075:28:30",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage",
															"typeString": "bytes storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3042,
														"name": "params",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3025,
														"src": "9106:6:30",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "9075:37:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage",
														"typeString": "bytes storage ref"
													}
												},
												"id": 3044,
												"nodeType": "ExpressionStatement",
												"src": "9075:37:30"
											},
											{
												"expression": {
													"id": 3055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3045,
														"name": "_delayedProtocolParamsTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2410,
														"src": "9123:31:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3054,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 3046,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "9170:5:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "9170:15:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 3048,
																			"name": "_internalParams",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2375,
																			"src": "9201:15:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_InternalParams_$1633_storage",
																				"typeString": "struct IVaultGovernance.InternalParams storage ref"
																			}
																		},
																		"id": 3049,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "protocolGovernance",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1626,
																		"src": "9201:34:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IProtocolGovernance_$610",
																			"typeString": "contract IProtocolGovernance"
																		}
																	},
																	"id": 3050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "governanceDelay",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 466,
																	"src": "9201:50:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																		"typeString": "function () view external returns (uint256)"
																	}
																},
																"id": 3051,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9201:52:30",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 3052,
																"name": "delayFactor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3032,
																"src": "9269:11:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9201:79:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9170:110:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9123:157:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3056,
												"nodeType": "ExpressionStatement",
												"src": "9123:157:30"
											}
										]
									},
									"documentation": {
										"id": 3023,
										"nodeType": "StructuredDocumentation",
										"src": "8809:73:30",
										"text": "@notice Set Delayed Protocol Params\n @param params New params"
									},
									"id": 3058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_stageDelayedProtocolParams",
									"nameLocation": "8897:27:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3025,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "8938:6:30",
												"nodeType": "VariableDeclaration",
												"scope": 3058,
												"src": "8925:19:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3024,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8925:5:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8924:21:30"
									},
									"returnParameters": {
										"id": 3027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8955:0:30"
									},
									"scope": 3181,
									"src": "8888:400:30",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3092,
										"nodeType": "Block",
										"src": "9393:380:30",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3062,
														"name": "_requireProtocolAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2735,
														"src": "9404:21:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 3063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9404:23:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3064,
												"nodeType": "ExpressionStatement",
												"src": "9404:23:30"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3066,
																"name": "_delayedProtocolParamsTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2410,
																"src": "9446:31:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 3067,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9481:1:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9446:36:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 3069,
																"name": "ExceptionsLibrary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1757,
																"src": "9484:17:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$1757_$",
																	"typeString": "type(library ExceptionsLibrary)"
																}
															},
															"id": 3070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "NULL",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1711,
															"src": "9484:22:30",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3065,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9438:7:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9438:69:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3072,
												"nodeType": "ExpressionStatement",
												"src": "9438:69:30"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3074,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "9526:5:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 3075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "9526:15:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 3076,
																"name": "_delayedProtocolParamsTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2410,
																"src": "9545:31:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9526:50:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 3078,
																"name": "ExceptionsLibrary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1757,
																"src": "9578:17:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$1757_$",
																	"typeString": "type(library ExceptionsLibrary)"
																}
															},
															"id": 3079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "TIMESTAMP",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1714,
															"src": "9578:27:30",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3073,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9518:7:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9518:88:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3081,
												"nodeType": "ExpressionStatement",
												"src": "9518:88:30"
											},
											{
												"expression": {
													"id": 3084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3082,
														"name": "_delayedProtocolParams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2406,
														"src": "9617:22:30",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage",
															"typeString": "bytes storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3083,
														"name": "_stagedDelayedProtocolParams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2408,
														"src": "9642:28:30",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage",
															"typeString": "bytes storage ref"
														}
													},
													"src": "9617:53:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage",
														"typeString": "bytes storage ref"
													}
												},
												"id": 3085,
												"nodeType": "ExpressionStatement",
												"src": "9617:53:30"
											},
											{
												"expression": {
													"id": 3087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "9681:35:30",
													"subExpression": {
														"id": 3086,
														"name": "_stagedDelayedProtocolParams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2408,
														"src": "9688:28:30",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage",
															"typeString": "bytes storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3088,
												"nodeType": "ExpressionStatement",
												"src": "9681:35:30"
											},
											{
												"expression": {
													"id": 3090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "9727:38:30",
													"subExpression": {
														"id": 3089,
														"name": "_delayedProtocolParamsTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2410,
														"src": "9734:31:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3091,
												"nodeType": "ExpressionStatement",
												"src": "9727:38:30"
											}
										]
									},
									"documentation": {
										"id": 3059,
										"nodeType": "StructuredDocumentation",
										"src": "9296:42:30",
										"text": "@notice Commit Delayed Protocol Params"
									},
									"id": 3093,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_commitDelayedProtocolParams",
									"nameLocation": "9353:28:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9381:2:30"
									},
									"returnParameters": {
										"id": 3061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9393:0:30"
									},
									"scope": 3181,
									"src": "9344:429:30",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3111,
										"nodeType": "Block",
										"src": "10007:87:30",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3102,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3096,
															"src": "10042:3:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3101,
														"name": "_requireAtLeastStrategy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2720,
														"src": "10018:23:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 3103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10018:28:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3104,
												"nodeType": "ExpressionStatement",
												"src": "10018:28:30"
											},
											{
												"expression": {
													"id": 3109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3105,
															"name": "_strategyParams",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2414,
															"src": "10057:15:30",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
																"typeString": "mapping(uint256 => bytes storage ref)"
															}
														},
														"id": 3107,
														"indexExpression": {
															"id": 3106,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3096,
															"src": "10073:3:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10057:20:30",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage",
															"typeString": "bytes storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3108,
														"name": "params",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3098,
														"src": "10080:6:30",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "10057:29:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage",
														"typeString": "bytes storage ref"
													}
												},
												"id": 3110,
												"nodeType": "ExpressionStatement",
												"src": "10057:29:30"
											}
										]
									},
									"documentation": {
										"id": 3094,
										"nodeType": "StructuredDocumentation",
										"src": "9781:149:30",
										"text": "@notice Set immediate strategy params\n @dev Should require nft > 0\n @param nft Nft of the vault\n @param params New params"
									},
									"id": 3112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setStrategyParams",
									"nameLocation": "9945:18:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3096,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "9972:3:30",
												"nodeType": "VariableDeclaration",
												"scope": 3112,
												"src": "9964:11:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9964:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3098,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "9990:6:30",
												"nodeType": "VariableDeclaration",
												"scope": 3112,
												"src": "9977:19:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3097,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9977:5:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9963:34:30"
									},
									"returnParameters": {
										"id": 3100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10007:0:30"
									},
									"scope": 3181,
									"src": "9936:158:30",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3125,
										"nodeType": "Block",
										"src": "10241:79:30",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3118,
														"name": "_requireAtLeastOperator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2761,
														"src": "10252:23:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 3119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10252:25:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3120,
												"nodeType": "ExpressionStatement",
												"src": "10252:25:30"
											},
											{
												"expression": {
													"id": 3123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3121,
														"name": "_operatorParams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2418,
														"src": "10288:15:30",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage",
															"typeString": "bytes storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3122,
														"name": "params",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3115,
														"src": "10306:6:30",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "10288:24:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage",
														"typeString": "bytes storage ref"
													}
												},
												"id": 3124,
												"nodeType": "ExpressionStatement",
												"src": "10288:24:30"
											}
										]
									},
									"documentation": {
										"id": 3113,
										"nodeType": "StructuredDocumentation",
										"src": "10102:75:30",
										"text": "@notice Set immediate operator params\n @param params New params"
									},
									"id": 3126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setOperatorParams",
									"nameLocation": "10192:18:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3115,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "10224:6:30",
												"nodeType": "VariableDeclaration",
												"scope": 3126,
												"src": "10211:19:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10211:5:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10210:21:30"
									},
									"returnParameters": {
										"id": 3117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10241:0:30"
									},
									"scope": 3181,
									"src": "10183:137:30",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3139,
										"nodeType": "Block",
										"src": "10467:77:30",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3132,
														"name": "_requireProtocolAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2735,
														"src": "10478:21:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 3133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10478:23:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3134,
												"nodeType": "ExpressionStatement",
												"src": "10478:23:30"
											},
											{
												"expression": {
													"id": 3137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3135,
														"name": "_protocolParams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2416,
														"src": "10512:15:30",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage",
															"typeString": "bytes storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3136,
														"name": "params",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3129,
														"src": "10530:6:30",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "10512:24:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage",
														"typeString": "bytes storage ref"
													}
												},
												"id": 3138,
												"nodeType": "ExpressionStatement",
												"src": "10512:24:30"
											}
										]
									},
									"documentation": {
										"id": 3127,
										"nodeType": "StructuredDocumentation",
										"src": "10328:75:30",
										"text": "@notice Set immediate protocol params\n @param params New params"
									},
									"id": 3140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setProtocolParams",
									"nameLocation": "10418:18:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3129,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "10450:6:30",
												"nodeType": "VariableDeclaration",
												"scope": 3140,
												"src": "10437:19:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3128,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10437:5:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10436:21:30"
									},
									"returnParameters": {
										"id": 3131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10467:0:30"
									},
									"scope": 3181,
									"src": "10409:135:30",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3141,
										"nodeType": "StructuredDocumentation",
										"src": "10625:295:30",
										"text": "@notice Emitted when InternalParams are staged for commit\n @param origin Origin of the transaction (tx.origin)\n @param sender Sender of the call (msg.sender)\n @param params New params that were staged for commit\n @param when When the params could be committed"
									},
									"id": 3152,
									"name": "StagedInternalParams",
									"nameLocation": "10932:20:30",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3143,
												"indexed": true,
												"mutability": "mutable",
												"name": "origin",
												"nameLocation": "10969:6:30",
												"nodeType": "VariableDeclaration",
												"scope": 3152,
												"src": "10953:22:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10953:7:30",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3145,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "10993:6:30",
												"nodeType": "VariableDeclaration",
												"scope": 3152,
												"src": "10977:22:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10977:7:30",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3148,
												"indexed": false,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "11016:6:30",
												"nodeType": "VariableDeclaration",
												"scope": 3152,
												"src": "11001:21:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InternalParams_$1633_memory_ptr",
													"typeString": "struct IVaultGovernance.InternalParams"
												},
												"typeName": {
													"id": 3147,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3146,
														"name": "InternalParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1633,
														"src": "11001:14:30"
													},
													"referencedDeclaration": 1633,
													"src": "11001:14:30",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InternalParams_$1633_storage_ptr",
														"typeString": "struct IVaultGovernance.InternalParams"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3150,
												"indexed": false,
												"mutability": "mutable",
												"name": "when",
												"nameLocation": "11032:4:30",
												"nodeType": "VariableDeclaration",
												"scope": 3152,
												"src": "11024:12:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11024:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10952:85:30"
									},
									"src": "10926:112:30"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3153,
										"nodeType": "StructuredDocumentation",
										"src": "11046:239:30",
										"text": "@notice Emitted when InternalParams are staged for commit\n @param origin Origin of the transaction (tx.origin)\n @param sender Sender of the call (msg.sender)\n @param params New params that were staged for commit"
									},
									"id": 3162,
									"name": "CommitedInternalParams",
									"nameLocation": "11297:22:30",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3155,
												"indexed": true,
												"mutability": "mutable",
												"name": "origin",
												"nameLocation": "11336:6:30",
												"nodeType": "VariableDeclaration",
												"scope": 3162,
												"src": "11320:22:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11320:7:30",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3157,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "11360:6:30",
												"nodeType": "VariableDeclaration",
												"scope": 3162,
												"src": "11344:22:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11344:7:30",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3160,
												"indexed": false,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "11383:6:30",
												"nodeType": "VariableDeclaration",
												"scope": 3162,
												"src": "11368:21:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InternalParams_$1633_memory_ptr",
													"typeString": "struct IVaultGovernance.InternalParams"
												},
												"typeName": {
													"id": 3159,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3158,
														"name": "InternalParams",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1633,
														"src": "11368:14:30"
													},
													"referencedDeclaration": 1633,
													"src": "11368:14:30",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InternalParams_$1633_storage_ptr",
														"typeString": "struct IVaultGovernance.InternalParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11319:71:30"
									},
									"src": "11291:100:30"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3163,
										"nodeType": "StructuredDocumentation",
										"src": "11399:512:30",
										"text": "@notice Emitted when New Vault is deployed\n @param origin Origin of the transaction (tx.origin)\n @param sender Sender of the call (msg.sender)\n @param vaultTokens Vault tokens for this vault\n @param options Options for deploy. The details of the options structure are specified in subcontracts\n @param owner Owner of the VaultRegistry NFT for this vault\n @param vaultAddress Address of the new Vault\n @param vaultNft VaultRegistry NFT for the new Vault"
									},
									"id": 3180,
									"name": "DeployedVault",
									"nameLocation": "11923:13:30",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3165,
												"indexed": true,
												"mutability": "mutable",
												"name": "origin",
												"nameLocation": "11963:6:30",
												"nodeType": "VariableDeclaration",
												"scope": 3180,
												"src": "11947:22:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11947:7:30",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3167,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "11996:6:30",
												"nodeType": "VariableDeclaration",
												"scope": 3180,
												"src": "11980:22:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11980:7:30",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3170,
												"indexed": false,
												"mutability": "mutable",
												"name": "vaultTokens",
												"nameLocation": "12023:11:30",
												"nodeType": "VariableDeclaration",
												"scope": 3180,
												"src": "12013:21:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3168,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "12013:7:30",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3169,
													"nodeType": "ArrayTypeName",
													"src": "12013:9:30",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3172,
												"indexed": false,
												"mutability": "mutable",
												"name": "options",
												"nameLocation": "12051:7:30",
												"nodeType": "VariableDeclaration",
												"scope": 3180,
												"src": "12045:13:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3171,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12045:5:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3174,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12077:5:30",
												"nodeType": "VariableDeclaration",
												"scope": 3180,
												"src": "12069:13:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12069:7:30",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3176,
												"indexed": false,
												"mutability": "mutable",
												"name": "vaultAddress",
												"nameLocation": "12101:12:30",
												"nodeType": "VariableDeclaration",
												"scope": 3180,
												"src": "12093:20:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12093:7:30",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3178,
												"indexed": false,
												"mutability": "mutable",
												"name": "vaultNft",
												"nameLocation": "12132:8:30",
												"nodeType": "VariableDeclaration",
												"scope": 3180,
												"src": "12124:16:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12124:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11936:211:30"
									},
									"src": "11917:231:30"
								}
							],
							"scope": 3182,
							"src": "678:11473:30",
							"usedErrors": []
						}
					],
					"src": "38:12115:30"
				},
				"id": 30
			}
		}
	}
}